/*! For license information please see main.7f9f668b.js.LICENSE.txt */
(()=>{var e={16:function(e,t,n){var r;!function(e,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},29:function(e,t,n){var r;r=function(e){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(e,t,n){"use strict";n.r(t);var r=n("react"),s=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},e(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),i=function(){return i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e},i.apply(this,arguments)},a=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};function o(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}"undefined"!==typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(e){var t=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return t?new Promise((function(n,r){t.call(navigator,e,n,r)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}));var l=function(e){function t(t){var n=e.call(this,t)||this;return n.canvas=null,n.ctx=null,n.requestUserMediaId=0,n.unmounted=!1,n.state={hasUserMedia:!1},n}return s(t,e),t.prototype.componentDidMount=function(){var e=this.state,t=this.props;this.unmounted=!1,o()?(e.hasUserMedia||this.requestUserMedia(),t.children&&"function"!=typeof t.children&&console.warn("children must be a function")):t.onUserMediaError("getUserMedia not supported")},t.prototype.componentDidUpdate=function(e){var t=this.props;if(o()){var n=JSON.stringify(e.audioConstraints)!==JSON.stringify(t.audioConstraints),r=JSON.stringify(e.videoConstraints)!==JSON.stringify(t.videoConstraints),s=e.minScreenshotWidth!==t.minScreenshotWidth,i=e.minScreenshotHeight!==t.minScreenshotHeight;(r||s||i)&&(this.canvas=null,this.ctx=null),(n||r)&&(this.stopAndCleanup(),this.requestUserMedia())}else t.onUserMediaError("getUserMedia not supported")},t.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},t.stopMediaStream=function(e){e&&(e.getVideoTracks&&e.getAudioTracks?(e.getVideoTracks().map((function(t){e.removeTrack(t),t.stop()})),e.getAudioTracks().map((function(t){e.removeTrack(t),t.stop()}))):e.stop())},t.prototype.stopAndCleanup=function(){var e=this.state;e.hasUserMedia&&(t.stopMediaStream(this.stream),e.src&&window.URL.revokeObjectURL(e.src))},t.prototype.getScreenshot=function(e){var t=this.state,n=this.props;if(!t.hasUserMedia)return null;var r=this.getCanvas(e);return r&&r.toDataURL(n.screenshotFormat,n.screenshotQuality)},t.prototype.getCanvas=function(e){var t=this.state,n=this.props;if(!this.video)return null;if(!t.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var r=this.video.videoWidth,s=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var i=r/s;s=(r=n.minScreenshotWidth||this.video.clientWidth)/i,n.minScreenshotHeight&&s<n.minScreenshotHeight&&(r=(s=n.minScreenshotHeight)*i)}this.canvas=document.createElement("canvas"),this.canvas.width=(null===e||void 0===e?void 0:e.width)||r,this.canvas.height=(null===e||void 0===e?void 0:e.height)||s,this.ctx=this.canvas.getContext("2d")}var a=this.ctx,o=this.canvas;return a&&o&&(o.width=(null===e||void 0===e?void 0:e.width)||o.width,o.height=(null===e||void 0===e?void 0:e.height)||o.height,n.mirrored&&(a.translate(o.width,0),a.scale(-1,1)),a.imageSmoothingEnabled=n.imageSmoothing,a.drawImage(this.video,0,0,(null===e||void 0===e?void 0:e.width)||o.width,(null===e||void 0===e?void 0:e.height)||o.height),n.mirrored&&(a.scale(-1,1),a.translate(-o.width,0))),o},t.prototype.requestUserMedia=function(){var e=this,n=this.props,r=function(r,s){var i={video:"undefined"===typeof s||s};n.audio&&(i.audio="undefined"===typeof r||r),e.requestUserMediaId++;var a=e.requestUserMediaId;navigator.mediaDevices.getUserMedia(i).then((function(n){e.unmounted||a!==e.requestUserMediaId?t.stopMediaStream(n):e.handleUserMedia(null,n)})).catch((function(t){e.handleUserMedia(t)}))};if("mediaDevices"in navigator)r(n.audioConstraints,n.videoConstraints);else{var s=function(e){return{optional:[{sourceId:e}]}},i=function(e){var t=e.deviceId;return"string"===typeof t?t:Array.isArray(t)&&t.length>0?t[0]:"object"===typeof t&&t.ideal?t.ideal:null};MediaStreamTrack.getSources((function(e){var t=null,a=null;e.forEach((function(e){"audio"===e.kind?t=e.id:"video"===e.kind&&(a=e.id)}));var o=i(n.audioConstraints);o&&(t=o);var l=i(n.videoConstraints);l&&(a=l),r(s(t),s(a))}))}},t.prototype.handleUserMedia=function(e,t){var n=this.props;if(e||!t)return this.setState({hasUserMedia:!1}),void n.onUserMediaError(e);this.stream=t;try{this.video&&(this.video.srcObject=t),this.setState({hasUserMedia:!0})}catch(r){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(t)})}n.onUserMedia(t)},t.prototype.render=function(){var e=this,t=this.state,n=this.props,s=n.audio,o=(n.forceScreenshotSourceSize,n.disablePictureInPicture),l=(n.onUserMedia,n.onUserMediaError,n.screenshotFormat,n.screenshotQuality,n.minScreenshotWidth,n.minScreenshotHeight,n.audioConstraints,n.videoConstraints,n.imageSmoothing,n.mirrored),u=n.style,c=void 0===u?{}:u,h=n.children,d=a(n,["audio","forceScreenshotSourceSize","disablePictureInPicture","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),p=l?i(i({},c),{transform:(c.transform||"")+" scaleX(-1)"}):c,f={getScreenshot:this.getScreenshot.bind(this)};return r.createElement(r.Fragment,null,r.createElement("video",i({autoPlay:!0,disablePictureInPicture:o,src:t.src,muted:!s,playsInline:!0,ref:function(t){e.video=t},style:p},d)),h&&h(f))},t.defaultProps={audio:!1,disablePictureInPicture:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},t}(r.Component);t.default=l},react:function(t,n){t.exports=e}}).default},e.exports=r(n(43))},43:(e,t,n)=>{"use strict";e.exports=n(202)},45:(e,t,n)=>{var r=n(738).default;e.exports=function(e,t){if("object"!=r(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var s=n.call(e,t||"default");if("object"!=r(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)},e.exports.__esModule=!0,e.exports.default=e.exports},66:function(e,t,n){var r;!function(e,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},79:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r},e.exports.__esModule=!0,e.exports.default=e.exports},108:()=>{},122:(e,t,n)=>{var r=n(79);e.exports=function(e,t){if(e){if("string"==typeof e)return r(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},153:(e,t,n)=>{"use strict";var r=n(43),s=Symbol.for("react.element"),i=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,n){var r,i={},u=null,c=null;for(r in void 0!==n&&(u=""+n),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(c=t.ref),t)a.call(t,r)&&!l.hasOwnProperty(r)&&(i[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===i[r]&&(i[r]=t[r]);return{$$typeof:s,type:e,key:u,ref:c,props:i,_owner:o.current}}t.jsx=u,t.jsxs=u},156:e=>{e.exports=function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,s,i,a,o=[],l=!0,u=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(o.push(r.value),o.length!==t);l=!0);}catch(e){u=!0,s=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return o}},e.exports.__esModule=!0,e.exports.default=e.exports},202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var x=v.prototype=new b;x.constructor=v,m(x,y.prototype),x.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function I(e,t,r){var s,i={},a=null,o=null;if(null!=t)for(s in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(a=""+t.key),t)k.call(t,s)&&!C.hasOwnProperty(s)&&(i[s]=t[s]);var l=arguments.length-2;if(1===l)i.children=r;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];i.children=u}if(e&&e.defaultProps)for(s in l=e.defaultProps)void 0===i[s]&&(i[s]=l[s]);return{$$typeof:n,type:e,key:a,ref:o,props:i,_owner:S.current}}function _(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var T=/\/+/g;function N(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function E(e,t,s,i,a){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case r:l=!0}}if(l)return a=a(l=e),e=""===i?"."+N(l,0):i,w(a)?(s="",null!=e&&(s=e.replace(T,"$&/")+"/"),E(a,t,s,"",(function(e){return e}))):null!=a&&(_(a)&&(a=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(a,s+(!a.key||l&&l.key===a.key?"":(""+a.key).replace(T,"$&/")+"/")+e)),t.push(a)),1;if(l=0,i=""===i?".":i+":",w(e))for(var u=0;u<e.length;u++){var c=i+N(o=e[u],u);l+=E(o,t,s,c,a)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),u=0;!(o=e.next()).done;)l+=E(o=o.value,t,s,c=i+N(o,u++),a);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function $(e,t,n){if(null==e)return e;var r=[],s=0;return E(e,r,"","",(function(e){return t.call(n,e,s++)})),r}function A(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R={current:null},O={transition:null},D={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:O,ReactCurrentOwner:S};t.Children={map:$,forEach:function(e,t,n){$(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return $(e,(function(){t++})),t},toArray:function(e){return $(e,(function(e){return e}))||[]},only:function(e){if(!_(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=s,t.Profiler=a,t.PureComponent=v,t.StrictMode=i,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var s=m({},e.props),i=e.key,a=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,o=S.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)k.call(t,u)&&!C.hasOwnProperty(u)&&(s[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)s.children=r;else if(1<u){l=Array(u);for(var c=0;c<u;c++)l[c]=arguments[c+2];s.children=l}return{$$typeof:n,type:e.type,key:i,ref:a,props:s,_owner:o}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=I,t.createFactory=function(e){var t=I.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:A}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=O.transition;O.transition={};try{e()}finally{O.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return R.current.useCallback(e,t)},t.useContext=function(e){return R.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return R.current.useDeferredValue(e)},t.useEffect=function(e,t){return R.current.useEffect(e,t)},t.useId=function(){return R.current.useId()},t.useImperativeHandle=function(e,t,n){return R.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return R.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return R.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return R.current.useMemo(e,t)},t.useReducer=function(e,t,n){return R.current.useReducer(e,t,n)},t.useRef=function(e){return R.current.useRef(e)},t.useState=function(e){return R.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return R.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return R.current.useTransition()},t.version="18.2.0"},234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,s=e[r];if(!(0<i(s,t)))break e;e[r]=t,e[n]=s,n=r}}function r(e){return 0===e.length?null:e[0]}function s(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,s=e.length,a=s>>>1;r<a;){var o=2*(r+1)-1,l=e[o],u=o+1,c=e[u];if(0>i(l,n))u<s&&0>i(c,l)?(e[r]=c,e[u]=n,r=u):(e[r]=l,e[o]=n,r=o);else{if(!(u<s&&0>i(c,n)))break e;e[r]=c,e[u]=n,r=u}}}return t}function i(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var a=performance;t.unstable_now=function(){return a.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}var u=[],c=[],h=1,d=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var t=r(c);null!==t;){if(null===t.callback)s(c);else{if(!(t.startTime<=e))break;s(c),t.sortIndex=t.expirationTime,n(u,t)}t=r(c)}}function w(e){if(g=!1,x(e),!m)if(null!==r(u))m=!0,O(k);else{var t=r(c);null!==t&&D(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(_),_=-1),f=!0;var i=p;try{for(x(n),d=r(u);null!==d&&(!(d.expirationTime>n)||e&&!E());){var a=d.callback;if("function"===typeof a){d.callback=null,p=d.priorityLevel;var o=a(d.expirationTime<=n);n=t.unstable_now(),"function"===typeof o?d.callback=o:d===r(u)&&s(u),x(n)}else s(u);d=r(u)}if(null!==d)var l=!0;else{var h=r(c);null!==h&&D(w,h.startTime-n),l=!1}return l}finally{d=null,p=i,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,C=!1,I=null,_=-1,T=5,N=-1;function E(){return!(t.unstable_now()-N<T)}function $(){if(null!==I){var e=t.unstable_now();N=e;var n=!0;try{n=I(!0,e)}finally{n?S():(C=!1,I=null)}}else C=!1}if("function"===typeof v)S=function(){v($)};else if("undefined"!==typeof MessageChannel){var A=new MessageChannel,R=A.port2;A.port1.onmessage=$,S=function(){R.postMessage(null)}}else S=function(){y($,0)};function O(e){I=e,C||(C=!0,S())}function D(e,n){_=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,O(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(u)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,s,i){var a=t.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?a+i:a:i=a,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:h++,callback:s,priorityLevel:e,startTime:i,expirationTime:o=i+o,sortIndex:-1},i>a?(e.sortIndex=i,n(c,e),null===r(u)&&e===r(c)&&(g?(b(_),_=-1):g=!0,D(w,i-a))):(e.sortIndex=o,n(u,e),m||f||(m=!0,O(k))),e},t.unstable_shouldYield=E,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},262:function(e,t,n){var r;!function(e,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var r;!function(e,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,i=t.i;return t.w=r=r+1640531527|0,n=s[i+34&127],e=s[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,s,i,a,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,i=-32;i<l;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=a,e.X=o,e.i=s}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},334:(e,t,n)=>{var r=n(359),s=n(66),i=n(16),a=n(538),o=n(288),l=n(262),u=n(430);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,e.exports=u},353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(I){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},i={};function a(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=l(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=a,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),i=g,a=0;a<e.length;a+=8){var l=Math.min(8,e.length-a),h=parseInt(e.substring(a,a+l),n);if(l<8){var d=o(u(n,l));i=i.mul(d).add(o(h))}else i=(i=i.mul(s)).add(o(h))}return i.unsigned=t,i}function h(e,t){return"number"===typeof e?o(e,t):"string"===typeof e?c(e,t):l(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=a(1<<24),g=a(0);n.ZERO=g;var y=a(0,!0);n.UZERO=y;var b=a(1);n.ONE=b;var v=a(1,!0);n.UONE=v;var x=a(-1);n.NEG_ONE=x;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=l(0,-2147483648,!1);n.MIN_VALUE=S;var C=n.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},C.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),i=this,a="";;){var l=i.div(s),c=(i.sub(l.mul(s)).toInt()>>>0).toString(e);if((i=l).isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1===(1&this.low)},C.isEven=function(){return 0===(1&this.low)},C.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},C.neg=C.negate,C.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,i=65535&this.low,a=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=i+(65535&e.low))>>>16,d+=(p+=s+u)>>>16,c+=(d+=n+o)>>>16,c+=t+a,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},C.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,i=this.low>>>16,a=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=a*p)>>>16,y+=(b+=i*p)>>>16,b&=65535,y+=(b+=a*d)>>>16,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*d)>>>16,y&=65535,f+=(y+=a*c)>>>16,f+=n*p+s*d+i*c+a*u,l((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,i;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;i=y}else{if(this.eq(S))return e.eq(b)||e.eq(x)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(s=this.sub(e.mul(n)),i=n.add(s.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:u(2,a-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=b),i=i.add(d),s=s.sub(p)}return i},C.div=C.divide,C.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return l(~this.low,~this.high,this.unsigned)},C.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},359:function(e,t,n){var r;!function(e,s){function i(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},383:e=>{e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},e.exports.__esModule=!0,e.exports.default=e.exports},391:(e,t,n)=>{"use strict";var r=n(950);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},430:function(e,t,n){var r;!function(s,i,a){var o,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(i)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(i)]}}():e,3),r),p=new f(r),v=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(b(p.S),i),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(v,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+e[s%n]+(t=a[s])],a[i]=t;(r.g=function(e){for(var t,n=0,s=r.i,i=r.j,a=r.S;e--;)t=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+t])+(a[i]=t)];return r.i=s,r.j=i,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(i){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(a.random(),i),e.exports){e.exports=p;try{o=n(996)}catch(v){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)},530:()=>{},538:function(e,t,n){var r;!function(e,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},551:()=>{},579:(e,t,n)=>{"use strict";e.exports=n(153)},590:()=>{},715:(e,t,n)=>{var r=n(987),s=n(156),i=n(122),a=n(752);e.exports=function(e,t){return r(e)||s(e,t)||i(e,t)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},730:(e,t,n)=>{"use strict";var r=n(43),s=n(853);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var a=new Set,o={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(o[e]=t,e=0;e<t.length;e++)a.add(t[e])}var c=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),h=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,r,s,i,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=s,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=a}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,t,n,r){var s=g.hasOwnProperty(t)?g[t]:null;(null!==s?0!==s.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,s,r)&&(n=null),r||null===s?function(e){return!!h.call(f,e)||!h.call(p,e)&&(d.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):s.mustUseProperty?e[s.propertyName]=null===n?3!==s.type&&"":n:(t=s.attributeName,r=s.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(s=s.type)||4===s&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),T=Symbol.for("react.context"),N=Symbol.for("react.forward_ref"),E=Symbol.for("react.suspense"),$=Symbol.for("react.suspense_list"),A=Symbol.for("react.memo"),R=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var O=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var D=Symbol.iterator;function F(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=D&&e[D]||e["@@iterator"])?e:null}var M,P=Object.assign;function z(e){if(void 0===M)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var L=!1;function B(e,t){if(!e||L)return"";L=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var r=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){r=u}e.call(t.prototype)}else{try{throw Error()}catch(u){r=u}e()}}catch(u){if(u&&r&&"string"===typeof u.stack){for(var s=u.stack.split("\n"),i=r.stack.split("\n"),a=s.length-1,o=i.length-1;1<=a&&0<=o&&s[a]!==i[o];)o--;for(;1<=a&&0<=o;a--,o--)if(s[a]!==i[o]){if(1!==a||1!==o)do{if(a--,0>--o||s[a]!==i[o]){var l="\n"+s[a].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=a&&0<=o);break}}}finally{L=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?z(e):""}function V(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return e=B(e.type,!1);case 11:return e=B(e.type.render,!1);case 1:return e=B(e.type,!0);default:return""}}function W(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case I:return"Profiler";case C:return"StrictMode";case E:return"Suspense";case $:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case _:return(e._context.displayName||"Context")+".Provider";case N:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case A:return null!==(t=e.displayName||null)?t:W(e.type)||"Memo";case R:t=e._payload,e=e._init;try{return W(e(t))}catch(n){}}return null}function U(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return W(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function G(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function H(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var s=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return s.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=j(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function K(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return P({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=G(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function Z(e,t){Q(e,t);var n=G(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,G(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var s=0;s<n.length;s++)t["$"+n[s]]=!0;for(n=0;n<e.length;n++)s=t.hasOwnProperty("$"+e[n].value),e[n].selected!==s&&(e[n].selected=s),s&&r&&(e[n].defaultSelected=!0)}else{for(n=""+G(n),t=null,s=0;s<e.length;s++){if(e[s].value===n)return e[s].selected=!0,void(r&&(e[s].defaultSelected=!0));null!==t||e[s].disabled||(t=e[s])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return P({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(te(n)){if(1<n.length)throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:G(n)}}function ie(e,t){var n=G(t.value),r=G(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ae(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,he=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),s=me(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,s):e[n]=s}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=P({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Ce=null;function Ie(e){if(e=vs(e)){if("function"!==typeof ke)throw Error(i(280));var t=e.stateNode;t&&(t=ws(t),ke(e.stateNode,e.type,t))}}function _e(e){Se?Ce?Ce.push(e):Ce=[e]:Se=e}function Te(){if(Se){var e=Se,t=Ce;if(Ce=Se=null,Ie(e),t)for(e=0;e<t.length;e++)Ie(t[e])}}function Ne(e,t){return e(t)}function Ee(){}var $e=!1;function Ae(e,t,n){if($e)return e(t,n);$e=!0;try{return Ne(e,t,n)}finally{$e=!1,(null!==Se||null!==Ce)&&(Ee(),Te())}}function Re(e,t){var n=e.stateNode;if(null===n)return null;var r=ws(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(i(231,t,typeof n));return n}var Oe=!1;if(c)try{var De={};Object.defineProperty(De,"passive",{get:function(){Oe=!0}}),window.addEventListener("test",De,De),window.removeEventListener("test",De,De)}catch(ce){Oe=!1}function Fe(e,t,n,r,s,i,a,o,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var Me=!1,Pe=null,ze=!1,Le=null,Be={onError:function(e){Me=!0,Pe=e}};function Ve(e,t,n,r,s,i,a,o,l){Me=!1,Pe=null,Fe.apply(Be,arguments)}function We(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ue(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ge(e){if(We(e)!==e)throw Error(i(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=We(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var s=n.return;if(null===s)break;var a=s.alternate;if(null===a){if(null!==(r=s.return)){n=r;continue}break}if(s.child===a.child){for(a=s.child;a;){if(a===n)return Ge(s),e;if(a===r)return Ge(s),t;a=a.sibling}throw Error(i(188))}if(n.return!==r.return)n=s,r=a;else{for(var o=!1,l=s.child;l;){if(l===n){o=!0,n=s,r=a;break}if(l===r){o=!0,r=s,n=a;break}l=l.sibling}if(!o){for(l=a.child;l;){if(l===n){o=!0,n=a,r=s;break}if(l===r){o=!0,r=a,n=s;break}l=l.sibling}if(!o)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e))?He(e):null}function He(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=He(e);if(null!==t)return t;e=e.sibling}return null}var qe=s.unstable_scheduleCallback,Ke=s.unstable_cancelCallback,Xe=s.unstable_shouldYield,Ye=s.unstable_requestPaint,Qe=s.unstable_now,Ze=s.unstable_getCurrentPriorityLevel,Je=s.unstable_ImmediatePriority,et=s.unstable_UserBlockingPriority,tt=s.unstable_NormalPriority,nt=s.unstable_LowPriority,rt=s.unstable_IdlePriority,st=null,it=null;var at=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(ot(e)/lt|0)|0},ot=Math.log,lt=Math.LN2;var ut=64,ct=4194304;function ht(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,s=e.suspendedLanes,i=e.pingedLanes,a=268435455&n;if(0!==a){var o=a&~s;0!==o?r=ht(o):0!==(i&=a)&&(r=ht(i))}else 0!==(a=n&~s)?r=ht(a):0!==i&&(r=ht(i));if(0===r)return 0;if(0!==t&&t!==r&&0===(t&s)&&((s=r&-r)>=(i=t&-t)||16===s&&0!==(4194240&i)))return t;if(0!==(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)s=1<<(n=31-at(t)),r|=e[n],t&=~s;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ut;return 0===(4194240&(ut<<=1))&&(ut=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-at(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-at(n),s=1<<r;s&t|e[r]&t&&(e[r]|=t),n&=~s}}var vt=0;function xt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,St,Ct,It,_t=!1,Tt=[],Nt=null,Et=null,$t=null,At=new Map,Rt=new Map,Ot=[],Dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ft(e,t){switch(e){case"focusin":case"focusout":Nt=null;break;case"dragenter":case"dragleave":Et=null;break;case"mouseover":case"mouseout":$t=null;break;case"pointerover":case"pointerout":At.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rt.delete(t.pointerId)}}function Mt(e,t,n,r,s,i){return null===e||e.nativeEvent!==i?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:i,targetContainers:[s]},null!==t&&(null!==(t=vs(t))&&kt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==s&&-1===t.indexOf(s)&&t.push(s),e)}function Pt(e){var t=bs(e.target);if(null!==t){var n=We(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ue(n)))return e.blockedOn=t,void It(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function zt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=vs(n))&&kt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);xe=r,n.target.dispatchEvent(r),xe=null,t.shift()}return!0}function Lt(e,t,n){zt(e)&&n.delete(t)}function Bt(){_t=!1,null!==Nt&&zt(Nt)&&(Nt=null),null!==Et&&zt(Et)&&(Et=null),null!==$t&&zt($t)&&($t=null),At.forEach(Lt),Rt.forEach(Lt)}function Vt(e,t){e.blockedOn===t&&(e.blockedOn=null,_t||(_t=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,Bt)))}function Wt(e){function t(t){return Vt(t,e)}if(0<Tt.length){Vt(Tt[0],e);for(var n=1;n<Tt.length;n++){var r=Tt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Nt&&Vt(Nt,e),null!==Et&&Vt(Et,e),null!==$t&&Vt($t,e),At.forEach(t),Rt.forEach(t),n=0;n<Ot.length;n++)(r=Ot[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Ot.length&&null===(n=Ot[0]).blockedOn;)Pt(n),null===n.blockedOn&&Ot.shift()}var Ut=x.ReactCurrentBatchConfig,Gt=!0;function jt(e,t,n,r){var s=vt,i=Ut.transition;Ut.transition=null;try{vt=1,qt(e,t,n,r)}finally{vt=s,Ut.transition=i}}function Ht(e,t,n,r){var s=vt,i=Ut.transition;Ut.transition=null;try{vt=4,qt(e,t,n,r)}finally{vt=s,Ut.transition=i}}function qt(e,t,n,r){if(Gt){var s=Xt(e,t,n,r);if(null===s)Gr(e,t,r,Kt,n),Ft(e,r);else if(function(e,t,n,r,s){switch(t){case"focusin":return Nt=Mt(Nt,e,t,n,r,s),!0;case"dragenter":return Et=Mt(Et,e,t,n,r,s),!0;case"mouseover":return $t=Mt($t,e,t,n,r,s),!0;case"pointerover":var i=s.pointerId;return At.set(i,Mt(At.get(i)||null,e,t,n,r,s)),!0;case"gotpointercapture":return i=s.pointerId,Rt.set(i,Mt(Rt.get(i)||null,e,t,n,r,s)),!0}return!1}(s,e,t,n,r))r.stopPropagation();else if(Ft(e,r),4&t&&-1<Dt.indexOf(e)){for(;null!==s;){var i=vs(s);if(null!==i&&wt(i),null===(i=Xt(e,t,n,r))&&Gr(e,t,r,Kt,n),i===s)break;s=i}null!==s&&r.stopPropagation()}else Gr(e,t,r,null,n)}}var Kt=null;function Xt(e,t,n,r){if(Kt=null,null!==(e=bs(e=we(r))))if(null===(t=We(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ue(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Qt=null,Zt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Zt,r=n.length,s="value"in Qt?Qt.value:Qt.textContent,i=s.length;for(e=0;e<r&&n[e]===s[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===s[i-t];t++);return Jt=s.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function sn(e){function t(t,n,r,s,i){for(var a in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=s,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(a)&&(t=e[a],this[a]=t?t(s):s[a]);return this.isDefaultPrevented=(null!=s.defaultPrevented?s.defaultPrevented:!1===s.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return P(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var an,on,ln,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=sn(un),hn=P({},un,{view:0,detail:0}),dn=sn(hn),pn=P({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:In,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(an=e.screenX-ln.screenX,on=e.screenY-ln.screenY):on=an=0,ln=e),an)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=sn(pn),mn=sn(P({},pn,{dataTransfer:0})),gn=sn(P({},hn,{relatedTarget:0})),yn=sn(P({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=P({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=sn(bn),xn=sn(P({},un,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function In(){return Cn}var _n=P({},hn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:In,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Tn=sn(_n),Nn=sn(P({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),En=sn(P({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:In})),$n=sn(P({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=P({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Rn=sn(An),On=[9,13,27,32],Dn=c&&"CompositionEvent"in window,Fn=null;c&&"documentMode"in document&&(Fn=document.documentMode);var Mn=c&&"TextEvent"in window&&!Fn,Pn=c&&(!Dn||Fn&&8<Fn&&11>=Fn),zn=String.fromCharCode(32),Ln=!1;function Bn(e,t){switch(e){case"keyup":return-1!==On.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Vn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Wn=!1;var Un={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Gn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Un[e.type]:"textarea"===t}function jn(e,t,n,r){_e(r),0<(t=Hr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Hn=null,qn=null;function Kn(e){zr(e,0)}function Xn(e){if(q(xs(e)))return e}function Yn(e,t){if("change"===e)return t}var Qn=!1;if(c){var Zn;if(c){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"===typeof er.oninput}Zn=Jn}else Zn=!1;Qn=Zn&&(!document.documentMode||9<document.documentMode)}function tr(){Hn&&(Hn.detachEvent("onpropertychange",nr),qn=Hn=null)}function nr(e){if("value"===e.propertyName&&Xn(qn)){var t=[];jn(t,qn,e,we(e)),Ae(Kn,t)}}function rr(e,t,n){"focusin"===e?(tr(),qn=n,(Hn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function sr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(qn)}function ir(e,t){if("click"===e)return Xn(t)}function ar(e,t){if("input"===e||"change"===e)return Xn(t)}var or="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function lr(e,t){if(or(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var s=n[r];if(!h.call(t,s)||!or(e[s],t[s]))return!1}return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function hr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?hr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fr(e){var t=dr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&hr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var s=n.textContent.length,i=Math.min(r.start,s);r=void 0===r.end?i:Math.min(r.end,s),!e.extend&&i>r&&(s=r,r=i,i=s),s=cr(n,i);var a=cr(n,r);s&&a&&(1!==e.rangeCount||e.anchorNode!==s.node||e.anchorOffset!==s.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&((t=t.createRange()).setStart(s.node,s.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,yr=null,br=null,vr=!1;function xr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;vr||null==gr||gr!==K(r)||("selectionStart"in(r=gr)&&pr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&lr(br,r)||(br=r,0<(r=Hr(yr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function wr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var kr={animationend:wr("Animation","AnimationEnd"),animationiteration:wr("Animation","AnimationIteration"),animationstart:wr("Animation","AnimationStart"),transitionend:wr("Transition","TransitionEnd")},Sr={},Cr={};function Ir(e){if(Sr[e])return Sr[e];if(!kr[e])return e;var t,n=kr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Cr)return Sr[e]=n[t];return e}c&&(Cr=document.createElement("div").style,"AnimationEvent"in window||(delete kr.animationend.animation,delete kr.animationiteration.animation,delete kr.animationstart.animation),"TransitionEvent"in window||delete kr.transitionend.transition);var _r=Ir("animationend"),Tr=Ir("animationiteration"),Nr=Ir("animationstart"),Er=Ir("transitionend"),$r=new Map,Ar="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Rr(e,t){$r.set(e,t),l(t,[e])}for(var Or=0;Or<Ar.length;Or++){var Dr=Ar[Or];Rr(Dr.toLowerCase(),"on"+(Dr[0].toUpperCase()+Dr.slice(1)))}Rr(_r,"onAnimationEnd"),Rr(Tr,"onAnimationIteration"),Rr(Nr,"onAnimationStart"),Rr("dblclick","onDoubleClick"),Rr("focusin","onFocus"),Rr("focusout","onBlur"),Rr(Er,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Fr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Fr));function Pr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,s,a,o,l,u){if(Ve.apply(this,arguments),Me){if(!Me)throw Error(i(198));var c=Pe;Me=!1,Pe=null,ze||(ze=!0,Le=c)}}(r,t,void 0,e),e.currentTarget=null}function zr(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var r=e[n],s=r.event;r=r.listeners;e:{var i=void 0;if(t)for(var a=r.length-1;0<=a;a--){var o=r[a],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==i&&s.isPropagationStopped())break e;Pr(s,o,u),i=l}else for(a=0;a<r.length;a++){if(l=(o=r[a]).instance,u=o.currentTarget,o=o.listener,l!==i&&s.isPropagationStopped())break e;Pr(s,o,u),i=l}}}if(ze)throw e=Le,ze=!1,Le=null,e}function Lr(e,t){var n=t[ms];void 0===n&&(n=t[ms]=new Set);var r=e+"__bubble";n.has(r)||(Ur(t,e,2,!1),n.add(r))}function Br(e,t,n){var r=0;t&&(r|=4),Ur(n,e,r,t)}var Vr="_reactListening"+Math.random().toString(36).slice(2);function Wr(e){if(!e[Vr]){e[Vr]=!0,a.forEach((function(t){"selectionchange"!==t&&(Mr.has(t)||Br(t,!1,e),Br(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Vr]||(t[Vr]=!0,Br("selectionchange",!1,t))}}function Ur(e,t,n,r){switch(Yt(t)){case 1:var s=jt;break;case 4:s=Ht;break;default:s=qt}n=s.bind(null,t,n,e),s=void 0,!Oe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(s=!0),r?void 0!==s?e.addEventListener(t,n,{capture:!0,passive:s}):e.addEventListener(t,n,!0):void 0!==s?e.addEventListener(t,n,{passive:s}):e.addEventListener(t,n,!1)}function Gr(e,t,n,r,s){var i=r;if(0===(1&t)&&0===(2&t)&&null!==r)e:for(;;){if(null===r)return;var a=r.tag;if(3===a||4===a){var o=r.stateNode.containerInfo;if(o===s||8===o.nodeType&&o.parentNode===s)break;if(4===a)for(a=r.return;null!==a;){var l=a.tag;if((3===l||4===l)&&((l=a.stateNode.containerInfo)===s||8===l.nodeType&&l.parentNode===s))return;a=a.return}for(;null!==o;){if(null===(a=bs(o)))return;if(5===(l=a.tag)||6===l){r=i=a;continue e}o=o.parentNode}}r=r.return}Ae((function(){var r=i,s=we(n),a=[];e:{var o=$r.get(e);if(void 0!==o){var l=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=Tn;break;case"focusin":u="focus",l=gn;break;case"focusout":u="blur",l=gn;break;case"beforeblur":case"afterblur":l=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=En;break;case _r:case Tr:case Nr:l=yn;break;case Er:l=$n;break;case"scroll":l=dn;break;case"wheel":l=Rn;break;case"copy":case"cut":case"paste":l=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Nn}var c=0!==(4&t),h=!c&&"scroll"===e,d=c?null!==o?o+"Capture":null:o;c=[];for(var p,f=r;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=Re(f,d))&&c.push(jr(f,m,p)))),h)break;f=f.return}0<c.length&&(o=new l(o,u,null,n,s),a.push({event:o,listeners:c}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===xe||!(u=n.relatedTarget||n.fromElement)||!bs(u)&&!u[fs])&&(l||o)&&(o=s.window===s?s:(o=s.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?bs(u):null)&&(u!==(h=We(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=fn,m="onMouseLeave",d="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(c=Nn,m="onPointerLeave",d="onPointerEnter",f="pointer"),h=null==l?o:xs(l),p=null==u?o:xs(u),(o=new c(m,f+"leave",l,n,s)).target=h,o.relatedTarget=p,m=null,bs(s)===r&&((c=new c(d,f+"enter",u,n,s)).target=p,c.relatedTarget=h,m=c),h=m,l&&u)e:{for(d=u,f=0,p=c=l;p;p=qr(p))f++;for(p=0,m=d;m;m=qr(m))p++;for(;0<f-p;)c=qr(c),f--;for(;0<p-f;)d=qr(d),p--;for(;f--;){if(c===d||null!==d&&c===d.alternate)break e;c=qr(c),d=qr(d)}c=null}else c=null;null!==l&&Kr(a,o,l,c,!1),null!==u&&null!==h&&Kr(a,h,u,c,!0)}if("select"===(l=(o=r?xs(r):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g=Yn;else if(Gn(o))if(Qn)g=ar;else{g=sr;var y=rr}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=ir);switch(g&&(g=g(e,r))?jn(a,g,n,s):(y&&y(e,o,r),"focusout"===e&&(y=o._wrapperState)&&y.controlled&&"number"===o.type&&ee(o,"number",o.value)),y=r?xs(r):window,e){case"focusin":(Gn(y)||"true"===y.contentEditable)&&(gr=y,yr=r,br=null);break;case"focusout":br=yr=gr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,xr(a,n,s);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":xr(a,n,s)}var b;if(Dn)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Wn?Bn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(Pn&&"ko"!==n.locale&&(Wn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Wn&&(b=en()):(Zt="value"in(Qt=s)?Qt.value:Qt.textContent,Wn=!0)),0<(y=Hr(r,v)).length&&(v=new xn(v,e,null,n,s),a.push({event:v,listeners:y}),b?v.data=b:null!==(b=Vn(n))&&(v.data=b))),(b=Mn?function(e,t){switch(e){case"compositionend":return Vn(t);case"keypress":return 32!==t.which?null:(Ln=!0,zn);case"textInput":return(e=t.data)===zn&&Ln?null:e;default:return null}}(e,n):function(e,t){if(Wn)return"compositionend"===e||!Dn&&Bn(e,t)?(e=en(),Jt=Zt=Qt=null,Wn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Pn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=Hr(r,"onBeforeInput")).length&&(s=new xn("onBeforeInput","beforeinput",null,n,s),a.push({event:s,listeners:r}),s.data=b))}zr(a,t)}))}function jr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Hr(e,t){for(var n=t+"Capture",r=[];null!==e;){var s=e,i=s.stateNode;5===s.tag&&null!==i&&(s=i,null!=(i=Re(e,n))&&r.unshift(jr(e,i,s)),null!=(i=Re(e,t))&&r.push(jr(e,i,s))),e=e.return}return r}function qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Kr(e,t,n,r,s){for(var i=t._reactName,a=[];null!==n&&n!==r;){var o=n,l=o.alternate,u=o.stateNode;if(null!==l&&l===r)break;5===o.tag&&null!==u&&(o=u,s?null!=(l=Re(n,i))&&a.unshift(jr(n,l,o)):s||null!=(l=Re(n,i))&&a.push(jr(n,l,o))),n=n.return}0!==a.length&&e.push({event:t,listeners:a})}var Xr=/\r\n?/g,Yr=/\u0000|\uFFFD/g;function Qr(e){return("string"===typeof e?e:""+e).replace(Xr,"\n").replace(Yr,"")}function Zr(e,t,n){if(t=Qr(t),Qr(e)!==t&&n)throw Error(i(425))}function Jr(){}var es=null,ts=null;function ns(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var rs="function"===typeof setTimeout?setTimeout:void 0,ss="function"===typeof clearTimeout?clearTimeout:void 0,is="function"===typeof Promise?Promise:void 0,as="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof is?function(e){return is.resolve(null).then(e).catch(os)}:rs;function os(e){setTimeout((function(){throw e}))}function ls(e,t){var n=t,r=0;do{var s=n.nextSibling;if(e.removeChild(n),s&&8===s.nodeType)if("/$"===(n=s.data)){if(0===r)return e.removeChild(s),void Wt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=s}while(n);Wt(t)}function us(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function cs(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var hs=Math.random().toString(36).slice(2),ds="__reactFiber$"+hs,ps="__reactProps$"+hs,fs="__reactContainer$"+hs,ms="__reactEvents$"+hs,gs="__reactListeners$"+hs,ys="__reactHandles$"+hs;function bs(e){var t=e[ds];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fs]||n[ds]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=cs(e);null!==e;){if(n=e[ds])return n;e=cs(e)}return t}n=(e=n).parentNode}return null}function vs(e){return!(e=e[ds]||e[fs])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function xs(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ws(e){return e[ps]||null}var ks=[],Ss=-1;function Cs(e){return{current:e}}function Is(e){0>Ss||(e.current=ks[Ss],ks[Ss]=null,Ss--)}function _s(e,t){Ss++,ks[Ss]=e.current,e.current=t}var Ts={},Ns=Cs(Ts),Es=Cs(!1),$s=Ts;function As(e,t){var n=e.type.contextTypes;if(!n)return Ts;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var s,i={};for(s in n)i[s]=t[s];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Rs(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Os(){Is(Es),Is(Ns)}function Ds(e,t,n){if(Ns.current!==Ts)throw Error(i(168));_s(Ns,t),_s(Es,n)}function Fs(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var s in r=r.getChildContext())if(!(s in t))throw Error(i(108,U(e)||"Unknown",s));return P({},n,r)}function Ms(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ts,$s=Ns.current,_s(Ns,e),_s(Es,Es.current),!0}function Ps(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=Fs(e,t,$s),r.__reactInternalMemoizedMergedChildContext=e,Is(Es),Is(Ns),_s(Ns,e)):Is(Es),_s(Es,n)}var zs=null,Ls=!1,Bs=!1;function Vs(e){null===zs?zs=[e]:zs.push(e)}function Ws(){if(!Bs&&null!==zs){Bs=!0;var e=0,t=vt;try{var n=zs;for(vt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}zs=null,Ls=!1}catch(s){throw null!==zs&&(zs=zs.slice(e+1)),qe(Je,Ws),s}finally{vt=t,Bs=!1}}return null}var Us=[],Gs=0,js=null,Hs=0,qs=[],Ks=0,Xs=null,Ys=1,Qs="";function Zs(e,t){Us[Gs++]=Hs,Us[Gs++]=js,js=e,Hs=t}function Js(e,t,n){qs[Ks++]=Ys,qs[Ks++]=Qs,qs[Ks++]=Xs,Xs=e;var r=Ys;e=Qs;var s=32-at(r)-1;r&=~(1<<s),n+=1;var i=32-at(t)+s;if(30<i){var a=s-s%5;i=(r&(1<<a)-1).toString(32),r>>=a,s-=a,Ys=1<<32-at(t)+s|n<<s|r,Qs=i+e}else Ys=1<<i|n<<s|r,Qs=e}function ei(e){null!==e.return&&(Zs(e,1),Js(e,1,0))}function ti(e){for(;e===js;)js=Us[--Gs],Us[Gs]=null,Hs=Us[--Gs],Us[Gs]=null;for(;e===Xs;)Xs=qs[--Ks],qs[Ks]=null,Qs=qs[--Ks],qs[Ks]=null,Ys=qs[--Ks],qs[Ks]=null}var ni=null,ri=null,si=!1,ii=null;function ai(e,t){var n=Ru(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function oi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ni=e,ri=us(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ni=e,ri=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Xs?{id:Ys,overflow:Qs}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Ru(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ni=e,ri=null,!0);default:return!1}}function li(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ui(e){if(si){var t=ri;if(t){var n=t;if(!oi(e,t)){if(li(e))throw Error(i(418));t=us(n.nextSibling);var r=ni;t&&oi(e,t)?ai(r,n):(e.flags=-4097&e.flags|2,si=!1,ni=e)}}else{if(li(e))throw Error(i(418));e.flags=-4097&e.flags|2,si=!1,ni=e}}}function ci(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ni=e}function hi(e){if(e!==ni)return!1;if(!si)return ci(e),si=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ns(e.type,e.memoizedProps)),t&&(t=ri)){if(li(e))throw di(),Error(i(418));for(;t;)ai(e,t),t=us(t.nextSibling)}if(ci(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ri=us(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ri=null}}else ri=ni?us(e.stateNode.nextSibling):null;return!0}function di(){for(var e=ri;e;)e=us(e.nextSibling)}function pi(){ri=ni=null,si=!1}function fi(e){null===ii?ii=[e]:ii.push(e)}var mi=x.ReactCurrentBatchConfig;function gi(e,t){if(e&&e.defaultProps){for(var n in t=P({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var yi=Cs(null),bi=null,vi=null,xi=null;function wi(){xi=vi=bi=null}function ki(e){var t=yi.current;Is(yi),e._currentValue=t}function Si(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Ci(e,t){bi=e,xi=vi=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(xo=!0),e.firstContext=null)}function Ii(e){var t=e._currentValue;if(xi!==e)if(e={context:e,memoizedValue:t,next:null},null===vi){if(null===bi)throw Error(i(308));vi=e,bi.dependencies={lanes:0,firstContext:e}}else vi=vi.next=e;return t}var _i=null;function Ti(e){null===_i?_i=[e]:_i.push(e)}function Ni(e,t,n,r){var s=t.interleaved;return null===s?(n.next=n,Ti(t)):(n.next=s.next,s.next=n),t.interleaved=n,Ei(e,r)}function Ei(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var $i=!1;function Ai(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ri(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Oi(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Di(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&El)){var s=r.pending;return null===s?t.next=t:(t.next=s.next,s.next=t),r.pending=t,Ei(e,n)}return null===(s=r.interleaved)?(t.next=t,Ti(r)):(t.next=s.next,s.next=t),r.interleaved=t,Ei(e,n)}function Fi(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Mi(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var s=null,i=null;if(null!==(n=n.firstBaseUpdate)){do{var a={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===i?s=i=a:i=i.next=a,n=n.next}while(null!==n);null===i?s=i=t:i=i.next=t}else s=i=t;return n={baseState:r.baseState,firstBaseUpdate:s,lastBaseUpdate:i,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Pi(e,t,n,r){var s=e.updateQueue;$i=!1;var i=s.firstBaseUpdate,a=s.lastBaseUpdate,o=s.shared.pending;if(null!==o){s.shared.pending=null;var l=o,u=l.next;l.next=null,null===a?i=u:a.next=u,a=l;var c=e.alternate;null!==c&&((o=(c=c.updateQueue).lastBaseUpdate)!==a&&(null===o?c.firstBaseUpdate=u:o.next=u,c.lastBaseUpdate=l))}if(null!==i){var h=s.baseState;for(a=0,c=u=l=null,o=i;;){var d=o.lane,p=o.eventTime;if((r&d)===d){null!==c&&(c=c.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var f=e,m=o;switch(d=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){h=f.call(p,h,d);break e}h=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(d="function"===typeof(f=m.payload)?f.call(p,h,d):f)||void 0===d)break e;h=P({},h,d);break e;case 2:$i=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(d=s.effects)?s.effects=[o]:d.push(o))}else p={eventTime:p,lane:d,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===c?(u=c=p,l=h):c=c.next=p,a|=d;if(null===(o=o.next)){if(null===(o=s.shared.pending))break;o=(d=o).next,d.next=null,s.lastBaseUpdate=d,s.shared.pending=null}}if(null===c&&(l=h),s.baseState=l,s.firstBaseUpdate=u,s.lastBaseUpdate=c,null!==(t=s.shared.interleaved)){s=t;do{a|=s.lane,s=s.next}while(s!==t)}else null===i&&(s.shared.lanes=0);Pl|=a,e.lanes=a,e.memoizedState=h}}function zi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],s=r.callback;if(null!==s){if(r.callback=null,r=n,"function"!==typeof s)throw Error(i(191,s));s.call(r)}}}var Li=(new r.Component).refs;function Bi(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:P({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Vi={isMounted:function(e){return!!(e=e._reactInternals)&&We(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=tu(),s=nu(e),i=Oi(r,s);i.payload=t,void 0!==n&&null!==n&&(i.callback=n),null!==(t=Di(e,i,s))&&(ru(t,e,s,r),Fi(t,e,s))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=tu(),s=nu(e),i=Oi(r,s);i.tag=1,i.payload=t,void 0!==n&&null!==n&&(i.callback=n),null!==(t=Di(e,i,s))&&(ru(t,e,s,r),Fi(t,e,s))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=tu(),r=nu(e),s=Oi(n,r);s.tag=2,void 0!==t&&null!==t&&(s.callback=t),null!==(t=Di(e,s,r))&&(ru(t,e,r,n),Fi(t,e,r))}};function Wi(e,t,n,r,s,i,a){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!lr(n,r)||!lr(s,i))}function Ui(e,t,n){var r=!1,s=Ts,i=t.contextType;return"object"===typeof i&&null!==i?i=Ii(i):(s=Rs(t)?$s:Ns.current,i=(r=null!==(r=t.contextTypes)&&void 0!==r)?As(e,s):Ts),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Vi,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=i),t}function Gi(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Vi.enqueueReplaceState(t,t.state,null)}function ji(e,t,n,r){var s=e.stateNode;s.props=n,s.state=e.memoizedState,s.refs=Li,Ai(e);var i=t.contextType;"object"===typeof i&&null!==i?s.context=Ii(i):(i=Rs(t)?$s:Ns.current,s.context=As(e,i)),s.state=e.memoizedState,"function"===typeof(i=t.getDerivedStateFromProps)&&(Bi(e,t,i,n),s.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof s.getSnapshotBeforeUpdate||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||(t=s.state,"function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount(),t!==s.state&&Vi.enqueueReplaceState(s,s.state,null),Pi(e,n,s,r),s.state=e.memoizedState),"function"===typeof s.componentDidMount&&(e.flags|=4194308)}function Hi(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var s=r,a=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===a?t.ref:(t=function(e){var t=s.refs;t===Li&&(t=s.refs={}),null===e?delete t[a]:t[a]=e},t._stringRef=a,t)}if("string"!==typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function qi(e,t){throw e=Object.prototype.toString.call(t),Error(i(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ki(e){return(0,e._init)(e._payload)}function Xi(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function s(e,t){return(e=Du(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=zu(n,e.mode,r)).return=e,t):((t=s(t,n)).return=e,t)}function u(e,t,n,r){var i=n.type;return i===S?h(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===i||"object"===typeof i&&null!==i&&i.$$typeof===R&&Ki(i)===t.type)?((r=s(t,n.props)).ref=Hi(e,t,n),r.return=e,r):((r=Fu(n.type,n.key,n.props,null,e.mode,r)).ref=Hi(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Lu(n,e.mode,r)).return=e,t):((t=s(t,n.children||[])).return=e,t)}function h(e,t,n,r,i){return null===t||7!==t.tag?((t=Mu(n,e.mode,r,i)).return=e,t):((t=s(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=zu(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Fu(t.type,t.key,t.props,null,e.mode,n)).ref=Hi(e,null,t),n.return=e,n;case k:return(t=Lu(t,e.mode,n)).return=e,t;case R:return d(e,(0,t._init)(t._payload),n)}if(te(t)||F(t))return(t=Mu(t,e.mode,n,null)).return=e,t;qi(e,t)}return null}function p(e,t,n,r){var s=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==s?null:l(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===s?u(e,t,n,r):null;case k:return n.key===s?c(e,t,n,r):null;case R:return p(e,t,(s=n._init)(n._payload),r)}if(te(n)||F(n))return null!==s?null:h(e,t,n,r,null);qi(e,n)}return null}function f(e,t,n,r,s){if("string"===typeof r&&""!==r||"number"===typeof r)return l(t,e=e.get(n)||null,""+r,s);if("object"===typeof r&&null!==r){switch(r.$$typeof){case w:return u(t,e=e.get(null===r.key?n:r.key)||null,r,s);case k:return c(t,e=e.get(null===r.key?n:r.key)||null,r,s);case R:return f(e,t,n,(0,r._init)(r._payload),s)}if(te(r)||F(r))return h(t,e=e.get(n)||null,r,s,null);qi(t,r)}return null}function m(s,i,o,l){for(var u=null,c=null,h=i,m=i=0,g=null;null!==h&&m<o.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=p(s,h,o[m],l);if(null===y){null===h&&(h=g);break}e&&h&&null===y.alternate&&t(s,h),i=a(y,i,m),null===c?u=y:c.sibling=y,c=y,h=g}if(m===o.length)return n(s,h),si&&Zs(s,m),u;if(null===h){for(;m<o.length;m++)null!==(h=d(s,o[m],l))&&(i=a(h,i,m),null===c?u=h:c.sibling=h,c=h);return si&&Zs(s,m),u}for(h=r(s,h);m<o.length;m++)null!==(g=f(h,s,m,o[m],l))&&(e&&null!==g.alternate&&h.delete(null===g.key?m:g.key),i=a(g,i,m),null===c?u=g:c.sibling=g,c=g);return e&&h.forEach((function(e){return t(s,e)})),si&&Zs(s,m),u}function g(s,o,l,u){var c=F(l);if("function"!==typeof c)throw Error(i(150));if(null==(l=c.call(l)))throw Error(i(151));for(var h=c=null,m=o,g=o=0,y=null,b=l.next();null!==m&&!b.done;g++,b=l.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=p(s,m,b.value,u);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(s,m),o=a(v,o,g),null===h?c=v:h.sibling=v,h=v,m=y}if(b.done)return n(s,m),si&&Zs(s,g),c;if(null===m){for(;!b.done;g++,b=l.next())null!==(b=d(s,b.value,u))&&(o=a(b,o,g),null===h?c=b:h.sibling=b,h=b);return si&&Zs(s,g),c}for(m=r(s,m);!b.done;g++,b=l.next())null!==(b=f(m,s,g,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),o=a(b,o,g),null===h?c=b:h.sibling=b,h=b);return e&&m.forEach((function(e){return t(s,e)})),si&&Zs(s,g),c}return function e(r,i,a,l){if("object"===typeof a&&null!==a&&a.type===S&&null===a.key&&(a=a.props.children),"object"===typeof a&&null!==a){switch(a.$$typeof){case w:e:{for(var u=a.key,c=i;null!==c;){if(c.key===u){if((u=a.type)===S){if(7===c.tag){n(r,c.sibling),(i=s(c,a.props.children)).return=r,r=i;break e}}else if(c.elementType===u||"object"===typeof u&&null!==u&&u.$$typeof===R&&Ki(u)===c.type){n(r,c.sibling),(i=s(c,a.props)).ref=Hi(r,c,a),i.return=r,r=i;break e}n(r,c);break}t(r,c),c=c.sibling}a.type===S?((i=Mu(a.props.children,r.mode,l,a.key)).return=r,r=i):((l=Fu(a.type,a.key,a.props,null,r.mode,l)).ref=Hi(r,i,a),l.return=r,r=l)}return o(r);case k:e:{for(c=a.key;null!==i;){if(i.key===c){if(4===i.tag&&i.stateNode.containerInfo===a.containerInfo&&i.stateNode.implementation===a.implementation){n(r,i.sibling),(i=s(i,a.children||[])).return=r,r=i;break e}n(r,i);break}t(r,i),i=i.sibling}(i=Lu(a,r.mode,l)).return=r,r=i}return o(r);case R:return e(r,i,(c=a._init)(a._payload),l)}if(te(a))return m(r,i,a,l);if(F(a))return g(r,i,a,l);qi(r,a)}return"string"===typeof a&&""!==a||"number"===typeof a?(a=""+a,null!==i&&6===i.tag?(n(r,i.sibling),(i=s(i,a)).return=r,r=i):(n(r,i),(i=zu(a,r.mode,l)).return=r,r=i),o(r)):n(r,i)}}var Yi=Xi(!0),Qi=Xi(!1),Zi={},Ji=Cs(Zi),ea=Cs(Zi),ta=Cs(Zi);function na(e){if(e===Zi)throw Error(i(174));return e}function ra(e,t){switch(_s(ta,t),_s(ea,e),_s(Ji,Zi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Is(Ji),_s(Ji,t)}function sa(){Is(Ji),Is(ea),Is(ta)}function ia(e){na(ta.current);var t=na(Ji.current),n=le(t,e.type);t!==n&&(_s(ea,e),_s(Ji,n))}function aa(e){ea.current===e&&(Is(Ji),Is(ea))}var oa=Cs(0);function la(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ua=[];function ca(){for(var e=0;e<ua.length;e++)ua[e]._workInProgressVersionPrimary=null;ua.length=0}var ha=x.ReactCurrentDispatcher,da=x.ReactCurrentBatchConfig,pa=0,fa=null,ma=null,ga=null,ya=!1,ba=!1,va=0,xa=0;function wa(){throw Error(i(321))}function ka(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function Sa(e,t,n,r,s,a){if(pa=a,fa=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ha.current=null===e||null===e.memoizedState?ao:oo,e=n(r,s),ba){a=0;do{if(ba=!1,va=0,25<=a)throw Error(i(301));a+=1,ga=ma=null,t.updateQueue=null,ha.current=lo,e=n(r,s)}while(ba)}if(ha.current=io,t=null!==ma&&null!==ma.next,pa=0,ga=ma=fa=null,ya=!1,t)throw Error(i(300));return e}function Ca(){var e=0!==va;return va=0,e}function Ia(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ga?fa.memoizedState=ga=e:ga=ga.next=e,ga}function _a(){if(null===ma){var e=fa.alternate;e=null!==e?e.memoizedState:null}else e=ma.next;var t=null===ga?fa.memoizedState:ga.next;if(null!==t)ga=t,ma=e;else{if(null===e)throw Error(i(310));e={memoizedState:(ma=e).memoizedState,baseState:ma.baseState,baseQueue:ma.baseQueue,queue:ma.queue,next:null},null===ga?fa.memoizedState=ga=e:ga=ga.next=e}return ga}function Ta(e,t){return"function"===typeof t?t(e):t}function Na(e){var t=_a(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=ma,s=r.baseQueue,a=n.pending;if(null!==a){if(null!==s){var o=s.next;s.next=a.next,a.next=o}r.baseQueue=s=a,n.pending=null}if(null!==s){a=s.next,r=r.baseState;var l=o=null,u=null,c=a;do{var h=c.lane;if((pa&h)===h)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:h,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(l=u=d,o=r):u=u.next=d,fa.lanes|=h,Pl|=h}c=c.next}while(null!==c&&c!==a);null===u?o=r:u.next=l,or(r,t.memoizedState)||(xo=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}if(null!==(e=n.interleaved)){s=e;do{a=s.lane,fa.lanes|=a,Pl|=a,s=s.next}while(s!==e)}else null===s&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ea(e){var t=_a(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,s=n.pending,a=t.memoizedState;if(null!==s){n.pending=null;var o=s=s.next;do{a=e(a,o.action),o=o.next}while(o!==s);or(a,t.memoizedState)||(xo=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function $a(){}function Aa(e,t){var n=fa,r=_a(),s=t(),a=!or(r.memoizedState,s);if(a&&(r.memoizedState=s,xo=!0),r=r.queue,Ua(Da.bind(null,n,r,e),[e]),r.getSnapshot!==t||a||null!==ga&&1&ga.memoizedState.tag){if(n.flags|=2048,za(9,Oa.bind(null,n,r,s,t),void 0,null),null===$l)throw Error(i(349));0!==(30&pa)||Ra(n,t,s)}return s}function Ra(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=fa.updateQueue)?(t={lastEffect:null,stores:null},fa.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Oa(e,t,n,r){t.value=n,t.getSnapshot=r,Fa(t)&&Ma(e)}function Da(e,t,n){return n((function(){Fa(t)&&Ma(e)}))}function Fa(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!or(e,n)}catch(r){return!0}}function Ma(e){var t=Ei(e,1);null!==t&&ru(t,e,1,-1)}function Pa(e){var t=Ia();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ta,lastRenderedState:e},t.queue=e,e=e.dispatch=to.bind(null,fa,e),[t.memoizedState,e]}function za(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=fa.updateQueue)?(t={lastEffect:null,stores:null},fa.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function La(){return _a().memoizedState}function Ba(e,t,n,r){var s=Ia();fa.flags|=e,s.memoizedState=za(1|t,n,void 0,void 0===r?null:r)}function Va(e,t,n,r){var s=_a();r=void 0===r?null:r;var i=void 0;if(null!==ma){var a=ma.memoizedState;if(i=a.destroy,null!==r&&ka(r,a.deps))return void(s.memoizedState=za(t,n,i,r))}fa.flags|=e,s.memoizedState=za(1|t,n,i,r)}function Wa(e,t){return Ba(8390656,8,e,t)}function Ua(e,t){return Va(2048,8,e,t)}function Ga(e,t){return Va(4,2,e,t)}function ja(e,t){return Va(4,4,e,t)}function Ha(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function qa(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Va(4,4,Ha.bind(null,t,e),n)}function Ka(){}function Xa(e,t){var n=_a();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ka(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ya(e,t){var n=_a();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ka(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Qa(e,t,n){return 0===(21&pa)?(e.baseState&&(e.baseState=!1,xo=!0),e.memoizedState=n):(or(n,t)||(n=mt(),fa.lanes|=n,Pl|=n,e.baseState=!0),t)}function Za(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var r=da.transition;da.transition={};try{e(!1),t()}finally{vt=n,da.transition=r}}function Ja(){return _a().memoizedState}function eo(e,t,n){var r=nu(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},no(e))ro(t,n);else if(null!==(n=Ni(e,t,n,r))){ru(n,e,r,tu()),so(n,t,r)}}function to(e,t,n){var r=nu(e),s={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(no(e))ro(t,s);else{var i=e.alternate;if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var a=t.lastRenderedState,o=i(a,n);if(s.hasEagerState=!0,s.eagerState=o,or(o,a)){var l=t.interleaved;return null===l?(s.next=s,Ti(t)):(s.next=l.next,l.next=s),void(t.interleaved=s)}}catch(u){}null!==(n=Ni(e,t,s,r))&&(ru(n,e,r,s=tu()),so(n,t,r))}}function no(e){var t=e.alternate;return e===fa||null!==t&&t===fa}function ro(e,t){ba=ya=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function so(e,t,n){if(0!==(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}var io={readContext:Ii,useCallback:wa,useContext:wa,useEffect:wa,useImperativeHandle:wa,useInsertionEffect:wa,useLayoutEffect:wa,useMemo:wa,useReducer:wa,useRef:wa,useState:wa,useDebugValue:wa,useDeferredValue:wa,useTransition:wa,useMutableSource:wa,useSyncExternalStore:wa,useId:wa,unstable_isNewReconciler:!1},ao={readContext:Ii,useCallback:function(e,t){return Ia().memoizedState=[e,void 0===t?null:t],e},useContext:Ii,useEffect:Wa,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Ba(4194308,4,Ha.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ba(4194308,4,e,t)},useInsertionEffect:function(e,t){return Ba(4,2,e,t)},useMemo:function(e,t){var n=Ia();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ia();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=eo.bind(null,fa,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ia().memoizedState=e},useState:Pa,useDebugValue:Ka,useDeferredValue:function(e){return Ia().memoizedState=e},useTransition:function(){var e=Pa(!1),t=e[0];return e=Za.bind(null,e[1]),Ia().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=fa,s=Ia();if(si){if(void 0===n)throw Error(i(407));n=n()}else{if(n=t(),null===$l)throw Error(i(349));0!==(30&pa)||Ra(r,t,n)}s.memoizedState=n;var a={value:n,getSnapshot:t};return s.queue=a,Wa(Da.bind(null,r,a,e),[e]),r.flags|=2048,za(9,Oa.bind(null,r,a,n,t),void 0,null),n},useId:function(){var e=Ia(),t=$l.identifierPrefix;if(si){var n=Qs;t=":"+t+"R"+(n=(Ys&~(1<<32-at(Ys)-1)).toString(32)+n),0<(n=va++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=xa++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},oo={readContext:Ii,useCallback:Xa,useContext:Ii,useEffect:Ua,useImperativeHandle:qa,useInsertionEffect:Ga,useLayoutEffect:ja,useMemo:Ya,useReducer:Na,useRef:La,useState:function(){return Na(Ta)},useDebugValue:Ka,useDeferredValue:function(e){return Qa(_a(),ma.memoizedState,e)},useTransition:function(){return[Na(Ta)[0],_a().memoizedState]},useMutableSource:$a,useSyncExternalStore:Aa,useId:Ja,unstable_isNewReconciler:!1},lo={readContext:Ii,useCallback:Xa,useContext:Ii,useEffect:Ua,useImperativeHandle:qa,useInsertionEffect:Ga,useLayoutEffect:ja,useMemo:Ya,useReducer:Ea,useRef:La,useState:function(){return Ea(Ta)},useDebugValue:Ka,useDeferredValue:function(e){var t=_a();return null===ma?t.memoizedState=e:Qa(t,ma.memoizedState,e)},useTransition:function(){return[Ea(Ta)[0],_a().memoizedState]},useMutableSource:$a,useSyncExternalStore:Aa,useId:Ja,unstable_isNewReconciler:!1};function uo(e,t){try{var n="",r=t;do{n+=V(r),r=r.return}while(r);var s=n}catch(i){s="\nError generating stack: "+i.message+"\n"+i.stack}return{value:e,source:t,stack:s,digest:null}}function co(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function ho(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var po="function"===typeof WeakMap?WeakMap:Map;function fo(e,t,n){(n=Oi(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){jl||(jl=!0,Hl=r),ho(0,t)},n}function mo(e,t,n){(n=Oi(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var s=t.value;n.payload=function(){return r(s)},n.callback=function(){ho(0,t)}}var i=e.stateNode;return null!==i&&"function"===typeof i.componentDidCatch&&(n.callback=function(){ho(0,t),"function"!==typeof r&&(null===ql?ql=new Set([this]):ql.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function go(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new po;var s=new Set;r.set(t,s)}else void 0===(s=r.get(t))&&(s=new Set,r.set(t,s));s.has(n)||(s.add(n),e=_u.bind(null,e,t,n),t.then(e,e))}function yo(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function bo(e,t,n,r,s){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Oi(-1,1)).tag=2,Di(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=s,e)}var vo=x.ReactCurrentOwner,xo=!1;function wo(e,t,n,r){t.child=null===e?Qi(t,null,n,r):Yi(t,e.child,n,r)}function ko(e,t,n,r,s){n=n.render;var i=t.ref;return Ci(t,s),r=Sa(e,t,n,r,i,s),n=Ca(),null===e||xo?(si&&n&&ei(t),t.flags|=1,wo(e,t,r,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,jo(e,t,s))}function So(e,t,n,r,s){if(null===e){var i=n.type;return"function"!==typeof i||Ou(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Fu(n.type,null,r,t,t.mode,s)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Co(e,t,i,r,s))}if(i=e.child,0===(e.lanes&s)){var a=i.memoizedProps;if((n=null!==(n=n.compare)?n:lr)(a,r)&&e.ref===t.ref)return jo(e,t,s)}return t.flags|=1,(e=Du(i,r)).ref=t.ref,e.return=t,t.child=e}function Co(e,t,n,r,s){if(null!==e){var i=e.memoizedProps;if(lr(i,r)&&e.ref===t.ref){if(xo=!1,t.pendingProps=r=i,0===(e.lanes&s))return t.lanes=e.lanes,jo(e,t,s);0!==(131072&e.flags)&&(xo=!0)}}return To(e,t,n,r,s)}function Io(e,t,n){var r=t.pendingProps,s=r.children,i=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},_s(Dl,Ol),Ol|=n;else{if(0===(1073741824&n))return e=null!==i?i.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,_s(Dl,Ol),Ol|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==i?i.baseLanes:n,_s(Dl,Ol),Ol|=r}else null!==i?(r=i.baseLanes|n,t.memoizedState=null):r=n,_s(Dl,Ol),Ol|=r;return wo(e,t,s,n),t.child}function _o(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function To(e,t,n,r,s){var i=Rs(n)?$s:Ns.current;return i=As(t,i),Ci(t,s),n=Sa(e,t,n,r,i,s),r=Ca(),null===e||xo?(si&&r&&ei(t),t.flags|=1,wo(e,t,n,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,jo(e,t,s))}function No(e,t,n,r,s){if(Rs(n)){var i=!0;Ms(t)}else i=!1;if(Ci(t,s),null===t.stateNode)Go(e,t),Ui(t,n,r),ji(t,n,r,s),r=!0;else if(null===e){var a=t.stateNode,o=t.memoizedProps;a.props=o;var l=a.context,u=n.contextType;"object"===typeof u&&null!==u?u=Ii(u):u=As(t,u=Rs(n)?$s:Ns.current);var c=n.getDerivedStateFromProps,h="function"===typeof c||"function"===typeof a.getSnapshotBeforeUpdate;h||"function"!==typeof a.UNSAFE_componentWillReceiveProps&&"function"!==typeof a.componentWillReceiveProps||(o!==r||l!==u)&&Gi(t,a,r,u),$i=!1;var d=t.memoizedState;a.state=d,Pi(t,r,a,s),l=t.memoizedState,o!==r||d!==l||Es.current||$i?("function"===typeof c&&(Bi(t,n,c,r),l=t.memoizedState),(o=$i||Wi(t,n,o,r,d,l,u))?(h||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||("function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"===typeof a.componentDidMount&&(t.flags|=4194308)):("function"===typeof a.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=l),a.props=r,a.state=l,a.context=u,r=o):("function"===typeof a.componentDidMount&&(t.flags|=4194308),r=!1)}else{a=t.stateNode,Ri(e,t),o=t.memoizedProps,u=t.type===t.elementType?o:gi(t.type,o),a.props=u,h=t.pendingProps,d=a.context,"object"===typeof(l=n.contextType)&&null!==l?l=Ii(l):l=As(t,l=Rs(n)?$s:Ns.current);var p=n.getDerivedStateFromProps;(c="function"===typeof p||"function"===typeof a.getSnapshotBeforeUpdate)||"function"!==typeof a.UNSAFE_componentWillReceiveProps&&"function"!==typeof a.componentWillReceiveProps||(o!==h||d!==l)&&Gi(t,a,r,l),$i=!1,d=t.memoizedState,a.state=d,Pi(t,r,a,s);var f=t.memoizedState;o!==h||d!==f||Es.current||$i?("function"===typeof p&&(Bi(t,n,p,r),f=t.memoizedState),(u=$i||Wi(t,n,u,r,d,f,l)||!1)?(c||"function"!==typeof a.UNSAFE_componentWillUpdate&&"function"!==typeof a.componentWillUpdate||("function"===typeof a.componentWillUpdate&&a.componentWillUpdate(r,f,l),"function"===typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,f,l)),"function"===typeof a.componentDidUpdate&&(t.flags|=4),"function"===typeof a.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof a.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof a.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=f),a.props=r,a.state=f,a.context=l,r=u):("function"!==typeof a.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof a.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return Eo(e,t,n,r,i,s)}function Eo(e,t,n,r,s,i){_o(e,t);var a=0!==(128&t.flags);if(!r&&!a)return s&&Ps(t,n,!1),jo(e,t,i);r=t.stateNode,vo.current=t;var o=a&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&a?(t.child=Yi(t,e.child,null,i),t.child=Yi(t,null,o,i)):wo(e,t,o,i),t.memoizedState=r.state,s&&Ps(t,n,!0),t.child}function $o(e){var t=e.stateNode;t.pendingContext?Ds(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ds(0,t.context,!1),ra(e,t.containerInfo)}function Ao(e,t,n,r,s){return pi(),fi(s),t.flags|=256,wo(e,t,n,r),t.child}var Ro,Oo,Do,Fo,Mo={dehydrated:null,treeContext:null,retryLane:0};function Po(e){return{baseLanes:e,cachePool:null,transitions:null}}function zo(e,t,n){var r,s=t.pendingProps,a=oa.current,o=!1,l=0!==(128&t.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!==(2&a)),r?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(a|=1),_s(oa,1&a),null===e)return ui(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=s.children,e=s.fallback,o?(s=t.mode,o=t.child,l={mode:"hidden",children:l},0===(1&s)&&null!==o?(o.childLanes=0,o.pendingProps=l):o=Pu(l,s,0,null),e=Mu(e,s,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Po(n),t.memoizedState=Mo,e):Lo(t,l));if(null!==(a=e.memoizedState)&&null!==(r=a.dehydrated))return function(e,t,n,r,s,a,o){if(n)return 256&t.flags?(t.flags&=-257,Bo(e,t,o,r=co(Error(i(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(a=r.fallback,s=t.mode,r=Pu({mode:"visible",children:r.children},s,0,null),(a=Mu(a,s,o,null)).flags|=2,r.return=t,a.return=t,r.sibling=a,t.child=r,0!==(1&t.mode)&&Yi(t,e.child,null,o),t.child.memoizedState=Po(o),t.memoizedState=Mo,a);if(0===(1&t.mode))return Bo(e,t,o,null);if("$!"===s.data){if(r=s.nextSibling&&s.nextSibling.dataset)var l=r.dgst;return r=l,Bo(e,t,o,r=co(a=Error(i(419)),r,void 0))}if(l=0!==(o&e.childLanes),xo||l){if(null!==(r=$l)){switch(o&-o){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}0!==(s=0!==(s&(r.suspendedLanes|o))?0:s)&&s!==a.retryLane&&(a.retryLane=s,Ei(e,s),ru(r,e,s,-1))}return gu(),Bo(e,t,o,r=co(Error(i(421))))}return"$?"===s.data?(t.flags|=128,t.child=e.child,t=Nu.bind(null,e),s._reactRetry=t,null):(e=a.treeContext,ri=us(s.nextSibling),ni=t,si=!0,ii=null,null!==e&&(qs[Ks++]=Ys,qs[Ks++]=Qs,qs[Ks++]=Xs,Ys=e.id,Qs=e.overflow,Xs=t),t=Lo(t,r.children),t.flags|=4096,t)}(e,t,l,s,r,a,n);if(o){o=s.fallback,l=t.mode,r=(a=e.child).sibling;var u={mode:"hidden",children:s.children};return 0===(1&l)&&t.child!==a?((s=t.child).childLanes=0,s.pendingProps=u,t.deletions=null):(s=Du(a,u)).subtreeFlags=14680064&a.subtreeFlags,null!==r?o=Du(r,o):(o=Mu(o,l,n,null)).flags|=2,o.return=t,s.return=t,s.sibling=o,t.child=s,s=o,o=t.child,l=null===(l=e.child.memoizedState)?Po(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},o.memoizedState=l,o.childLanes=e.childLanes&~n,t.memoizedState=Mo,s}return e=(o=e.child).sibling,s=Du(o,{mode:"visible",children:s.children}),0===(1&t.mode)&&(s.lanes=n),s.return=t,s.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=s,t.memoizedState=null,s}function Lo(e,t){return(t=Pu({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Bo(e,t,n,r){return null!==r&&fi(r),Yi(t,e.child,null,n),(e=Lo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Vo(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Si(e.return,t,n)}function Wo(e,t,n,r,s){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:s}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=s)}function Uo(e,t,n){var r=t.pendingProps,s=r.revealOrder,i=r.tail;if(wo(e,t,r.children,n),0!==(2&(r=oa.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Vo(e,n,t);else if(19===e.tag)Vo(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(_s(oa,r),0===(1&t.mode))t.memoizedState=null;else switch(s){case"forwards":for(n=t.child,s=null;null!==n;)null!==(e=n.alternate)&&null===la(e)&&(s=n),n=n.sibling;null===(n=s)?(s=t.child,t.child=null):(s=n.sibling,n.sibling=null),Wo(t,!1,s,n,i);break;case"backwards":for(n=null,s=t.child,t.child=null;null!==s;){if(null!==(e=s.alternate)&&null===la(e)){t.child=s;break}e=s.sibling,s.sibling=n,n=s,s=e}Wo(t,!0,n,null,i);break;case"together":Wo(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Go(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function jo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Pl|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Du(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Du(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ho(e,t){if(!si)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function qo(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var s=e.child;null!==s;)n|=s.lanes|s.childLanes,r|=14680064&s.subtreeFlags,r|=14680064&s.flags,s.return=e,s=s.sibling;else for(s=e.child;null!==s;)n|=s.lanes|s.childLanes,r|=s.subtreeFlags,r|=s.flags,s.return=e,s=s.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Ko(e,t,n){var r=t.pendingProps;switch(ti(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qo(t),null;case 1:case 17:return Rs(t.type)&&Os(),qo(t),null;case 3:return r=t.stateNode,sa(),Is(Es),Is(Ns),ca(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(hi(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ii&&(ou(ii),ii=null))),Oo(e,t),qo(t),null;case 5:aa(t);var s=na(ta.current);if(n=t.type,null!==e&&null!=t.stateNode)Do(e,t,n,r,s),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(i(166));return qo(t),null}if(e=na(Ji.current),hi(t)){r=t.stateNode,n=t.type;var a=t.memoizedProps;switch(r[ds]=t,r[ps]=a,e=0!==(1&t.mode),n){case"dialog":Lr("cancel",r),Lr("close",r);break;case"iframe":case"object":case"embed":Lr("load",r);break;case"video":case"audio":for(s=0;s<Fr.length;s++)Lr(Fr[s],r);break;case"source":Lr("error",r);break;case"img":case"image":case"link":Lr("error",r),Lr("load",r);break;case"details":Lr("toggle",r);break;case"input":Y(r,a),Lr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!a.multiple},Lr("invalid",r);break;case"textarea":se(r,a),Lr("invalid",r)}for(var l in be(n,a),s=null,a)if(a.hasOwnProperty(l)){var u=a[l];"children"===l?"string"===typeof u?r.textContent!==u&&(!0!==a.suppressHydrationWarning&&Zr(r.textContent,u,e),s=["children",u]):"number"===typeof u&&r.textContent!==""+u&&(!0!==a.suppressHydrationWarning&&Zr(r.textContent,u,e),s=["children",""+u]):o.hasOwnProperty(l)&&null!=u&&"onScroll"===l&&Lr("scroll",r)}switch(n){case"input":H(r),J(r,a,!0);break;case"textarea":H(r),ae(r);break;case"select":case"option":break;default:"function"===typeof a.onClick&&(r.onclick=Jr)}r=s,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===s.nodeType?s:s.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[ds]=t,e[ps]=r,Ro(e,t,!1,!1),t.stateNode=e;e:{switch(l=ve(n,r),n){case"dialog":Lr("cancel",e),Lr("close",e),s=r;break;case"iframe":case"object":case"embed":Lr("load",e),s=r;break;case"video":case"audio":for(s=0;s<Fr.length;s++)Lr(Fr[s],e);s=r;break;case"source":Lr("error",e),s=r;break;case"img":case"image":case"link":Lr("error",e),Lr("load",e),s=r;break;case"details":Lr("toggle",e),s=r;break;case"input":Y(e,r),s=X(e,r),Lr("invalid",e);break;case"option":default:s=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=P({},r,{value:void 0}),Lr("invalid",e);break;case"textarea":se(e,r),s=re(e,r),Lr("invalid",e)}for(a in be(n,s),u=s)if(u.hasOwnProperty(a)){var c=u[a];"style"===a?ge(e,c):"dangerouslySetInnerHTML"===a?null!=(c=c?c.__html:void 0)&&he(e,c):"children"===a?"string"===typeof c?("textarea"!==n||""!==c)&&de(e,c):"number"===typeof c&&de(e,""+c):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(o.hasOwnProperty(a)?null!=c&&"onScroll"===a&&Lr("scroll",e):null!=c&&v(e,a,c,l))}switch(n){case"input":H(e),J(e,r,!1);break;case"textarea":H(e),ae(e);break;case"option":null!=r.value&&e.setAttribute("value",""+G(r.value));break;case"select":e.multiple=!!r.multiple,null!=(a=r.value)?ne(e,!!r.multiple,a,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof s.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qo(t),null;case 6:if(e&&null!=t.stateNode)Fo(e,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(i(166));if(n=na(ta.current),na(Ji.current),hi(t)){if(r=t.stateNode,n=t.memoizedProps,r[ds]=t,(a=r.nodeValue!==n)&&null!==(e=ni))switch(e.tag){case 3:Zr(r.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zr(r.nodeValue,n,0!==(1&e.mode))}a&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[ds]=t,t.stateNode=r}return qo(t),null;case 13:if(Is(oa),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(si&&null!==ri&&0!==(1&t.mode)&&0===(128&t.flags))di(),pi(),t.flags|=98560,a=!1;else if(a=hi(t),null!==r&&null!==r.dehydrated){if(null===e){if(!a)throw Error(i(318));if(!(a=null!==(a=t.memoizedState)?a.dehydrated:null))throw Error(i(317));a[ds]=t}else pi(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qo(t),a=!1}else null!==ii&&(ou(ii),ii=null),a=!0;if(!a)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&oa.current)?0===Fl&&(Fl=3):gu())),null!==t.updateQueue&&(t.flags|=4),qo(t),null);case 4:return sa(),Oo(e,t),null===e&&Wr(t.stateNode.containerInfo),qo(t),null;case 10:return ki(t.type._context),qo(t),null;case 19:if(Is(oa),null===(a=t.memoizedState))return qo(t),null;if(r=0!==(128&t.flags),null===(l=a.rendering))if(r)Ho(a,!1);else{if(0!==Fl||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=la(e))){for(t.flags|=128,Ho(a,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(a=n).flags&=14680066,null===(l=a.alternate)?(a.childLanes=0,a.lanes=e,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=l.childLanes,a.lanes=l.lanes,a.child=l.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=l.memoizedProps,a.memoizedState=l.memoizedState,a.updateQueue=l.updateQueue,a.type=l.type,e=l.dependencies,a.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return _s(oa,1&oa.current|2),t.child}e=e.sibling}null!==a.tail&&Qe()>Ul&&(t.flags|=128,r=!0,Ho(a,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=la(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Ho(a,!0),null===a.tail&&"hidden"===a.tailMode&&!l.alternate&&!si)return qo(t),null}else 2*Qe()-a.renderingStartTime>Ul&&1073741824!==n&&(t.flags|=128,r=!0,Ho(a,!1),t.lanes=4194304);a.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=a.last)?n.sibling=l:t.child=l,a.last=l)}return null!==a.tail?(t=a.tail,a.rendering=t,a.tail=t.sibling,a.renderingStartTime=Qe(),t.sibling=null,n=oa.current,_s(oa,r?1&n|2:1&n),t):(qo(t),null);case 22:case 23:return du(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!==(1&t.mode)?0!==(1073741824&Ol)&&(qo(t),6&t.subtreeFlags&&(t.flags|=8192)):qo(t),null;case 24:case 25:return null}throw Error(i(156,t.tag))}function Xo(e,t){switch(ti(t),t.tag){case 1:return Rs(t.type)&&Os(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return sa(),Is(Es),Is(Ns),ca(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return aa(t),null;case 13:if(Is(oa),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(i(340));pi()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Is(oa),null;case 4:return sa(),null;case 10:return ki(t.type._context),null;case 22:case 23:return du(),null;default:return null}}Ro=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Oo=function(){},Do=function(e,t,n,r){var s=e.memoizedProps;if(s!==r){e=t.stateNode,na(Ji.current);var i,a=null;switch(n){case"input":s=X(e,s),r=X(e,r),a=[];break;case"select":s=P({},s,{value:void 0}),r=P({},r,{value:void 0}),a=[];break;case"textarea":s=re(e,s),r=re(e,r),a=[];break;default:"function"!==typeof s.onClick&&"function"===typeof r.onClick&&(e.onclick=Jr)}for(c in be(n,r),n=null,s)if(!r.hasOwnProperty(c)&&s.hasOwnProperty(c)&&null!=s[c])if("style"===c){var l=s[c];for(i in l)l.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(o.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in r){var u=r[c];if(l=null!=s?s[c]:void 0,r.hasOwnProperty(c)&&u!==l&&(null!=u||null!=l))if("style"===c)if(l){for(i in l)!l.hasOwnProperty(i)||u&&u.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in u)u.hasOwnProperty(i)&&l[i]!==u[i]&&(n||(n={}),n[i]=u[i])}else n||(a||(a=[]),a.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(a=a||[]).push(c,u)):"children"===c?"string"!==typeof u&&"number"!==typeof u||(a=a||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(o.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Lr("scroll",e),a||l===u||(a=[])):(a=a||[]).push(c,u))}n&&(a=a||[]).push("style",n);var c=a;(t.updateQueue=c)&&(t.flags|=4)}},Fo=function(e,t,n,r){n!==r&&(t.flags|=4)};var Yo=!1,Qo=!1,Zo="function"===typeof WeakSet?WeakSet:Set,Jo=null;function el(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(r){Iu(e,t,r)}else n.current=null}function tl(e,t,n){try{n()}catch(r){Iu(e,t,r)}}var nl=!1;function rl(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var s=r=r.next;do{if((s.tag&e)===e){var i=s.destroy;s.destroy=void 0,void 0!==i&&tl(t,n,i)}s=s.next}while(s!==r)}}function sl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function il(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function al(e){var t=e.alternate;null!==t&&(e.alternate=null,al(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[ds],delete t[ps],delete t[ms],delete t[gs],delete t[ys])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ol(e){return 5===e.tag||3===e.tag||4===e.tag}function ll(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ol(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ul(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(ul(e,t,n),e=e.sibling;null!==e;)ul(e,t,n),e=e.sibling}function cl(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cl(e,t,n),e=e.sibling;null!==e;)cl(e,t,n),e=e.sibling}var hl=null,dl=!1;function pl(e,t,n){for(n=n.child;null!==n;)fl(e,t,n),n=n.sibling}function fl(e,t,n){if(it&&"function"===typeof it.onCommitFiberUnmount)try{it.onCommitFiberUnmount(st,n)}catch(o){}switch(n.tag){case 5:Qo||el(n,t);case 6:var r=hl,s=dl;hl=null,pl(e,t,n),dl=s,null!==(hl=r)&&(dl?(e=hl,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):hl.removeChild(n.stateNode));break;case 18:null!==hl&&(dl?(e=hl,n=n.stateNode,8===e.nodeType?ls(e.parentNode,n):1===e.nodeType&&ls(e,n),Wt(e)):ls(hl,n.stateNode));break;case 4:r=hl,s=dl,hl=n.stateNode.containerInfo,dl=!0,pl(e,t,n),hl=r,dl=s;break;case 0:case 11:case 14:case 15:if(!Qo&&(null!==(r=n.updateQueue)&&null!==(r=r.lastEffect))){s=r=r.next;do{var i=s,a=i.destroy;i=i.tag,void 0!==a&&(0!==(2&i)||0!==(4&i))&&tl(n,t,a),s=s.next}while(s!==r)}pl(e,t,n);break;case 1:if(!Qo&&(el(n,t),"function"===typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(o){Iu(n,t,o)}pl(e,t,n);break;case 21:pl(e,t,n);break;case 22:1&n.mode?(Qo=(r=Qo)||null!==n.memoizedState,pl(e,t,n),Qo=r):pl(e,t,n);break;default:pl(e,t,n)}}function ml(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zo),t.forEach((function(t){var r=Eu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function gl(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var s=n[r];try{var a=e,o=t,l=o;e:for(;null!==l;){switch(l.tag){case 5:hl=l.stateNode,dl=!1;break e;case 3:case 4:hl=l.stateNode.containerInfo,dl=!0;break e}l=l.return}if(null===hl)throw Error(i(160));fl(a,o,s),hl=null,dl=!1;var u=s.alternate;null!==u&&(u.return=null),s.return=null}catch(c){Iu(s,t,c)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)yl(t,e),t=t.sibling}function yl(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(gl(t,e),bl(e),4&r){try{rl(3,e,e.return),sl(3,e)}catch(g){Iu(e,e.return,g)}try{rl(5,e,e.return)}catch(g){Iu(e,e.return,g)}}break;case 1:gl(t,e),bl(e),512&r&&null!==n&&el(n,n.return);break;case 5:if(gl(t,e),bl(e),512&r&&null!==n&&el(n,n.return),32&e.flags){var s=e.stateNode;try{de(s,"")}catch(g){Iu(e,e.return,g)}}if(4&r&&null!=(s=e.stateNode)){var a=e.memoizedProps,o=null!==n?n.memoizedProps:a,l=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===l&&"radio"===a.type&&null!=a.name&&Q(s,a),ve(l,o);var c=ve(l,a);for(o=0;o<u.length;o+=2){var h=u[o],d=u[o+1];"style"===h?ge(s,d):"dangerouslySetInnerHTML"===h?he(s,d):"children"===h?de(s,d):v(s,h,d,c)}switch(l){case"input":Z(s,a);break;case"textarea":ie(s,a);break;case"select":var p=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!a.multiple;var f=a.value;null!=f?ne(s,!!a.multiple,f,!1):p!==!!a.multiple&&(null!=a.defaultValue?ne(s,!!a.multiple,a.defaultValue,!0):ne(s,!!a.multiple,a.multiple?[]:"",!1))}s[ps]=a}catch(g){Iu(e,e.return,g)}}break;case 6:if(gl(t,e),bl(e),4&r){if(null===e.stateNode)throw Error(i(162));s=e.stateNode,a=e.memoizedProps;try{s.nodeValue=a}catch(g){Iu(e,e.return,g)}}break;case 3:if(gl(t,e),bl(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Wt(t.containerInfo)}catch(g){Iu(e,e.return,g)}break;case 4:default:gl(t,e),bl(e);break;case 13:gl(t,e),bl(e),8192&(s=e.child).flags&&(a=null!==s.memoizedState,s.stateNode.isHidden=a,!a||null!==s.alternate&&null!==s.alternate.memoizedState||(Wl=Qe())),4&r&&ml(e);break;case 22:if(h=null!==n&&null!==n.memoizedState,1&e.mode?(Qo=(c=Qo)||h,gl(t,e),Qo=c):gl(t,e),bl(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!h&&0!==(1&e.mode))for(Jo=e,h=e.child;null!==h;){for(d=Jo=h;null!==Jo;){switch(f=(p=Jo).child,p.tag){case 0:case 11:case 14:case 15:rl(4,p,p.return);break;case 1:el(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){r=p,n=p.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Iu(r,n,g)}}break;case 5:el(p,p.return);break;case 22:if(null!==p.memoizedState){kl(d);continue}}null!==f?(f.return=p,Jo=f):kl(d)}h=h.sibling}e:for(h=null,d=e;;){if(5===d.tag){if(null===h){h=d;try{s=d.stateNode,c?"function"===typeof(a=s.style).setProperty?a.setProperty("display","none","important"):a.display="none":(l=d.stateNode,o=void 0!==(u=d.memoizedProps.style)&&null!==u&&u.hasOwnProperty("display")?u.display:null,l.style.display=me("display",o))}catch(g){Iu(e,e.return,g)}}}else if(6===d.tag){if(null===h)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(g){Iu(e,e.return,g)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;h===d&&(h=null),d=d.return}h===d&&(h=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:gl(t,e),bl(e),4&r&&ml(e);case 21:}}function bl(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ol(n)){var r=n;break e}n=n.return}throw Error(i(160))}switch(r.tag){case 5:var s=r.stateNode;32&r.flags&&(de(s,""),r.flags&=-33),cl(e,ll(e),s);break;case 3:case 4:var a=r.stateNode.containerInfo;ul(e,ll(e),a);break;default:throw Error(i(161))}}catch(o){Iu(e,e.return,o)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function vl(e,t,n){Jo=e,xl(e,t,n)}function xl(e,t,n){for(var r=0!==(1&e.mode);null!==Jo;){var s=Jo,i=s.child;if(22===s.tag&&r){var a=null!==s.memoizedState||Yo;if(!a){var o=s.alternate,l=null!==o&&null!==o.memoizedState||Qo;o=Yo;var u=Qo;if(Yo=a,(Qo=l)&&!u)for(Jo=s;null!==Jo;)l=(a=Jo).child,22===a.tag&&null!==a.memoizedState?Sl(s):null!==l?(l.return=a,Jo=l):Sl(s);for(;null!==i;)Jo=i,xl(i,t,n),i=i.sibling;Jo=s,Yo=o,Qo=u}wl(e)}else 0!==(8772&s.subtreeFlags)&&null!==i?(i.return=s,Jo=i):wl(e)}}function wl(e){for(;null!==Jo;){var t=Jo;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Qo||sl(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Qo)if(null===n)r.componentDidMount();else{var s=t.elementType===t.type?n.memoizedProps:gi(t.type,n.memoizedProps);r.componentDidUpdate(s,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var a=t.updateQueue;null!==a&&zi(t,a,r);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}zi(t,o,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var h=c.memoizedState;if(null!==h){var d=h.dehydrated;null!==d&&Wt(d)}}}break;default:throw Error(i(163))}Qo||512&t.flags&&il(t)}catch(p){Iu(t,t.return,p)}}if(t===e){Jo=null;break}if(null!==(n=t.sibling)){n.return=t.return,Jo=n;break}Jo=t.return}}function kl(e){for(;null!==Jo;){var t=Jo;if(t===e){Jo=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Jo=n;break}Jo=t.return}}function Sl(e){for(;null!==Jo;){var t=Jo;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{sl(4,t)}catch(l){Iu(t,n,l)}break;case 1:var r=t.stateNode;if("function"===typeof r.componentDidMount){var s=t.return;try{r.componentDidMount()}catch(l){Iu(t,s,l)}}var i=t.return;try{il(t)}catch(l){Iu(t,i,l)}break;case 5:var a=t.return;try{il(t)}catch(l){Iu(t,a,l)}}}catch(l){Iu(t,t.return,l)}if(t===e){Jo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Jo=o;break}Jo=t.return}}var Cl,Il=Math.ceil,_l=x.ReactCurrentDispatcher,Tl=x.ReactCurrentOwner,Nl=x.ReactCurrentBatchConfig,El=0,$l=null,Al=null,Rl=0,Ol=0,Dl=Cs(0),Fl=0,Ml=null,Pl=0,zl=0,Ll=0,Bl=null,Vl=null,Wl=0,Ul=1/0,Gl=null,jl=!1,Hl=null,ql=null,Kl=!1,Xl=null,Yl=0,Ql=0,Zl=null,Jl=-1,eu=0;function tu(){return 0!==(6&El)?Qe():-1!==Jl?Jl:Jl=Qe()}function nu(e){return 0===(1&e.mode)?1:0!==(2&El)&&0!==Rl?Rl&-Rl:null!==mi.transition?(0===eu&&(eu=mt()),eu):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function ru(e,t,n,r){if(50<Ql)throw Ql=0,Zl=null,Error(i(185));yt(e,n,r),0!==(2&El)&&e===$l||(e===$l&&(0===(2&El)&&(zl|=n),4===Fl&&lu(e,Rl)),su(e,r),1===n&&0===El&&0===(1&t.mode)&&(Ul=Qe()+500,Ls&&Ws()))}function su(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,s=e.expirationTimes,i=e.pendingLanes;0<i;){var a=31-at(i),o=1<<a,l=s[a];-1===l?0!==(o&n)&&0===(o&r)||(s[a]=pt(o,t)):l<=t&&(e.expiredLanes|=o),i&=~o}}(e,t);var r=dt(e,e===$l?Rl:0);if(0===r)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){Ls=!0,Vs(e)}(uu.bind(null,e)):Vs(uu.bind(null,e)),as((function(){0===(6&El)&&Ws()})),n=null;else{switch(xt(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=$u(n,iu.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function iu(e,t){if(Jl=-1,eu=0,0!==(6&El))throw Error(i(327));var n=e.callbackNode;if(Su()&&e.callbackNode!==n)return null;var r=dt(e,e===$l?Rl:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||t)t=yu(e,r);else{t=r;var s=El;El|=2;var a=mu();for($l===e&&Rl===t||(Gl=null,Ul=Qe()+500,pu(e,t));;)try{vu();break}catch(l){fu(e,l)}wi(),_l.current=a,El=s,null!==Al?t=0:($l=null,Rl=0,t=Fl)}if(0!==t){if(2===t&&(0!==(s=ft(e))&&(r=s,t=au(e,s))),1===t)throw n=Ml,pu(e,0),lu(e,r),su(e,Qe()),n;if(6===t)lu(e,r);else{if(s=e.current.alternate,0===(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var s=n[r],i=s.getSnapshot;s=s.value;try{if(!or(i(),s))return!1}catch(o){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(s)&&(2===(t=yu(e,r))&&(0!==(a=ft(e))&&(r=a,t=au(e,a))),1===t))throw n=Ml,pu(e,0),lu(e,r),su(e,Qe()),n;switch(e.finishedWork=s,e.finishedLanes=r,t){case 0:case 1:throw Error(i(345));case 2:case 5:ku(e,Vl,Gl);break;case 3:if(lu(e,r),(130023424&r)===r&&10<(t=Wl+500-Qe())){if(0!==dt(e,0))break;if(((s=e.suspendedLanes)&r)!==r){tu(),e.pingedLanes|=e.suspendedLanes&s;break}e.timeoutHandle=rs(ku.bind(null,e,Vl,Gl),t);break}ku(e,Vl,Gl);break;case 4:if(lu(e,r),(4194240&r)===r)break;for(t=e.eventTimes,s=-1;0<r;){var o=31-at(r);a=1<<o,(o=t[o])>s&&(s=o),r&=~a}if(r=s,10<(r=(120>(r=Qe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Il(r/1960))-r)){e.timeoutHandle=rs(ku.bind(null,e,Vl,Gl),r);break}ku(e,Vl,Gl);break;default:throw Error(i(329))}}}return su(e,Qe()),e.callbackNode===n?iu.bind(null,e):null}function au(e,t){var n=Bl;return e.current.memoizedState.isDehydrated&&(pu(e,t).flags|=256),2!==(e=yu(e,t))&&(t=Vl,Vl=n,null!==t&&ou(t)),e}function ou(e){null===Vl?Vl=e:Vl.push.apply(Vl,e)}function lu(e,t){for(t&=~Ll,t&=~zl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-at(t),r=1<<n;e[n]=-1,t&=~r}}function uu(e){if(0!==(6&El))throw Error(i(327));Su();var t=dt(e,0);if(0===(1&t))return su(e,Qe()),null;var n=yu(e,t);if(0!==e.tag&&2===n){var r=ft(e);0!==r&&(t=r,n=au(e,r))}if(1===n)throw n=Ml,pu(e,0),lu(e,t),su(e,Qe()),n;if(6===n)throw Error(i(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,ku(e,Vl,Gl),su(e,Qe()),null}function cu(e,t){var n=El;El|=1;try{return e(t)}finally{0===(El=n)&&(Ul=Qe()+500,Ls&&Ws())}}function hu(e){null!==Xl&&0===Xl.tag&&0===(6&El)&&Su();var t=El;El|=1;var n=Nl.transition,r=vt;try{if(Nl.transition=null,vt=1,e)return e()}finally{vt=r,Nl.transition=n,0===(6&(El=t))&&Ws()}}function du(){Ol=Dl.current,Is(Dl)}function pu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ss(n)),null!==Al)for(n=Al.return;null!==n;){var r=n;switch(ti(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&Os();break;case 3:sa(),Is(Es),Is(Ns),ca();break;case 5:aa(r);break;case 4:sa();break;case 13:case 19:Is(oa);break;case 10:ki(r.type._context);break;case 22:case 23:du()}n=n.return}if($l=e,Al=e=Du(e.current,null),Rl=Ol=t,Fl=0,Ml=null,Ll=zl=Pl=0,Vl=Bl=null,null!==_i){for(t=0;t<_i.length;t++)if(null!==(r=(n=_i[t]).interleaved)){n.interleaved=null;var s=r.next,i=n.pending;if(null!==i){var a=i.next;i.next=s,r.next=a}n.pending=r}_i=null}return e}function fu(e,t){for(;;){var n=Al;try{if(wi(),ha.current=io,ya){for(var r=fa.memoizedState;null!==r;){var s=r.queue;null!==s&&(s.pending=null),r=r.next}ya=!1}if(pa=0,ga=ma=fa=null,ba=!1,va=0,Tl.current=null,null===n||null===n.return){Fl=1,Ml=t,Al=null;break}e:{var a=e,o=n.return,l=n,u=t;if(t=Rl,l.flags|=32768,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u,h=l,d=h.tag;if(0===(1&h.mode)&&(0===d||11===d||15===d)){var p=h.alternate;p?(h.updateQueue=p.updateQueue,h.memoizedState=p.memoizedState,h.lanes=p.lanes):(h.updateQueue=null,h.memoizedState=null)}var f=yo(o);if(null!==f){f.flags&=-257,bo(f,o,l,0,t),1&f.mode&&go(a,c,t),u=c;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(u),t.updateQueue=g}else m.add(u);break e}if(0===(1&t)){go(a,c,t),gu();break e}u=Error(i(426))}else if(si&&1&l.mode){var y=yo(o);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),bo(y,o,l,0,t),fi(uo(u,l));break e}}a=u=uo(u,l),4!==Fl&&(Fl=2),null===Bl?Bl=[a]:Bl.push(a),a=o;do{switch(a.tag){case 3:a.flags|=65536,t&=-t,a.lanes|=t,Mi(a,fo(0,u,t));break e;case 1:l=u;var b=a.type,v=a.stateNode;if(0===(128&a.flags)&&("function"===typeof b.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===ql||!ql.has(v)))){a.flags|=65536,t&=-t,a.lanes|=t,Mi(a,mo(a,l,t));break e}}a=a.return}while(null!==a)}wu(n)}catch(x){t=x,Al===n&&null!==n&&(Al=n=n.return);continue}break}}function mu(){var e=_l.current;return _l.current=io,null===e?io:e}function gu(){0!==Fl&&3!==Fl&&2!==Fl||(Fl=4),null===$l||0===(268435455&Pl)&&0===(268435455&zl)||lu($l,Rl)}function yu(e,t){var n=El;El|=2;var r=mu();for($l===e&&Rl===t||(Gl=null,pu(e,t));;)try{bu();break}catch(s){fu(e,s)}if(wi(),El=n,_l.current=r,null!==Al)throw Error(i(261));return $l=null,Rl=0,Fl}function bu(){for(;null!==Al;)xu(Al)}function vu(){for(;null!==Al&&!Xe();)xu(Al)}function xu(e){var t=Cl(e.alternate,e,Ol);e.memoizedProps=e.pendingProps,null===t?wu(e):Al=t,Tl.current=null}function wu(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Ko(n,t,Ol)))return void(Al=n)}else{if(null!==(n=Xo(n,t)))return n.flags&=32767,void(Al=n);if(null===e)return Fl=6,void(Al=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Al=t);Al=t=e}while(null!==t);0===Fl&&(Fl=5)}function ku(e,t,n){var r=vt,s=Nl.transition;try{Nl.transition=null,vt=1,function(e,t,n,r){do{Su()}while(null!==Xl);if(0!==(6&El))throw Error(i(327));n=e.finishedWork;var s=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null,e.callbackPriority=0;var a=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var s=31-at(n),i=1<<s;t[s]=0,r[s]=-1,e[s]=-1,n&=~i}}(e,a),e===$l&&(Al=$l=null,Rl=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Kl||(Kl=!0,$u(tt,(function(){return Su(),null}))),a=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||a){a=Nl.transition,Nl.transition=null;var o=vt;vt=1;var l=El;El|=4,Tl.current=null,function(e,t){if(es=Gt,pr(e=dr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var s=r.anchorOffset,a=r.focusNode;r=r.focusOffset;try{n.nodeType,a.nodeType}catch(w){n=null;break e}var o=0,l=-1,u=-1,c=0,h=0,d=e,p=null;t:for(;;){for(var f;d!==n||0!==s&&3!==d.nodeType||(l=o+s),d!==a||0!==r&&3!==d.nodeType||(u=o+r),3===d.nodeType&&(o+=d.nodeValue.length),null!==(f=d.firstChild);)p=d,d=f;for(;;){if(d===e)break t;if(p===n&&++c===s&&(l=o),p===a&&++h===r&&(u=o),null!==(f=d.nextSibling))break;p=(d=p).parentNode}d=f}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(ts={focusedElem:e,selectionRange:n},Gt=!1,Jo=t;null!==Jo;)if(e=(t=Jo).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Jo=e;else for(;null!==Jo;){t=Jo;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:gi(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(i(163))}}catch(w){Iu(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Jo=e;break}Jo=t.return}m=nl,nl=!1}(e,n),yl(n,e),fr(ts),Gt=!!es,ts=es=null,e.current=n,vl(n,e,s),Ye(),El=l,vt=o,Nl.transition=a}else e.current=n;if(Kl&&(Kl=!1,Xl=e,Yl=s),a=e.pendingLanes,0===a&&(ql=null),function(e){if(it&&"function"===typeof it.onCommitFiberRoot)try{it.onCommitFiberRoot(st,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),su(e,Qe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)s=t[n],r(s.value,{componentStack:s.stack,digest:s.digest});if(jl)throw jl=!1,e=Hl,Hl=null,e;0!==(1&Yl)&&0!==e.tag&&Su(),a=e.pendingLanes,0!==(1&a)?e===Zl?Ql++:(Ql=0,Zl=e):Ql=0,Ws()}(e,t,n,r)}finally{Nl.transition=s,vt=r}return null}function Su(){if(null!==Xl){var e=xt(Yl),t=Nl.transition,n=vt;try{if(Nl.transition=null,vt=16>e?16:e,null===Xl)var r=!1;else{if(e=Xl,Xl=null,Yl=0,0!==(6&El))throw Error(i(331));var s=El;for(El|=4,Jo=e.current;null!==Jo;){var a=Jo,o=a.child;if(0!==(16&Jo.flags)){var l=a.deletions;if(null!==l){for(var u=0;u<l.length;u++){var c=l[u];for(Jo=c;null!==Jo;){var h=Jo;switch(h.tag){case 0:case 11:case 15:rl(8,h,a)}var d=h.child;if(null!==d)d.return=h,Jo=d;else for(;null!==Jo;){var p=(h=Jo).sibling,f=h.return;if(al(h),h===c){Jo=null;break}if(null!==p){p.return=f,Jo=p;break}Jo=f}}}var m=a.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Jo=a}}if(0!==(2064&a.subtreeFlags)&&null!==o)o.return=a,Jo=o;else e:for(;null!==Jo;){if(0!==(2048&(a=Jo).flags))switch(a.tag){case 0:case 11:case 15:rl(9,a,a.return)}var b=a.sibling;if(null!==b){b.return=a.return,Jo=b;break e}Jo=a.return}}var v=e.current;for(Jo=v;null!==Jo;){var x=(o=Jo).child;if(0!==(2064&o.subtreeFlags)&&null!==x)x.return=o,Jo=x;else e:for(o=v;null!==Jo;){if(0!==(2048&(l=Jo).flags))try{switch(l.tag){case 0:case 11:case 15:sl(9,l)}}catch(k){Iu(l,l.return,k)}if(l===o){Jo=null;break e}var w=l.sibling;if(null!==w){w.return=l.return,Jo=w;break e}Jo=l.return}}if(El=s,Ws(),it&&"function"===typeof it.onPostCommitFiberRoot)try{it.onPostCommitFiberRoot(st,e)}catch(k){}r=!0}return r}finally{vt=n,Nl.transition=t}}return!1}function Cu(e,t,n){e=Di(e,t=fo(0,t=uo(n,t),1),1),t=tu(),null!==e&&(yt(e,1,t),su(e,t))}function Iu(e,t,n){if(3===e.tag)Cu(e,e,n);else for(;null!==t;){if(3===t.tag){Cu(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===ql||!ql.has(r))){t=Di(t,e=mo(t,e=uo(n,e),1),1),e=tu(),null!==t&&(yt(t,1,e),su(t,e));break}}t=t.return}}function _u(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=tu(),e.pingedLanes|=e.suspendedLanes&n,$l===e&&(Rl&n)===n&&(4===Fl||3===Fl&&(130023424&Rl)===Rl&&500>Qe()-Wl?pu(e,0):Ll|=n),su(e,t)}function Tu(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ct,0===(130023424&(ct<<=1))&&(ct=4194304)));var n=tu();null!==(e=Ei(e,t))&&(yt(e,t,n),su(e,n))}function Nu(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Tu(e,n)}function Eu(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,s=e.memoizedState;null!==s&&(n=s.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(i(314))}null!==r&&r.delete(t),Tu(e,n)}function $u(e,t){return qe(e,t)}function Au(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ru(e,t,n,r){return new Au(e,t,n,r)}function Ou(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Du(e,t){var n=e.alternate;return null===n?((n=Ru(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Fu(e,t,n,r,s,a){var o=2;if(r=e,"function"===typeof e)Ou(e)&&(o=1);else if("string"===typeof e)o=5;else e:switch(e){case S:return Mu(n.children,s,a,t);case C:o=8,s|=8;break;case I:return(e=Ru(12,n,t,2|s)).elementType=I,e.lanes=a,e;case E:return(e=Ru(13,n,t,s)).elementType=E,e.lanes=a,e;case $:return(e=Ru(19,n,t,s)).elementType=$,e.lanes=a,e;case O:return Pu(n,s,a,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case _:o=10;break e;case T:o=9;break e;case N:o=11;break e;case A:o=14;break e;case R:o=16,r=null;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Ru(o,n,t,s)).elementType=e,t.type=r,t.lanes=a,t}function Mu(e,t,n,r){return(e=Ru(7,e,r,t)).lanes=n,e}function Pu(e,t,n,r){return(e=Ru(22,e,r,t)).elementType=O,e.lanes=n,e.stateNode={isHidden:!1},e}function zu(e,t,n){return(e=Ru(6,e,null,t)).lanes=n,e}function Lu(e,t,n){return(t=Ru(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bu(e,t,n,r,s){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function Vu(e,t,n,r,s,i,a,o,l){return e=new Bu(e,t,n,o,l),1===t?(t=1,!0===i&&(t|=8)):t=0,i=Ru(3,null,null,t),e.current=i,i.stateNode=e,i.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ai(i),e}function Wu(e){if(!e)return Ts;e:{if(We(e=e._reactInternals)!==e||1!==e.tag)throw Error(i(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Rs(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(i(171))}if(1===e.tag){var n=e.type;if(Rs(n))return Fs(e,n,t)}return t}function Uu(e,t,n,r,s,i,a,o,l){return(e=Vu(n,r,!0,e,0,i,0,o,l)).context=Wu(null),n=e.current,(i=Oi(r=tu(),s=nu(n))).callback=void 0!==t&&null!==t?t:null,Di(n,i,s),e.current.lanes=s,yt(e,s,r),su(e,r),e}function Gu(e,t,n,r){var s=t.current,i=tu(),a=nu(s);return n=Wu(n),null===t.context?t.context=n:t.pendingContext=n,(t=Oi(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Di(s,t,a))&&(ru(e,s,a,i),Fi(e,s,a)),a}function ju(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Hu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qu(e,t){Hu(e,t),(e=e.alternate)&&Hu(e,t)}Cl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Es.current)xo=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return xo=!1,function(e,t,n){switch(t.tag){case 3:$o(t),pi();break;case 5:ia(t);break;case 1:Rs(t.type)&&Ms(t);break;case 4:ra(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,s=t.memoizedProps.value;_s(yi,r._currentValue),r._currentValue=s;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(_s(oa,1&oa.current),t.flags|=128,null):0!==(n&t.child.childLanes)?zo(e,t,n):(_s(oa,1&oa.current),null!==(e=jo(e,t,n))?e.sibling:null);_s(oa,1&oa.current);break;case 19:if(r=0!==(n&t.childLanes),0!==(128&e.flags)){if(r)return Uo(e,t,n);t.flags|=128}if(null!==(s=t.memoizedState)&&(s.rendering=null,s.tail=null,s.lastEffect=null),_s(oa,oa.current),r)break;return null;case 22:case 23:return t.lanes=0,Io(e,t,n)}return jo(e,t,n)}(e,t,n);xo=0!==(131072&e.flags)}else xo=!1,si&&0!==(1048576&t.flags)&&Js(t,Hs,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Go(e,t),e=t.pendingProps;var s=As(t,Ns.current);Ci(t,n),s=Sa(null,t,r,e,s,n);var a=Ca();return t.flags|=1,"object"===typeof s&&null!==s&&"function"===typeof s.render&&void 0===s.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Rs(r)?(a=!0,Ms(t)):a=!1,t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,Ai(t),s.updater=Vi,t.stateNode=s,s._reactInternals=t,ji(t,r,e,n),t=Eo(null,t,r,!0,a,n)):(t.tag=0,si&&a&&ei(t),wo(null,t,s,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Go(e,t),e=t.pendingProps,r=(s=r._init)(r._payload),t.type=r,s=t.tag=function(e){if("function"===typeof e)return Ou(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===N)return 11;if(e===A)return 14}return 2}(r),e=gi(r,e),s){case 0:t=To(null,t,r,e,n);break e;case 1:t=No(null,t,r,e,n);break e;case 11:t=ko(null,t,r,e,n);break e;case 14:t=So(null,t,r,gi(r.type,e),n);break e}throw Error(i(306,r,""))}return t;case 0:return r=t.type,s=t.pendingProps,To(e,t,r,s=t.elementType===r?s:gi(r,s),n);case 1:return r=t.type,s=t.pendingProps,No(e,t,r,s=t.elementType===r?s:gi(r,s),n);case 3:e:{if($o(t),null===e)throw Error(i(387));r=t.pendingProps,s=(a=t.memoizedState).element,Ri(e,t),Pi(t,r,null,n);var o=t.memoizedState;if(r=o.element,a.isDehydrated){if(a={element:r,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=a,t.memoizedState=a,256&t.flags){t=Ao(e,t,r,n,s=uo(Error(i(423)),t));break e}if(r!==s){t=Ao(e,t,r,n,s=uo(Error(i(424)),t));break e}for(ri=us(t.stateNode.containerInfo.firstChild),ni=t,si=!0,ii=null,n=Qi(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(pi(),r===s){t=jo(e,t,n);break e}wo(e,t,r,n)}t=t.child}return t;case 5:return ia(t),null===e&&ui(t),r=t.type,s=t.pendingProps,a=null!==e?e.memoizedProps:null,o=s.children,ns(r,s)?o=null:null!==a&&ns(r,a)&&(t.flags|=32),_o(e,t),wo(e,t,o,n),t.child;case 6:return null===e&&ui(t),null;case 13:return zo(e,t,n);case 4:return ra(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Yi(t,null,r,n):wo(e,t,r,n),t.child;case 11:return r=t.type,s=t.pendingProps,ko(e,t,r,s=t.elementType===r?s:gi(r,s),n);case 7:return wo(e,t,t.pendingProps,n),t.child;case 8:case 12:return wo(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,s=t.pendingProps,a=t.memoizedProps,o=s.value,_s(yi,r._currentValue),r._currentValue=o,null!==a)if(or(a.value,o)){if(a.children===s.children&&!Es.current){t=jo(e,t,n);break e}}else for(null!==(a=t.child)&&(a.return=t);null!==a;){var l=a.dependencies;if(null!==l){o=a.child;for(var u=l.firstContext;null!==u;){if(u.context===r){if(1===a.tag){(u=Oi(-1,n&-n)).tag=2;var c=a.updateQueue;if(null!==c){var h=(c=c.shared).pending;null===h?u.next=u:(u.next=h.next,h.next=u),c.pending=u}}a.lanes|=n,null!==(u=a.alternate)&&(u.lanes|=n),Si(a.return,n,t),l.lanes|=n;break}u=u.next}}else if(10===a.tag)o=a.type===t.type?null:a.child;else if(18===a.tag){if(null===(o=a.return))throw Error(i(341));o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Si(o,n,t),o=a.sibling}else o=a.child;if(null!==o)o.return=a;else for(o=a;null!==o;){if(o===t){o=null;break}if(null!==(a=o.sibling)){a.return=o.return,o=a;break}o=o.return}a=o}wo(e,t,s.children,n),t=t.child}return t;case 9:return s=t.type,r=t.pendingProps.children,Ci(t,n),r=r(s=Ii(s)),t.flags|=1,wo(e,t,r,n),t.child;case 14:return s=gi(r=t.type,t.pendingProps),So(e,t,r,s=gi(r.type,s),n);case 15:return Co(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,s=t.pendingProps,s=t.elementType===r?s:gi(r,s),Go(e,t),t.tag=1,Rs(r)?(e=!0,Ms(t)):e=!1,Ci(t,n),Ui(t,r,s),ji(t,r,s,n),Eo(null,t,r,!0,e,n);case 19:return Uo(e,t,n);case 22:return Io(e,t,n)}throw Error(i(156,t.tag))};var Ku="function"===typeof reportError?reportError:function(e){console.error(e)};function Xu(e){this._internalRoot=e}function Yu(e){this._internalRoot=e}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Ju(){}function ec(e,t,n,r,s){var i=n._reactRootContainer;if(i){var a=i;if("function"===typeof s){var o=s;s=function(){var e=ju(a);o.call(e)}}Gu(t,a,e,s)}else a=function(e,t,n,r,s){if(s){if("function"===typeof r){var i=r;r=function(){var e=ju(a);i.call(e)}}var a=Uu(t,r,e,0,null,!1,0,"",Ju);return e._reactRootContainer=a,e[fs]=a.current,Wr(8===e.nodeType?e.parentNode:e),hu(),a}for(;s=e.lastChild;)e.removeChild(s);if("function"===typeof r){var o=r;r=function(){var e=ju(l);o.call(e)}}var l=Vu(e,0,!1,null,0,!1,0,"",Ju);return e._reactRootContainer=l,e[fs]=l.current,Wr(8===e.nodeType?e.parentNode:e),hu((function(){Gu(t,l,n,r)})),l}(n,t,e,s,r);return ju(a)}Yu.prototype.render=Xu.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(i(409));Gu(e,t,null,null)},Yu.prototype.unmount=Xu.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;hu((function(){Gu(null,e,null,null)})),t[fs]=null}},Yu.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ot.length&&0!==t&&t<Ot[n].priority;n++);Ot.splice(n,0,e),0===n&&Pt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ht(t.pendingLanes);0!==n&&(bt(t,1|n),su(t,Qe()),0===(6&El)&&(Ul=Qe()+500,Ws()))}break;case 13:hu((function(){var t=Ei(e,1);if(null!==t){var n=tu();ru(t,e,1,n)}})),qu(e,1)}},kt=function(e){if(13===e.tag){var t=Ei(e,134217728);if(null!==t)ru(t,e,134217728,tu());qu(e,134217728)}},St=function(e){if(13===e.tag){var t=nu(e),n=Ei(e,t);if(null!==n)ru(n,e,t,tu());qu(e,t)}},Ct=function(){return vt},It=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},ke=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var s=ws(r);if(!s)throw Error(i(90));q(r),Z(r,s)}}}break;case"textarea":ie(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ne=cu,Ee=hu;var tc={usingClientEntryPoint:!1,Events:[vs,xs,ws,_e,Te,cu]},nc={findFiberByHostInstance:bs,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rc={bundleType:nc.bundleType,version:nc.version,rendererPackageName:nc.rendererPackageName,rendererConfig:nc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:nc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var sc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!sc.isDisabled&&sc.supportsFiber)try{st=sc.inject(rc),it=sc}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tc,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qu(t))throw Error(i(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Qu(e))throw Error(i(299));var n=!1,r="",s=Ku;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),t=Vu(e,1,!1,null,0,n,0,r,s),e[fs]=t.current,Wr(8===e.nodeType?e.parentNode:e),new Xu(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw e=Object.keys(e).join(","),Error(i(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return hu(e)},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(i(200));return ec(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Qu(e))throw Error(i(405));var r=null!=n&&n.hydratedSources||null,s=!1,a="",o=Ku;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(s=!0),void 0!==n.identifierPrefix&&(a=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),t=Uu(t,null,e,1,null!=n?n:null,s,0,a,o),e[fs]=t.current,Wr(e),r)for(e=0;e<r.length;e++)s=(s=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,s]:t.mutableSourceEagerHydrationData.push(n,s);return new Yu(t)},t.render=function(e,t,n){if(!Zu(t))throw Error(i(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(i(40));return!!e._reactRootContainer&&(hu((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[fs]=null}))})),!0)},t.unstable_batchedUpdates=cu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zu(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return ec(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},736:(e,t,n)=>{var r=n(738).default,s=n(45);e.exports=function(e){var t=s(e,"string");return"symbol"==r(t)?t:t+""},e.exports.__esModule=!0,e.exports.default=e.exports},738:e=>{function t(n){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(n)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},752:e=>{e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},817:()=>{},853:(e,t,n)=>{"use strict";e.exports=n(234)},879:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var r="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e};var s=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var r=e[t];if(r&&r.Math==Math)return r}throw Error("Cannot find global object")}(this);function i(e,t){if(t)e:{var n=s;e=e.split(".");for(var i=0;i<e.length-1;i++){var a=e[i];if(!(a in n))break e;n=n[a]}(t=t(i=n[e=e[e.length-1]]))!=i&&null!=t&&r(n,e,{configurable:!0,writable:!0,value:t})}}function a(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function o(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function l(e){if(!(e instanceof Array)){e=o(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}i("Symbol",(function(e){function t(e,t){this.h=e,r(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.h};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",s=0;return function e(r){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(r||"")+"_"+s++,r)}})),i("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),i=0;i<n.length;i++){var o=s[n[i]];"function"===typeof o&&"function"!=typeof o.prototype[e]&&r(o.prototype,e,{configurable:!0,writable:!0,value:function(){return a(t(this))}})}return e}));var u="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(e[s]=r[s])}return e};i("Object.assign",(function(e){return e||u}));var c,h="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)c=Object.setPrototypeOf;else{var d;e:{var p={};try{p.__proto__={a:!0},d=p.a;break e}catch(xn){}d=!1}c=d?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var f=c;function m(e,t){if(e.prototype=h(t.prototype),e.prototype.constructor=e,f)f(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,n);r&&Object.defineProperty(e,n,r)}else e[n]=t[n];e.za=t.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function y(e){if(e.m)throw new TypeError("Generator is already running");e.m=!0}function b(e,t){e.l={ma:t,na:!0},e.h=e.s||e.v}function v(e,t,n){return e.h=n,{value:t}}function x(e){this.h=new g,this.i=e}function w(e,t,n,r){try{var s=t.call(e.h.j,n);if(!(s instanceof Object))throw new TypeError("Iterator result "+s+" is not an object");if(!s.done)return e.h.m=!1,s;var i=s.value}catch(a){return e.h.j=null,b(e.h,a),k(e)}return e.h.j=null,r.call(e.h,i),k(e)}function k(e){for(;e.h.h;)try{var t=e.i(e.h);if(t)return e.h.m=!1,{value:t.value,done:!1}}catch(n){e.h.i=void 0,b(e.h,n)}if(e.h.m=!1,e.h.l){if(t=e.h.l,e.h.l=null,t.na)throw t.ma;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function S(e){this.next=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.next,t,e.h.u):(e.h.u(t),t=k(e)),t},this.throw=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.throw,t,e.h.u):(b(e.h,t),t=k(e)),t},this.return=function(t){return function(e,t){y(e.h);var n=e.h.j;return n?w(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.h.return):(e.h.return(t),k(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function C(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(r,s){!function e(i){i.done?r(i.value):Promise.resolve(i.value).then(t,n).then(e,s)}(e.next())}))}(new S(new x(e)))}function I(e){return e||Array.prototype.fill}g.prototype.u=function(e){this.i=e},g.prototype.return=function(e){this.l={return:e},this.h=this.v},i("Promise",(function(e){function t(e){this.i=0,this.j=void 0,this.h=[],this.u=!1;var t=this.l();try{e(t.resolve,t.reject)}catch(n){t.reject(n)}}function n(){this.h=null}function r(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.i=function(e){if(null==this.h){this.h=[];var t=this;this.j((function(){t.m()}))}this.h.push(e)};var i=s.setTimeout;n.prototype.j=function(e){i(e,0)},n.prototype.m=function(){for(;this.h&&this.h.length;){var e=this.h;this.h=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(r){this.l(r)}}}this.h=null},n.prototype.l=function(e){this.j((function(){throw e}))},t.prototype.l=function(){function e(e){return function(r){n||(n=!0,e.call(t,r))}}var t=this,n=!1;return{resolve:e(this.I),reject:e(this.m)}},t.prototype.I=function(e){if(e===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.L(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.F(e):this.s(e)}},t.prototype.F=function(e){var t=void 0;try{t=e.then}catch(n){return void this.m(n)}"function"==typeof t?this.M(t,e):this.s(e)},t.prototype.m=function(e){this.v(2,e)},t.prototype.s=function(e){this.v(1,e)},t.prototype.v=function(e,t){if(0!=this.i)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.i);this.i=e,this.j=t,2===this.i&&this.K(),this.H()},t.prototype.K=function(){var e=this;i((function(){if(e.D()){var t=s.console;"undefined"!==typeof t&&t.error(e.j)}}),1)},t.prototype.D=function(){if(this.u)return!1;var e=s.CustomEvent,t=s.Event,n=s.dispatchEvent;return"undefined"===typeof n||("function"===typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"===typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=s.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.j,n(e))},t.prototype.H=function(){if(null!=this.h){for(var e=0;e<this.h.length;++e)a.i(this.h[e]);this.h=null}};var a=new n;return t.prototype.L=function(e){var t=this.l();e.T(t.resolve,t.reject)},t.prototype.M=function(e,t){var n=this.l();try{e.call(t,n.resolve,n.reject)}catch(r){n.reject(r)}},t.prototype.then=function(e,n){function r(e,t){return"function"==typeof e?function(t){try{s(e(t))}catch(n){i(n)}}:t}var s,i,a=new t((function(e,t){s=e,i=t}));return this.T(r(e,s),r(n,i)),a},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.T=function(e,t){function n(){switch(r.i){case 1:e(r.j);break;case 2:t(r.j);break;default:throw Error("Unexpected state: "+r.i)}}var r=this;null==this.h?a.i(n):this.h.push(n),this.u=!0},t.resolve=r,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var s=o(e),i=s.next();!i.done;i=s.next())r(i.value).T(t,n)}))},t.all=function(e){var n=o(e),s=n.next();return s.done?r([]):new t((function(e,t){function i(t){return function(n){a[t]=n,0==--o&&e(a)}}var a=[],o=0;do{a.push(void 0),o++,r(s.value).T(i(a.length-1),t),s=n.next()}while(!s.done)}))},t})),i("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,r=!1,s={next:function(){if(!r&&n<e.length){var s=n++;return{value:t(s,e[s]),done:!1}}return r=!0,{done:!0,value:void 0}}};return s[Symbol.iterator]=function(){return s},s}(this,(function(e){return e}))}})),i("Array.prototype.fill",(function(e){return e||function(e,t,n){var r=this.length||0;for(0>t&&(t=Math.max(0,r+t)),(null==n||n>r)&&(n=r),0>(n=Number(n))&&(n=Math.max(0,r+n)),t=Number(t||0);t<n;t++)this[t]=e;return this}})),i("Int8Array.prototype.fill",I),i("Uint8Array.prototype.fill",I),i("Uint8ClampedArray.prototype.fill",I),i("Int16Array.prototype.fill",I),i("Uint16Array.prototype.fill",I),i("Int32Array.prototype.fill",I),i("Uint32Array.prototype.fill",I),i("Float32Array.prototype.fill",I),i("Float64Array.prototype.fill",I),i("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}})),i("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(t=t||0)&&(t=Math.max(t+r,0));t<r;t++){var s=n[t];if(s===e||Object.is(s,e))return!0}return!1}})),i("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}}));var _=this||self;function T(e,t){e=e.split(".");var n,r=_;e[0]in r||"undefined"==typeof r.execScript||r.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=t}function N(e){var t;return(t=_.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}var E=Array.prototype.map?function(e,t){return Array.prototype.map.call(e,t,void 0)}:function(e,t){for(var n=e.length,r=Array(n),s="string"===typeof e?e.split(""):e,i=0;i<n;i++)i in s&&(r[i]=t.call(void 0,s[i],i,e));return r},$={},A=null;function R(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var r=new Uint8Array(n),s=0;return function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),s=A[n];if(null!=s)return s;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}O();for(var r=0;;){var s=n(-1),i=n(0),a=n(64),o=n(64);if(64===o&&-1===s)break;t(s<<2|i>>4),64!=a&&(t(i<<4&240|a>>2),64!=o&&t(a<<6&192|o))}}(e,(function(e){r[s++]=e})),s!==n?r.subarray(0,s):r}function O(){if(!A){A={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=e.concat(t[n].split(""));$[n]=r;for(var s=0;s<r.length;s++){var i=r[s];void 0===A[i]&&(A[i]=s)}}}}var D="undefined"!==typeof Uint8Array,F=!(N("Trident")||N("MSIE"))&&"function"===typeof _.btoa;function M(e){if(!F){var t;void 0===t&&(t=0),O(),t=$[t];for(var n=Array(Math.floor(e.length/3)),r=t[64]||"",s=0,i=0;s<e.length-2;s+=3){var a=e[s],o=e[s+1],l=e[s+2],u=t[a>>2];a=t[(3&a)<<4|o>>4],o=t[(15&o)<<2|l>>6],l=t[63&l],n[i++]=u+a+o+l}switch(u=0,l=r,e.length-s){case 2:l=t[(15&(u=e[s+1]))<<2]||r;case 1:e=e[s],n[i]=t[e>>2]+t[(3&e)<<4|u>>4]+l+r}return n.join("")}for(t="";10240<e.length;)t+=String.fromCharCode.apply(null,e.subarray(0,10240)),e=e.subarray(10240);return t+=String.fromCharCode.apply(null,e),btoa(t)}var P,z=RegExp("[-_.]","g");function L(e){switch(e){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function B(e){if(!F)return R(e);z.test(e)&&(e=e.replace(z,L)),e=atob(e);for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function V(){return P||(P=new Uint8Array(0))}var W={},U="function"===typeof Uint8Array.prototype.slice,G=0,j=0;function H(e){var t=0>e,n=(e=Math.abs(e))>>>0;e=Math.floor((e-n)/4294967296),t&&(t=(n=o(X(n,e))).next().value,e=n.next().value,n=t),G=n>>>0,j=e>>>0}var q,K="function"===typeof BigInt;function X(e,t){return t=~t,e?e=1+~e:t+=1,[e,t]}function Y(e,t){this.i=e>>>0,this.h=t>>>0}function Q(e){if(!e)return q||(q=new Y(0,0));if(!/^-?\d+$/.test(e))return null;if(16>e.length)H(Number(e));else if(K)e=BigInt(e),G=Number(e&BigInt(4294967295))>>>0,j=Number(e>>BigInt(32)&BigInt(4294967295));else{var t=+("-"===e[0]);j=G=0;for(var n=e.length,r=t,s=(n-t)%6+t;s<=n;r=s,s+=6)r=Number(e.slice(r,s)),j*=1e6,4294967296<=(G=1e6*G+r)&&(j+=G/4294967296|0,G%=4294967296);t&&(e=(t=o(X(G,j))).next().value,t=t.next().value,G=e,j=t)}return new Y(G,j)}function Z(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function J(){return Error("Failed to read varint, encoding is invalid.")}function ee(e,t){return Error("Tried to read past the end of the data "+t+" > "+e)}function te(){throw Error("Invalid UTF8")}function ne(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var re,se,ie,ae=void 0,oe="undefined"!==typeof TextDecoder,le="undefined"!==typeof TextEncoder;function ue(e){if(e!==W)throw Error("illegal external caller")}function ce(e,t){if(ue(t),this.V=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}function he(){return ie||(ie=new ce(null,W))}function de(e){ue(W);var t=e.V;return null==(t=null==t||D&&null!=t&&t instanceof Uint8Array?t:"string"===typeof t?B(t):null)?t:e.V=t}function pe(e,t){this.i=null,this.m=!1,this.h=this.j=this.l=0,fe(this,e,t)}function fe(e,t,n){n=void 0===n?{}:n,e.S=void 0!==n.S&&n.S,t&&(t=function(e){if("string"===typeof e)return{buffer:B(e),C:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),C:!1};if(e.constructor===Uint8Array)return{buffer:e,C:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),C:!1};if(e.constructor===ce)return{buffer:de(e)||V(),C:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}(t),e.i=t.buffer,e.m=t.C,e.l=0,e.j=e.i.length,e.h=e.l)}function me(e,t){if(e.h=t,t>e.j)throw ee(e.j,t)}function ge(e){var t=e.i,n=e.h,r=t[n++],s=127&r;if(128&r&&(s|=(127&(r=t[n++]))<<7,128&r&&(s|=(127&(r=t[n++]))<<14,128&r&&(s|=(127&(r=t[n++]))<<21,128&r&&(s|=(r=t[n++])<<28,128&r&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++])))))throw J();return me(e,n),s}function ye(e,t){if(0>t)throw Error("Tried to read a negative byte length: "+t);var n=e.h,r=n+t;if(r>e.j)throw ee(t,e.j-n);return e.h=r,n}pe.prototype.reset=function(){this.h=this.l};var be=[];function ve(){this.h=[]}function xe(e,t,n){for(;0<n||127<t;)e.h.push(127&t|128),t=(t>>>7|n<<25)>>>0,n>>>=7;e.h.push(t)}function we(e,t){for(;127<t;)e.h.push(127&t|128),t>>>=7;e.h.push(t)}function ke(e,t){if(be.length){var n=be.pop();fe(n,e,t),e=n}else e=new pe(e,t);this.h=e,this.j=this.h.h,this.i=this.l=-1,this.setOptions(t)}function Se(e){var t=e.h;if(t.h==t.j)return!1;e.j=e.h.h;var n=ge(e.h)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw Z(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.l=t,e.i=n,!0}function Ce(e){switch(e.i){case 0:if(0!=e.i)Ce(e);else e:{for(var t=(e=e.h).h,n=t+10,r=e.i;t<n;)if(0===(128&r[t++])){me(e,t);break e}throw J()}break;case 1:me(e=e.h,e.h+8);break;case 2:2!=e.i?Ce(e):(t=ge(e.h)>>>0,me(e=e.h,e.h+t));break;case 5:me(e=e.h,e.h+4);break;case 3:for(t=e.l;;){if(!Se(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.i){if(e.l!=t)throw Error("Unmatched end-group tag");break}Ce(e)}break;default:throw Z(e.i,e.j)}}ve.prototype.length=function(){return this.h.length},ve.prototype.end=function(){var e=this.h;return this.h=[],e},ke.prototype.setOptions=function(e){e=void 0===e?{}:e,this.ca=void 0!==e.ca&&e.ca},ke.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};var Ie=[];function _e(){this.j=[],this.i=0,this.h=new ve}function Te(e,t){0!==t.length&&(e.j.push(t),e.i+=t.length)}var Ne="function"===typeof Symbol&&"symbol"===typeof Symbol()?Symbol():void 0;function Ee(e,t){return Ne?e[Ne]|=t:void 0!==e.A?e.A|=t:(Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}}),t)}function $e(e,t){Ne?e[Ne]&&(e[Ne]&=~t):void 0!==e.A&&(e.A&=~t)}function Ae(e){var t;return null==(t=Ne?e[Ne]:e.A)?0:t}function Re(e,t){Ne?e[Ne]=t:void 0!==e.A?e.A=t:Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}})}function Oe(e){return Ee(e,1),e}function De(e,t){Re(t,-51&e)}function Fe(e,t){Re(t,-41&e|18)}var Me={};function Pe(e){return null!==e&&"object"===typeof e&&!Array.isArray(e)&&e.constructor===Object}var ze,Le,Be=[];function Ve(e){if(2&Ae(e.o))throw Error("Cannot mutate an immutable Message")}function We(e){var t=e.length;(t=t?e[t-1]:void 0)&&Pe(t)?t.g=1:(t={},e.push((t.g=1,t)))}function Ue(e){var t=e.i+e.G;return e.B||(e.B=e.o[t]={})}function Ge(e,t){return-1===t?null:t>=e.i?e.B?e.B[t]:void 0:e.o[t+e.G]}function je(e,t,n,r){Ve(e),He(e,t,n,r)}function He(e,t,n,r){e.j&&(e.j=void 0),t>=e.i||r?Ue(e)[t]=n:(e.o[t+e.G]=n,(e=e.B)&&t in e&&delete e[t])}function qe(e,t,n,r){var s=Ge(e,t);Array.isArray(s)||(s=ze);var i=Ae(s);if(1&i||Oe(s),r)2&i||Ee(s,2),1&n||Object.freeze(s);else{r=!(2&n);var a=2&i;1&n||!a?r&&16&i&&!a&&$e(s,16):He(e,t,s=Oe(Array.prototype.slice.call(s)))}return s}function Ke(e,t){var n=Ge(e,t),r=null==n?n:"number"===typeof n||"NaN"===n||"Infinity"===n||"-Infinity"===n?Number(n):void 0;return null!=r&&r!==n&&He(e,t,r),r}function Xe(e,t,n,r,s){e.h||(e.h={});var i=e.h[n],a=qe(e,n,3,s);if(!i){var o=a;i=[];var l=!!(16&Ae(e.o));a=!!(2&Ae(o));var u=o;!s&&a&&(o=Array.prototype.slice.call(o));for(var c=a,h=0;h<o.length;h++){var d=o[h],p=t,f=!1;if(f=void 0!==f&&f,void 0!==(d=Array.isArray(d)?new p(d):f?new p:void 0)){var m=f=Ae(p=d.o);a&&(m|=2),l&&(m|=16),m!=f&&Re(p,m),p=m,c=c||!!(2&p),i.push(d)}}return e.h[n]=i,t=33|(l=Ae(o)),l!=(t=c?-9&t:8|t)&&(c=o,Object.isFrozen(c)&&(c=Array.prototype.slice.call(c)),Re(c,t),o=c),u!==o&&He(e,n,o),(s||r&&a)&&Ee(i,2),r&&Object.freeze(i),i}return s||(s=Object.isFrozen(i),r&&!s?Object.freeze(i):!r&&s&&(i=Array.prototype.slice.call(i),e.h[n]=i)),i}function Ye(e,t,n){var r=!!(2&Ae(e.o));if(t=Xe(e,t,n,r,r),e=qe(e,n,3,r),!(r||8&Ae(e))){for(r=0;r<t.length;r++){if(2&Ae((n=t[r]).o)){var s=lt(n,!1);s.j=n}else s=n;n!==s&&(t[r]=s,e[r]=s.o)}Ee(e,8)}return t}function Qe(e,t,n){if(null!=n&&"number"!==typeof n)throw Error("Value of float/double field must be a number|null|undefined, found "+typeof n+": "+n);je(e,t,n)}function Ze(e,t,n,r,s){Ve(e);var i=Xe(e,n,t,!1,!1);return n=null!=r?r:new n,e=qe(e,t,2,!1),void 0!=s?(i.splice(s,0,n),e.splice(s,0,n.o)):(i.push(n),e.push(n.o)),n.C()&&$e(e,8),n}function Je(e,t){return null==e?t:e}function et(e,t,n){return n=void 0===n?0:n,Je(Ke(e,t),n)}function tt(e,t,n,r){if(null!=e){if(Array.isArray(e))e=nt(e,t,n,void 0!==r);else if(Pe(e)){var s,i={};for(s in e)i[s]=tt(e[s],t,n,r);e=i}else e=t(e,r);return e}}function nt(e,t,n,r){var s=Ae(e);r=r?!!(16&s):void 0,e=Array.prototype.slice.call(e);for(var i=0;i<e.length;i++)e[i]=tt(e[i],t,n,r);return n(s,e),e}function rt(e){return e.ja===Me?e.toJSON():function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e)if(Array.isArray(e)){if(0!==(128&Ae(e)))return We(e=Array.prototype.slice.call(e)),e}else{if(D&&null!=e&&e instanceof Uint8Array)return M(e);if(e instanceof ce){var t=e.V;return null==t?"":"string"===typeof t?t:e.V=M(t)}}}return e}(e)}function st(e,t){128&e&&We(t)}function it(e,t,n){if(n=void 0===n?Fe:n,null!=e){if(D&&e instanceof Uint8Array)return e.length?new ce(new Uint8Array(e),W):he();if(Array.isArray(e)){var r=Ae(e);return 2&r?e:!t||32&r||!(16&r||0===r)?(4&(t=Ae(e=nt(e,it,4&r?Fe:n,!0)))&&2&t&&Object.freeze(e),e):(Re(e,2|r),e)}return e.ja===Me?ot(e):e}}function at(e,t,n,r,s,i,a){if(e=e.h&&e.h[n]){if(2&(r=Ae(e))?r=e:(Fe(r,i=E(e,ot)),Object.freeze(i),r=i),Ve(t),a=null==r?ze:Oe([]),null!=r){for(i=!!r.length,e=0;e<r.length;e++){var o=r[e];i=i&&!(2&Ae(o.o)),a[e]=o.o}i=1|(i?8:0),((e=Ae(a))&i)!==i&&(Object.isFrozen(a)&&(a=Array.prototype.slice.call(a)),Re(a,e|i)),t.h||(t.h={}),t.h[n]=r}else t.h&&(t.h[n]=void 0);He(t,n,a,s)}else je(t,n,it(r,i,a),s)}function ot(e){return 2&Ae(e.o)||Ee((e=lt(e,!0)).o,2),e}function lt(e,t){var n=e.o,r=[];Ee(r,16);var s=e.constructor.h;if(s&&r.push(s),s=e.B){r.length=n.length,r.fill(void 0,r.length,n.length);var i={};r[r.length-1]=i}0!==(128&Ae(n))&&We(r),t=t||e.C()?Fe:De,i=e.constructor,Le=r,r=new i(r),Le=void 0,e.R&&(r.R=e.R.slice()),i=!!(16&Ae(n));for(var a=s?n.length-1:n.length,o=0;o<a;o++)at(e,r,o-e.G,n[o],!1,i,t);if(s)for(var l in s)at(e,r,+l,s[l],!0,i,t);return r}function ut(e,t,n){null==e&&(e=Le),Le=void 0;var r,s=this.constructor.i||0,i=0<s,a=this.constructor.h,o=!1;if(null==e){var l=48,u=!0;i&&(s=0,l|=128),Re(e=a?[a]:[],l)}else{if(!Array.isArray(e))throw Error();if(a&&a!==e[0])throw Error();var c=l=Ee(e,0);if((u=0!==(16&c))&&((o=0!==(32&c))||(c|=32)),i){if(128&c)s=0;else if(0<e.length){var h=e[e.length-1];if(Pe(h)&&"g"in h){s=0,c|=128,delete h.g;var d,p=!0;for(d in h){p=!1;break}p&&e.pop()}}}else if(128&c)throw Error();l!==c&&Re(e,c)}if(this.G=(a?0:-1)-s,this.h=void 0,this.o=e,s=(a=this.o.length)-1,a&&Pe(a=this.o[s])?(this.B=a,this.i=s-this.G):void 0!==t&&-1<t?(this.i=Math.max(t,s+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE,!i&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(n)for(t=u&&!o&&!0,i=this.i,u=0;u<n.length;u++)(o=n[u])<i?(s=e[o+=this.G])?ct(s,t):e[o]=ze:(r||(r=Ue(this)),(s=r[o])?ct(s,t):r[o]=ze)}function ct(e,t){if(Array.isArray(e)){var n=Ae(e),r=1;!t||2&n||(r|=16),(n&r)!==r&&Re(e,n|r)}}function ht(e,t,n){if(n){var r,s={};for(r in n){var i=n[r],a=i.ra;a||(s.J=i.xa||i.oa.W,i.ia?(s.aa=vt(i.ia),a=function(e){return function(t,n,r){return e.J(t,n,r,e.aa)}}(s)):i.ka?(s.Z=xt(i.da.P,i.ka),a=function(e){return function(t,n,r){return e.J(t,n,r,e.Z)}}(s)):a=s.J,i.ra=a),a(t,e,i.da),s={J:s.J,aa:s.aa,Z:s.Z}}}!function(e,t){if(t=t.R){Te(e,e.h.end());for(var n=0;n<t.length;n++)Te(e,de(t[n])||V())}}(t,e)}Re(Be,23),ze=Object.freeze(Be),ut.prototype.toJSON=function(){return nt(this.o,rt,st)},ut.prototype.C=function(){return!!(2&Ae(this.o))},ut.prototype.ja=Me,ut.prototype.toString=function(){return this.o.toString()};var dt=Symbol();function pt(e,t,n){return e[dt]||(e[dt]=function(e,r){return t(e,r,n)})}function ft(e){var t=e[dt];if(!t){var n=Rt(e);t=function(e,t){return Ot(e,t,n)},e[dt]=t}return t}function mt(e){var t=function(e){var t=e.ia;return t?ft(t):(t=e.wa)?pt(e.da.P,t,e.ka):void 0}(e),n=e.da,r=e.oa.U;return t?function(e,s){return r(e,s,n,t)}:function(e,t){return r(e,t,n)}}function gt(e,t){var n=e[t];return"function"==typeof n&&0===n.length&&(n=n(),e[t]=n),Array.isArray(n)&&(Tt in n||wt in n||0<n.length&&"function"==typeof n[0])?n:void 0}function yt(e,t,n,r,s,i){t.P=e[0];var a=1;if(e.length>a&&"number"!==typeof e[a]){var o=e[a++];n(t,o)}for(;a<e.length;){n=e[a++];for(var l=a+1;l<e.length&&"number"!==typeof e[l];)l++;switch(o=e[a++],l-=a){case 0:r(t,n,o);break;case 1:(l=gt(e,a))?(a++,s(t,n,o,l)):r(t,n,o,e[a++]);break;case 2:s(t,n,o,l=gt(e,l=a++),e[a++]);break;case 3:i(t,n,o,e[a++],e[a++],e[a++]);break;case 4:i(t,n,o,e[a++],e[a++],e[a++],e[a++]);break;default:throw Error("unexpected number of binary field arguments: "+l)}}return t}var bt=Symbol();function vt(e){var t=e[bt];if(!t){var n=_t(e);t=function(e,t){return Dt(e,t,n)},e[bt]=t}return t}function xt(e,t){var n=e[bt];return n||(n=function(e,n){return ht(e,n,t)},e[bt]=n),n}var wt=Symbol();function kt(e,t){e.push(t)}function St(e,t,n){e.push(t,n.W)}function Ct(e,t,n,r){var s=vt(r),i=_t(r).P,a=n.W;e.push(t,(function(e,t,n){return a(e,t,n,i,s)}))}function It(e,t,n,r,s,i){var a=xt(r,i),o=n.W;e.push(t,(function(e,t,n){return o(e,t,n,r,a)}))}function _t(e){var t=e[wt];return t||(t=yt(e,e[wt]=[],kt,St,Ct,It),Tt in e&&wt in e&&(e.length=0),t)}var Tt=Symbol();function Nt(e,t){e[0]=t}function Et(e,t,n,r){var s=n.U;e[t]=r?function(e,t,n){return s(e,t,n,r)}:s}function $t(e,t,n,r,s){var i=n.U,a=ft(r),o=Rt(r).P;e[t]=function(e,t,n){return i(e,t,n,o,a,s)}}function At(e,t,n,r,s,i,a){var o=n.U,l=pt(r,s,i);e[t]=function(e,t,n){return o(e,t,n,r,l,a)}}function Rt(e){var t=e[Tt];return t||(t=yt(e,e[Tt]={},Nt,Et,$t,At),Tt in e&&wt in e&&(e.length=0),t)}function Ot(e,t,n){for(;Se(t)&&4!=t.i;){var r=t.l,s=n[r];if(!s){var i=n[0];i&&(i=i[r])&&(s=n[r]=mt(i))}if(!s||!s(t,e,r)){r=e,i=(s=t).j,Ce(s);var a=s;if(!a.ca){if(s=a.h.h-i,a.h.h=i,a=a.h,0==s)s=he();else{if(i=ye(a,s),a.S&&a.m)s=a.i.subarray(i,i+s);else{a=a.i;var o=i;s=o===(s=i+s)?V():U?a.slice(o,s):new Uint8Array(a.subarray(o,s))}s=0==s.length?he():new ce(s,W)}(i=r.R)?i.push(s):r.R=[s]}}}return e}function Dt(e,t,n){for(var r=n.length,s=1==r%2,i=s?1:0;i<r;i+=2)(0,n[i+1])(t,e,n[i]);ht(e,t,s?n[0]:void 0)}function Ft(e,t){return{U:e,W:t}}var Mt=Ft((function(e,t,n){if(5!==e.i)return!1;var r=(e=e.h).i,s=e.h,i=r[s],a=r[s+1],o=r[s+2];return r=r[s+3],me(e,e.h+4),e=2*((a=(i|a<<8|o<<16|r<<24)>>>0)>>31)+1,i=a>>>23&255,a&=8388607,je(t,n,255==i?a?NaN:1/0*e:0==i?e*Math.pow(2,-149)*a:e*Math.pow(2,i-150)*(a+Math.pow(2,23))),!0}),(function(e,t,n){if(null!=(t=Ke(t,n))){we(e.h,8*n+5),e=e.h;var r=+t;0===r?0<1/r?G=j=0:(j=0,G=2147483648):isNaN(r)?(j=0,G=2147483647):34028234663852886e22<(r=(n=0>r?-2147483648:0)?-r:r)?(j=0,G=(2139095040|n)>>>0):11754943508222875e-54>r?(r=Math.round(r/Math.pow(2,-149)),j=0,G=(n|r)>>>0):(t=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-t),16777216<=(r=Math.round(8388608*r))&&++t,j=0,G=(n|t+127<<23|8388607&r)>>>0),n=G,e.h.push(n>>>0&255),e.h.push(n>>>8&255),e.h.push(n>>>16&255),e.h.push(n>>>24&255)}})),Pt=Ft((function(e,t,n){if(0!==e.i)return!1;var r=e.h,s=0,i=e=0,a=r.i,o=r.h;do{var l=a[o++];s|=(127&l)<<i,i+=7}while(32>i&&128&l);for(32<i&&(e|=(127&l)>>4),i=3;32>i&&128&l;i+=7)e|=(127&(l=a[o++]))<<i;if(me(r,o),!(128>l))throw J();return r=s>>>0,(e=2147483648&(l=e>>>0))&&(l=~l>>>0,0==(r=1+~r>>>0)&&(l=l+1>>>0)),r=4294967296*l+(r>>>0),je(t,n,e?-r:r),!0}),(function(e,t,n){null!=(t=Ge(t,n))&&("string"===typeof t&&Q(t),null!=t&&(we(e.h,8*n),"number"===typeof t?(e=e.h,H(t),xe(e,G,j)):(n=Q(t),xe(e.h,n.i,n.h))))})),zt=Ft((function(e,t,n){return 0===e.i&&(je(t,n,ge(e.h)),!0)}),(function(e,t,n){if(null!=(t=Ge(t,n))&&null!=t)if(we(e.h,8*n),e=e.h,0<=(n=t))we(e,n);else{for(t=0;9>t;t++)e.h.push(127&n|128),n>>=7;e.h.push(1)}})),Lt=Ft((function(e,t,n){if(2!==e.i)return!1;var r=ge(e.h)>>>0,s=ye(e=e.h,r);if(e=e.i,oe){var i,a=e;(i=re)||(i=re=new TextDecoder("utf-8",{fatal:!0})),e=s+r,a=0===s&&e===a.length?a:a.subarray(s,e);try{var o=i.decode(a)}catch(h){if(void 0===ae){try{i.decode(new Uint8Array([128]))}catch(d){}try{i.decode(new Uint8Array([97])),ae=!0}catch(d){ae=!1}}throw!ae&&(re=void 0),h}}else{r=(o=s)+r,s=[];for(var l,u,c=null;o<r;)128>(l=e[o++])?s.push(l):224>l?o>=r?te():(u=e[o++],194>l||128!==(192&u)?(o--,te()):s.push((31&l)<<6|63&u)):240>l?o>=r-1?te():128!==(192&(u=e[o++]))||224===l&&160>u||237===l&&160<=u||128!==(192&(a=e[o++]))?(o--,te()):s.push((15&l)<<12|(63&u)<<6|63&a):244>=l?o>=r-2?te():128!==(192&(u=e[o++]))||0!==u-144+(l<<28)>>30||128!==(192&(a=e[o++]))||128!==(192&(i=e[o++]))?(o--,te()):(l=(7&l)<<18|(63&u)<<12|(63&a)<<6|63&i,l-=65536,s.push(55296+(l>>10&1023),56320+(1023&l))):te(),8192<=s.length&&(c=ne(c,s),s.length=0);o=ne(c,s)}return je(t,n,o),!0}),(function(e,t,n){if(null!=(t=Ge(t,n))){var r=!1;if(r=void 0!==r&&r,le){if(r&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(t))throw Error("Found an unpaired surrogate");t=(se||(se=new TextEncoder)).encode(t)}else{for(var s=0,i=new Uint8Array(3*t.length),a=0;a<t.length;a++){var o=t.charCodeAt(a);if(128>o)i[s++]=o;else{if(2048>o)i[s++]=o>>6|192;else{if(55296<=o&&57343>=o){if(56319>=o&&a<t.length){var l=t.charCodeAt(++a);if(56320<=l&&57343>=l){o=1024*(o-55296)+l-56320+65536,i[s++]=o>>18|240,i[s++]=o>>12&63|128,i[s++]=o>>6&63|128,i[s++]=63&o|128;continue}a--}if(r)throw Error("Found an unpaired surrogate");o=65533}i[s++]=o>>12|224,i[s++]=o>>6&63|128}i[s++]=63&o|128}}t=s===i.length?i:i.subarray(0,s)}we(e.h,8*n+2),we(e.h,t.length),Te(e,e.h.end()),Te(e,t)}})),Bt=Ft((function(e,t,n,r,s){if(2!==e.i)return!1;t=Ze(t,n,r),n=e.h.j,r=ge(e.h)>>>0;var i=e.h.h+r,a=i-n;if(0>=a&&(e.h.j=i,s(t,e,void 0,void 0,void 0),a=i-e.h.h),a)throw Error("Message parsing ended unexpectedly. Expected to read "+r+" bytes, instead read "+(r-a)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.h.h=i,e.h.j=n,!0}),(function(e,t,n,r,s){if(null!=(t=Ye(t,r,n)))for(r=0;r<t.length;r++){var i=e;we(i.h,8*n+2);var a=i.h.end();Te(i,a),a.push(i.i),i=a,s(t[r],e),a=e;var o=i.pop();for(o=a.i+a.h.length()-o;127<o;)i.push(127&o|128),o>>>=7,a.i++;i.push(o),a.i++}}));function Vt(e){return function(t,n){e:{if(Ie.length){var r=Ie.pop();r.setOptions(n),fe(r.h,t,n),t=r}else t=new ke(t,n);try{var s=Rt(e),i=Ot(new s.P,t,s);break e}finally{(s=t.h).i=null,s.m=!1,s.l=0,s.j=0,s.h=0,s.S=!1,t.l=-1,t.i=-1,100>Ie.length&&Ie.push(t)}i=void 0}return i}}function Wt(e){return function(){var t=new _e;Dt(this,t,_t(e)),Te(t,t.h.end());for(var n=new Uint8Array(t.i),r=t.j,s=r.length,i=0,a=0;a<s;a++){var o=r[a];n.set(o,i),i+=o.length}return t.j=[n],n}}function Ut(e){ut.call(this,e)}m(Ut,ut);var Gt=[Ut,1,zt,2,Mt,3,Lt,4,Lt];function jt(e){ut.call(this,e,-1,Ht)}Ut.prototype.l=Wt(Gt),m(jt,ut),jt.prototype.addClassification=function(e,t){return Ze(this,1,Ut,e,t),this};var Ht=[1],qt=Vt([jt,1,Bt,Gt]);function Kt(e){ut.call(this,e)}m(Kt,ut);var Xt=[Kt,1,Mt,2,Mt,3,Mt,4,Mt,5,Mt];function Yt(e){ut.call(this,e,-1,Qt)}Kt.prototype.l=Wt(Xt),m(Yt,ut);var Qt=[1],Zt=Vt([Yt,1,Bt,Xt]);function Jt(e){ut.call(this,e)}m(Jt,ut);var en=[Jt,1,Mt,2,Mt,3,Mt,4,Mt,5,Mt,6,Pt],tn=Vt(en);function nn(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function rn(e){return Ye(e,Ut,1).map((function(e){var t=Ge(e,1);return{index:null==t?0:t,qa:et(e,2),label:null!=Ge(e,3)?Je(Ge(e,3),""):void 0,displayName:null!=Ge(e,4)?Je(Ge(e,4),""):void 0}}))}function sn(e){return{x:et(e,1),y:et(e,2),z:et(e,3),visibility:null!=Ke(e,4)?et(e,4):void 0}}function an(e){return Ye(Zt(e),Kt,1).map(sn)}function on(e,t){this.i=e,this.h=t,this.m=0}function ln(e,t,n){return function(e,t){var n=e.h;if(void 0===e.s){var r=nn(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),s=nn(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),i=n.createProgram();if(n.attachShader(i,r),n.attachShader(i,s),n.linkProgram(i),!n.getProgramParameter(i,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(i));r=e.s=i,n.useProgram(r),s=n.getUniformLocation(r,"sampler0"),e.l={O:n.getAttribLocation(r,"aVertex"),N:n.getAttribLocation(r,"aTex"),ya:s},e.v=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.enableVertexAttribArray(e.l.O),n.vertexAttribPointer(e.l.O,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.l.N),n.vertexAttribPointer(e.l.N,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(s,0)}r=e.l,n.useProgram(e.s),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.i.bindTexture2d(t.glName),n.enableVertexAttribArray(r.O),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.vertexAttribPointer(r.O,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.N),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(r.N,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.O),n.disableVertexAttribArray(r.N),n.bindBuffer(n.ARRAY_BUFFER,null),e.i.bindTexture2d(0)}(e,t),"function"===typeof e.h.canvas.transferToImageBitmap?Promise.resolve(e.h.canvas.transferToImageBitmap()):n?Promise.resolve(e.h.canvas):"function"===typeof createImageBitmap?createImageBitmap(e.h.canvas):(void 0===e.j&&(e.j=document.createElement("canvas")),new Promise((function(t){e.j.height=e.h.canvas.height,e.j.width=e.h.canvas.width,e.j.getContext("2d",{}).drawImage(e.h.canvas,0,0,e.h.canvas.width,e.h.canvas.height),t(e.j)})))}function un(e){this.h=e}Jt.prototype.l=Wt(en);var cn=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function hn(e,t){return t+e}function dn(e,t){window[e]=t}function pn(e){if(this.h=e,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=e&&e.locateFile||hn,"object"===typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"===typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.ha=t,e.options)for(var n=(t=o(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var r=e.options[n].default;void 0!==r&&(this.l[n]="function"===typeof r?r():r)}}function fn(e){var t,n,r,s,i,a,o,u,c,h,d;return C((function(p){switch(p.h){case 1:return e.ga?(t=void 0===e.h.files?[]:"function"===typeof e.h.files?e.h.files(e.l):e.h.files,v(p,C((function(e){switch(e.h){case 1:return e.s=2,v(e,WebAssembly.instantiate(cn),4);case 4:e.h=3,e.s=0;break;case 2:return e.s=0,e.l=null,e.return(!1);case 3:return e.return(!0)}})),2)):p.return();case 2:if(n=p.i,"object"===typeof window)return dn("createMediapipeSolutionsWasm",{locateFile:e.locateFile}),dn("createMediapipeSolutionsPackedAssets",{locateFile:e.locateFile}),a=t.filter((function(e){return void 0!==e.data})),o=t.filter((function(e){return void 0===e.data})),u=Promise.all(a.map((function(t){var n=mn(e,t.url);if(void 0!==t.path){var r=t.path;n=n.then((function(t){return e.overrideFile(r,t),Promise.resolve(t)}))}return n}))),c=Promise.all(o.map((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(e.locateFile(t.url,e.ha)):Promise.resolve()}))).then((function(){var t,n,r;return C((function(s){if(1==s.h)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,r=e,v(s,t(n),2);r.i=s.i,s.h=0}))})),h=C((function(t){return e.h.graph&&e.h.graph.url?t=v(t,mn(e,e.h.graph.url),0):(t.h=0,t=void 0),t})),v(p,Promise.all([c,u,h]),7);if("function"!==typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return r=t.filter((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n})).map((function(t){return e.locateFile(t.url,e.ha)})),importScripts.apply(null,l(r)),s=e,v(p,createMediapipeSolutionsWasm(Module),6);case 6:s.i=p.i,e.m=new OffscreenCanvas(1,1),e.i.canvas=e.m,i=e.i.GL.createContext(e.m,{antialias:!1,alpha:!1,va:"undefined"!==typeof WebGL2RenderingContext?2:1}),e.i.GL.makeContextCurrent(i),p.h=4;break;case 7:if(e.m=document.createElement("canvas"),!(d=e.m.getContext("webgl2",{}))&&!(d=e.m.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),p.return();e.K=d,e.i.canvas=e.m,e.i.createContext(e.m,!0,!0,{});case 4:e.j=new e.i.SolutionWasm,e.ga=!1,p.h=0}}))}function mn(e,t){var n,r;return C((function(s){return t in e.L?s.return(e.L[t]):(n=e.locateFile(t,""),r=fetch(n).then((function(e){return e.arrayBuffer()})),e.L[t]=r,s.return(r))}))}function gn(e,t,n){var r,s,i,a,l,u,c,h,d,p,f,m,g,y;return C((function(b){switch(b.h){case 1:if(!n)return b.return(t);for(r={},s=0,i=o(Object.keys(n)),a=i.next();!a.done;a=i.next())l=a.value,"string"!==typeof(u=n[l])&&"texture"===u.type&&void 0!==t[u.stream]&&++s;1<s&&(e.M=!1),c=o(Object.keys(n)),a=c.next();case 2:if(a.done){b.h=4;break}if(h=a.value,"string"===typeof(d=n[h]))return g=r,y=h,v(b,function(e,t,n){var r;return C((function(s){return"number"===typeof n||n instanceof Uint8Array||n instanceof e.i.Uint8BlobList?s.return(n):n instanceof e.i.Texture2dDataOut?((r=e.v[t])||(r=new on(e.i,e.K),e.v[t]=r),s.return(ln(r,n,e.M))):s.return(void 0)}))}(e,h,t[d]),14);if(p=t[d.stream],"detection_list"===d.type){if(p){for(var x=p.getRectList(),w=p.getLandmarksList(),k=p.getClassificationsList(),S=[],I=0;I<x.size();++I){var _=tn(x.get(I)),T=void 0;T=void 0===T?0:T,_={la:{sa:et(_,1),ta:et(_,2),height:et(_,3),width:et(_,4),rotation:et(_,5,0),pa:Je(Ge(_,6),T)},ea:an(w.get(I)),ba:rn(qt(k.get(I)))},S.push(_)}x=S}else x=[];r[h]=x,b.h=7;break}if("proto_list"===d.type){if(p){for(x=Array(p.size()),w=0;w<p.size();w++)x[w]=p.get(w);p.delete()}else x=[];r[h]=x,b.h=7;break}if(void 0===p){b.h=3;break}if("float_list"===d.type){r[h]=p,b.h=7;break}if("proto"===d.type){r[h]=p,b.h=7;break}if("texture"!==d.type)throw Error("Unknown output config type: '"+d.type+"'");return(f=e.v[h])||(f=new on(e.i,e.K),e.v[h]=f),v(b,ln(f,p,e.M),13);case 13:m=b.i,r[h]=m;case 7:d.transform&&r[h]&&(r[h]=d.transform(r[h])),b.h=3;break;case 14:g[y]=b.i;case 3:a=c.next(),b.h=2;break;case 4:return b.return(r)}}))}function yn(e,t){for(var n=t.name||"$",r=[].concat(l(t.wants)),s=new e.i.StringList,i=o(t.wants),a=i.next();!a.done;a=i.next())s.push_back(a.value);i=e.i.PacketListener.implement({onResults:function(s){for(var i={},a=0;a<t.wants.length;++a)i[r[a]]=s.get(a);var o=e.listeners[n];o&&(e.I=gn(e,i,t.outs).then((function(n){n=o(n);for(var s=0;s<t.wants.length;++s){var a=i[r[s]];"object"===typeof a&&a.hasOwnProperty&&a.hasOwnProperty("delete")&&a.delete()}n&&(e.I=n)})))}}),e.j.attachMultiListener(s,i),s.delete()}function bn(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function vn(e){var t=this;e=e||{},this.h=new pn({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:bn(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:an},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:an},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"===typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){var n,r,s;return C((function(i){return 1==i.h?(n=bn(e),r="third_party/mediapipe/modules/pose_landmark/"+n,v(i,mn(t.h,n),2)):(s=i.i,t.h.overrideFile(r,s),i.return(!0))}))}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=pn.prototype).close=function(){return this.j&&this.j.delete(),Promise.resolve()},e.reset=function(){var e=this;return C((function(t){e.j&&(e.j.reset(),e.s={},e.v={}),t.h=0}))},e.setOptions=function(e,t){var n=this;if(t=t||this.h.options){for(var r=[],s=[],i={},a=o(Object.keys(e)),l=a.next();!l.done;i={X:i.X,Y:i.Y},l=a.next())if(!((l=l.value)in this.l)||this.l[l]!==e[l]){this.l[l]=e[l];var u=t[l];void 0!==u&&(u.onChange&&(i.X=u.onChange,i.Y=e[l],r.push(function(e){return function(){return C((function(t){if(1==t.h)return v(t,e.X(e.Y),2);!0===t.i&&(n.u=!0),t.h=0}))}}(i))),u.graphOptionXref&&(l=Object.assign({},{calculatorName:"",calculatorIndex:0},u.graphOptionXref,{valueNumber:1===u.type?e[l]:0,valueBoolean:0===u.type&&e[l],valueString:2===u.type?e[l]:""}),s.push(l)))}0===r.length&&0===s.length||(this.u=!0,this.H=(void 0===this.H?[]:this.H).concat(s),this.F=(void 0===this.F?[]:this.F).concat(r))}},e.initialize=function(){var e=this;return C((function(t){return 1==t.h?v(t,fn(e),2):3!=t.h?v(t,function(e){var t,n,r,s,i,a,l,u;return C((function(c){if(1==c.h)return e.h.graph&&e.h.graph.url&&e.fa===e.h.graph.url?c.return():(e.u=!0,e.h.graph&&e.h.graph.url?(e.fa=e.h.graph.url,v(c,mn(e,e.h.graph.url),3)):void(c.h=2));for(2!=c.h&&(t=c.i,e.j.loadGraph(t)),n=o(Object.keys(e.D)),r=n.next();!r.done;r=n.next())s=r.value,e.j.overrideFile(s,e.D[s]);if(e.D={},e.h.listeners)for(i=o(e.h.listeners),a=i.next();!a.done;a=i.next())l=a.value,yn(e,l);u=e.l,e.l={},e.setOptions(u),c.h=0}))}(e),3):v(t,function(e){var t,n,r,s,i,a;return C((function(l){switch(l.h){case 1:if(!e.u)return l.return();if(!e.F){l.h=2;break}t=o(e.F),n=t.next();case 3:if(n.done){l.h=5;break}return v(l,(0,n.value)(),4);case 4:n=t.next(),l.h=3;break;case 5:e.F=void 0;case 2:if(e.H){for(r=new e.i.GraphOptionChangeRequestList,s=o(e.H),i=s.next();!i.done;i=s.next())a=i.value,r.push_back(a);e.j.changeOptions(r),r.delete(),e.H=void 0}e.u=!1,l.h=0}}))}(e),0)}))},e.overrideFile=function(e,t){this.j?this.j.overrideFile(e,t):this.D[e]=t},e.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},e.send=function(e,t){var n,r,s,i,a,l,u,c,h,d=this;return C((function(p){switch(p.h){case 1:return d.h.inputs?(n=1e3*(void 0===t||null===t?performance.now():t),v(p,d.I,2)):p.return();case 2:return v(p,d.initialize(),3);case 3:for(r=new d.i.PacketDataList,s=o(Object.keys(e)),i=s.next();!i.done;i=s.next())if(a=i.value,l=d.h.inputs[a]){e:{var f=e[a];switch(l.type){case"video":var m=d.s[l.stream];if(m||(m=new on(d.i,d.K),d.s[l.stream]=m),0===m.m&&(m.m=m.i.createTexture()),"undefined"!==typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,y=f.videoHeight;else"undefined"!==typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,y=f.naturalHeight):(g=f.width,y=f.height);y={glName:m.m,width:g,height:y},(g=m.h).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),m.i.bindTexture2d(m.m),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),m.i.bindTexture2d(0),m=y;break e;case"detections":for((m=d.s[l.stream])||(m=new un(d.i),d.s[l.stream]=m),m.data||(m.data=new m.h.DetectionListData),m.data.reset(f.length),y=0;y<f.length;++y){g=f[y];var b=m.data,x=b.setBoundingBox,w=y,k=g.la,S=new Jt;if(Qe(S,1,k.sa),Qe(S,2,k.ta),Qe(S,3,k.height),Qe(S,4,k.width),Qe(S,5,k.rotation),je(S,6,k.pa),k=S.l(),x.call(b,w,k),g.ea)for(b=0;b<g.ea.length;++b){S=g.ea[b],w=(x=m.data).addNormalizedLandmark,k=y,S=Object.assign({},S,{visibility:S.visibility?S.visibility:0});var C=new Kt;Qe(C,1,S.x),Qe(C,2,S.y),Qe(C,3,S.z),S.visibility&&Qe(C,4,S.visibility),S=C.l(),w.call(x,k,S)}if(g.ba)for(b=0;b<g.ba.length;++b)w=(x=m.data).addClassification,k=y,S=g.ba[b],Qe(C=new Ut,2,S.qa),S.index&&je(C,1,S.index),S.label&&je(C,3,S.label),S.displayName&&je(C,4,S.displayName),S=C.l(),w.call(x,k,S)}m=m.data;break e;default:m={}}}switch(u=m,c=l.stream,l.type){case"video":r.pushTexture2d(Object.assign({},u,{stream:c,timestamp:n}));break;case"detections":(h=u).stream=c,h.timestamp=n,r.pushDetectionList(h);break;default:throw Error("Unknown input config type: '"+l.type+"'")}}return d.j.send(r),v(p,d.I,4);case 4:r.delete(),p.h=0}}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},T("Solution",pn),T("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=vn.prototype).reset=function(){this.h.reset()},e.close=function(){return this.h.close(),Promise.resolve()},e.onResults=function(e){this.h.onResults(e)},e.initialize=function(){var e=this;return C((function(t){return v(t,e.h.initialize(),0)}))},e.send=function(e,t){var n=this;return C((function(r){return v(r,n.h.send(e,t),0)}))},e.setOptions=function(e){this.h.setOptions(e)},T("Pose",vn),T("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),T("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),T("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),T("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),T("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),T("VERSION","0.5.1675469404")}).call(this)},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},960:(e,t,n)=>{var r=n(736);function s(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,r(s.key),s)}}e.exports=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e},e.exports.__esModule=!0,e.exports.default=e.exports},987:e=>{e.exports=function(e){if(Array.isArray(e))return e},e.exports.__esModule=!0,e.exports.default=e.exports},996:()=>{},998:function(e,t,n){!function(e,t,n,r){"use strict";var s=function(e,t,n){return{endTime:t,insertTime:n,type:"exponentialRampToValue",value:e}},i=function(e,t,n){return{endTime:t,insertTime:n,type:"linearRampToValue",value:e}},a=function(e,t){return{startTime:t,type:"setValue",value:e}},o=function(e,t,n){return{duration:n,startTime:t,type:"setValueCurve",values:e}},l=function(e,t,n){var r=n.startTime,s=n.target,i=n.timeConstant;return s+(t-s)*Math.exp((r-e)/i)},u=function(e){return"exponentialRampToValue"===e.type},c=function(e){return"linearRampToValue"===e.type},h=function(e){return u(e)||c(e)},d=function(e){return"setValue"===e.type},p=function(e){return"setValueCurve"===e.type},f=function(e,t,n,r){var s=e[t];return void 0===s?r:h(s)||d(s)?s.value:p(s)?s.values[s.values.length-1]:l(n,f(e,t-1,s.startTime,r),s)},m=function(e,t,n,r,s){return void 0===n?[r.insertTime,s]:h(n)?[n.endTime,n.value]:d(n)?[n.startTime,n.value]:p(n)?[n.startTime+n.duration,n.values[n.values.length-1]]:[n.startTime,f(e,t-1,n.startTime,s)]},g=function(e){return"cancelAndHold"===e.type},y=function(e){return"cancelScheduledValues"===e.type},b=function(e){return g(e)||y(e)?e.cancelTime:u(e)||c(e)?e.endTime:e.startTime},v=function(e,t,n,r){var s=r.endTime,i=r.value;return n===i?i:0<n&&0<i||n<0&&i<0?n*Math.pow(i/n,(e-t)/(s-t)):0},x=function(e,t,n,r){return n+(e-t)/(r.endTime-t)*(r.value-n)},w=function(e,t){var n=Math.floor(t),r=Math.ceil(t);return n===r?e[n]:(1-(t-n))*e[n]+(1-(r-t))*e[r]},k=function(e,t){var n=t.duration,r=t.startTime,s=t.values,i=(e-r)/n*(s.length-1);return w(s,i)},S=function(e){return"setTarget"===e.type},C=function(){function e(t){n(this,e),this._automationEvents=[],this._currenTime=0,this._defaultValue=t}return r(e,[{key:Symbol.iterator,value:function(){return this._automationEvents[Symbol.iterator]()}},{key:"add",value:function(e){var t=b(e);if(g(e)||y(e)){var n=this._automationEvents.findIndex((function(n){return y(e)&&p(n)?n.startTime+n.duration>=t:b(n)>=t})),r=this._automationEvents[n];if(-1!==n&&(this._automationEvents=this._automationEvents.slice(0,n)),g(e)){var l=this._automationEvents[this._automationEvents.length-1];if(void 0!==r&&h(r)){if(void 0!==l&&S(l))throw new Error("The internal list is malformed.");var d=void 0===l?r.insertTime:p(l)?l.startTime+l.duration:b(l),f=void 0===l?this._defaultValue:p(l)?l.values[l.values.length-1]:l.value,m=u(r)?v(t,d,f,r):x(t,d,f,r),w=u(r)?s(m,t,this._currenTime):i(m,t,this._currenTime);this._automationEvents.push(w)}if(void 0!==l&&S(l)&&this._automationEvents.push(a(this.getValue(t),t)),void 0!==l&&p(l)&&l.startTime+l.duration>t){var k=t-l.startTime,C=(l.values.length-1)/l.duration,I=Math.max(2,1+Math.ceil(k*C)),_=k/(I-1)*C,T=l.values.slice(0,I);if(_<1)for(var N=1;N<I;N+=1){var E=_*N%1;T[N]=l.values[N-1]*(1-E)+l.values[N]*E}this._automationEvents[this._automationEvents.length-1]=o(T,l.startTime,k)}}}else{var $=this._automationEvents.findIndex((function(e){return b(e)>t})),A=-1===$?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[$-1];if(void 0!==A&&p(A)&&b(A)+A.duration>t)return!1;var R=u(e)?s(e.value,e.endTime,this._currenTime):c(e)?i(e.value,t,this._currenTime):e;if(-1===$)this._automationEvents.push(R);else{if(p(e)&&t+e.duration>b(this._automationEvents[$]))return!1;this._automationEvents.splice($,0,R)}}return!0}},{key:"flush",value:function(e){var t=this._automationEvents.findIndex((function(t){return b(t)>e}));if(t>1){var n=this._automationEvents.slice(t-1),r=n[0];S(r)&&n.unshift(a(f(this._automationEvents,t-2,r.startTime,this._defaultValue),r.startTime)),this._automationEvents=n}}},{key:"getValue",value:function(e){if(0===this._automationEvents.length)return this._defaultValue;var n=this._automationEvents.findIndex((function(t){return b(t)>e})),r=this._automationEvents[n],s=(-1===n?this._automationEvents.length:n)-1,i=this._automationEvents[s];if(void 0!==i&&S(i)&&(void 0===r||!h(r)||r.insertTime>e))return l(e,f(this._automationEvents,s-1,i.startTime,this._defaultValue),i);if(void 0!==i&&d(i)&&(void 0===r||!h(r)))return i.value;if(void 0!==i&&p(i)&&(void 0===r||!h(r)||i.startTime+i.duration>e))return e<i.startTime+i.duration?k(e,i):i.values[i.values.length-1];if(void 0!==i&&h(i)&&(void 0===r||!h(r)))return i.value;if(void 0!==r&&u(r)){var a=m(this._automationEvents,s,i,r,this._defaultValue),o=t(a,2),g=o[0],y=o[1];return v(e,g,y,r)}if(void 0!==r&&c(r)){var w=m(this._automationEvents,s,i,r,this._defaultValue),C=t(w,2),I=C[0],_=C[1];return x(e,I,_,r)}return this._defaultValue}}])}(),I=function(e){return{cancelTime:e,type:"cancelAndHold"}},_=function(e){return{cancelTime:e,type:"cancelScheduledValues"}},T=function(e,t){return{endTime:t,type:"exponentialRampToValue",value:e}},N=function(e,t){return{endTime:t,type:"linearRampToValue",value:e}},E=function(e,t,n){return{startTime:t,target:e,timeConstant:n,type:"setTarget"}};e.AutomationEventList=C,e.createCancelAndHoldAutomationEvent=I,e.createCancelScheduledValuesAutomationEvent=_,e.createExponentialRampToValueAutomationEvent=T,e.createLinearRampToValueAutomationEvent=N,e.createSetTargetAutomationEvent=E,e.createSetValueAutomationEvent=a,e.createSetValueCurveAutomationEvent=o}(t,n(715),n(383),n(960))}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var i=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,r)=>(n.f[r](e,t),t)),[])),n.u=e=>"static/js/"+e+".55a36ec9.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="accessible-music-tool-react:";n.l=(r,s,i,a)=>{if(e[r])e[r].push(s);else{var o,l;if(void 0!==i)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var h=u[c];if(h.getAttribute("src")==r||h.getAttribute("data-webpack")==t+i){o=h;break}}o||(l=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,n.nc&&o.setAttribute("nonce",n.nc),o.setAttribute("data-webpack",t+i),o.src=r),e[r]=[s];var d=(t,n)=>{o.onerror=o.onload=null,clearTimeout(p);var s=e[r];if(delete e[r],o.parentNode&&o.parentNode.removeChild(o),s&&s.forEach((e=>e(n))),t)return t(n)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=d.bind(null,o.onerror),o.onload=d.bind(null,o.onload),l&&document.head.appendChild(o)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/accessible-music-tool-react/",(()=>{var e={792:0};n.f.j=(t,r)=>{var s=n.o(e,t)?e[t]:void 0;if(0!==s)if(s)r.push(s[2]);else{var i=new Promise(((n,r)=>s=e[t]=[n,r]));r.push(s[2]=i);var a=n.p+n.u(t),o=new Error;n.l(a,(r=>{if(n.o(e,t)&&(0!==(s=e[t])&&(e[t]=void 0),s)){var i=r&&("load"===r.type?"missing":r.type),a=r&&r.target&&r.target.src;o.message="Loading chunk "+t+" failed.\n("+i+": "+a+")",o.name="ChunkLoadError",o.type=i,o.request=a,s[1](o)}}),"chunk-"+t,t)}};var t=(t,r)=>{var s,i,a=r[0],o=r[1],l=r[2],u=0;if(a.some((t=>0!==e[t]))){for(s in o)n.o(o,s)&&(n.m[s]=o[s]);if(l)l(n)}for(t&&t(r);u<a.length;u++)i=a[u],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0},r=self.webpackChunkaccessible_music_tool_react=self.webpackChunkaccessible_music_tool_react||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>pi,browserFiles:()=>co,browserHTTPRequest:()=>xo,concatenateArrayBuffers:()=>Fi,copyModel:()=>xa,decodeWeights:()=>_i,decodeWeightsStream:()=>Ai,encodeWeights:()=>Ii,fromMemory:()=>Co,fromMemorySync:()=>Io,getLoadHandlers:()=>Hi,getModelArtifactsForJSON:()=>Li,getModelArtifactsForJSONSync:()=>zi,getModelArtifactsInfoForJSON:()=>Bi,getSaveHandlers:()=>ji,getWeightSpecs:()=>Vi,http:()=>vo,isHTTPScheme:()=>yo,listModels:()=>ba,loadWeights:()=>fo,moveModel:()=>wa,registerLoadRouter:()=>Gi,registerSaveRouter:()=>Ui,removeModel:()=>va,weightsLoaderFactory:()=>mo,withSaveHandler:()=>_o,withSaveHandlerSync:()=>To});var t={};n.r(t),n.d(t,{assertParamsValid:()=>Po,computeFlatOffset:()=>Yo,computeOutShape:()=>Lo,getNormalizedAxes:()=>Uo,isSliceContinous:()=>Xo,maskToAxes:()=>zo,parseSliceParams:()=>Qo,sliceInfo:()=>Zo,startForAxis:()=>qo,startIndicesWithElidedDims:()=>Go,stopForAxis:()=>Ko,stopIndicesWithElidedDims:()=>jo,stridesForAxis:()=>Ho,stridesWithElidedDims:()=>Bo});var r={};n.r(r),n.d(r,{conv2d:()=>hd,depthwiseConv2d:()=>fd,matMul:()=>md});var s={};n.r(s),n.d(s,{collectGatherOpShapeInfo:()=>Tf,computeOutShape:()=>_f,segOpComputeOptimalWindowSize:()=>If});var i={};n.r(i),n.d(i,{ERF_A1:()=>Wp,ERF_A2:()=>Up,ERF_A3:()=>Gp,ERF_A4:()=>jp,ERF_A5:()=>Hp,ERF_P:()=>Vp,PARALLELIZE_THRESHOLD:()=>$p,RowPartitionType:()=>Ip,SELU_SCALE:()=>Bp,SELU_SCALEALPHA:()=>Lp,applyActivation:()=>ud,assertAndGetBroadcastShape:()=>eo,assertAxesAreInnerMostDims:()=>Iu,assertParamsConsistent:()=>Sp,assignToTypedArray:()=>Zp,axesAreInnerMostDims:()=>wu,calculateShapes:()=>Lh,checkEinsumDimSizes:()=>lf,checkPadOnDimRoundingMode:()=>_l,combineLocations:()=>ku,combineRaggedTensorToTensorShapes:()=>_p,complexWithEvenIndex:()=>Xp,complexWithOddIndex:()=>Yp,computeConv2DInfo:()=>ml,computeConv3DInfo:()=>gl,computeDefaultPad:()=>yl,computeDilation2DInfo:()=>dl,computeOptimalWindowSize:()=>Ap,computeOutAndReduceShapes:()=>Su,computeOutShape:()=>Cp,computePool2DInfo:()=>pl,computePool3DInfo:()=>fl,convertConv2DDataFormat:()=>Il,decodeEinsumEquation:()=>af,eitherStridesOrDilationsAreOne:()=>Sl,expandShapeToKeepDim:()=>Cu,exponent:()=>ef,exponents:()=>Jp,fromStringArrayToUint8:()=>Ef,fromUint8ToStringArray:()=>Nf,getAxesPermutation:()=>_u,getBroadcastDims:()=>Za,getComplexWithIndex:()=>Qp,getEinsumComputePath:()=>uf,getEinsumPermutation:()=>of,getFusedBiasGradient:()=>ld,getFusedDyActivation:()=>od,getImageCenter:()=>Rp,getInnerMostAxes:()=>Nu,getPermuted:()=>Dp,getRaggedRank:()=>Np,getReductionAxes:()=>Ja,getReshaped:()=>Op,getReshapedPermuted:()=>Fp,getRowPartitionTypesHelper:()=>Tp,getSliceBeginCoords:()=>Mp,getSliceSize:()=>Pp,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>pf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>ff,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>mf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>bf,getSparseReshapeInputOutputMismatchErrorMessage:()=>xf,getSparseReshapeInputOutputMultipleErrorMessage:()=>vf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>gf,getSparseReshapeNegativeOutputDimErrorMessage:()=>yf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Cf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>wf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>kf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Sf,getUndoAxesPermutation:()=>Tu,isIdentityPermutation:()=>cf,log:()=>Br,mergeRealAndImagArrays:()=>qp,prepareAndValidate:()=>zp,prepareSplitSize:()=>df,segment_util:()=>s,shouldFuse:()=>cd,slice_util:()=>t,splitRealAndImagArrays:()=>Kp,stridesOrDilationsArePositive:()=>Cl,tupleValuesAreOne:()=>kl,upcastType:()=>zs,validateDefaultValueShape:()=>Ep,validateInput:()=>zh,validateUpdateShape:()=>Ph,warn:()=>Lr});var a={};n.r(a),n.d(a,{json:()=>Wf});var o={};n.r(o),n.d(o,{json:()=>Uf});var l={};n.r(l),n.d(l,{json:()=>Gf});var u={};n.r(u),n.d(u,{json:()=>jf});var c={};n.r(c),n.d(c,{json:()=>Hf});var h={};n.r(h),n.d(h,{json:()=>qf});var d={};n.r(d),n.d(d,{json:()=>Kf});var p={};n.r(p),n.d(p,{json:()=>Xf});var f={};n.r(f),n.d(f,{json:()=>Yf});var m={};n.r(m),n.d(m,{json:()=>Qf});var g={};n.r(g),n.d(g,{json:()=>Zf});var y={};n.r(y),n.d(y,{json:()=>Jf});var b={};n.r(b),n.d(b,{json:()=>em});var v={};n.r(v),n.d(v,{json:()=>tm});var x={};n.r(x),n.d(x,{json:()=>nm});var w={};n.r(w),n.d(w,{json:()=>rm});var k={};n.r(k),n.d(k,{json:()=>sm});var S={};n.r(S),n.d(S,{json:()=>im});var C={};n.r(C),n.d(C,{json:()=>am});var I={};n.r(I),n.d(I,{OP_SCOPE_SUFFIX:()=>oi,abs:()=>Qa,acos:()=>el,acosh:()=>tl,add:()=>$a,addN:()=>nl,all:()=>rl,any:()=>sl,argMax:()=>il,argMin:()=>al,asin:()=>ol,asinh:()=>ll,atan:()=>ul,atan2:()=>cl,atanh:()=>hl,avgPool:()=>Nl,avgPool3d:()=>El,basicLSTMCell:()=>Fl,batchNorm:()=>Pl,batchNorm2d:()=>zl,batchNorm3d:()=>Ll,batchNorm4d:()=>Bl,batchToSpaceND:()=>Ml,bincount:()=>Vl,bitwiseAnd:()=>Wl,booleanMaskAsync:()=>Yh,broadcastArgs:()=>Ul,broadcastTo:()=>Gl,buffer:()=>_a,cast:()=>Ta,ceil:()=>jl,clipByValue:()=>Hl,clone:()=>Na,complex:()=>ui,concat:()=>$l,concat1d:()=>ql,concat2d:()=>Kl,concat3d:()=>Xl,concat4d:()=>Yl,conv1d:()=>Zl,conv2d:()=>Ql,conv2dTranspose:()=>eu,conv3d:()=>tu,conv3dTranspose:()=>ru,cos:()=>su,cosh:()=>iu,cosineWindow:()=>sd,cumprod:()=>au,cumsum:()=>ou,denseBincount:()=>lu,depthToSpace:()=>uu,depthwiseConv2d:()=>cu,diag:()=>hu,dilation2d:()=>du,div:()=>Ra,divNoNan:()=>mu,dot:()=>gu,dropout:()=>nd,einsum:()=>yu,elu:()=>bu,enclosingPowerOfTwo:()=>rd,ensureShape:()=>vu,equal:()=>pu,erf:()=>xu,euclideanNorm:()=>Du,exp:()=>Fu,expandDims:()=>Mu,expm1:()=>Pu,eye:()=>Lu,fft:()=>wh,fill:()=>Ha,floor:()=>Bu,floorDiv:()=>Aa,fused:()=>r,gather:()=>Vu,gatherND:()=>td,greater:()=>Wu,greaterEqual:()=>Uu,ifft:()=>kh,imag:()=>Gu,image:()=>mp,inTopKAsync:()=>id,irfft:()=>Sh,isFinite:()=>ju,isInf:()=>Hu,isNaN:()=>qu,leakyRelu:()=>Ku,less:()=>Xu,lessEqual:()=>Yu,linalg:()=>gp,linspace:()=>Qu,localResponseNormalization:()=>Zu,log:()=>Ju,log1p:()=>ec,logSigmoid:()=>rc,logSoftmax:()=>sc,logSumExp:()=>ic,logicalAnd:()=>ac,logicalNot:()=>oc,logicalOr:()=>lc,logicalXor:()=>uc,losses:()=>yp,lowerBound:()=>dc,matMul:()=>Al,max:()=>Eu,maxPool:()=>pc,maxPool3d:()=>fc,maxPoolWithArgmax:()=>mc,maximum:()=>to,mean:()=>gc,meshgrid:()=>vc,min:()=>$u,minimum:()=>xc,mirrorPad:()=>wc,mod:()=>kc,moments:()=>Sc,movingAverage:()=>Zh,mul:()=>Oa,multiRNNCell:()=>Cc,multinomial:()=>Ic,neg:()=>tc,norm:()=>Ou,notEqual:()=>_c,oneHot:()=>Tc,ones:()=>bc,onesLike:()=>Nc,op:()=>li,outerProduct:()=>Ec,pad:()=>$c,pad1d:()=>Ac,pad2d:()=>Rc,pad3d:()=>Oc,pad4d:()=>Dc,pool:()=>Mc,pow:()=>Ka,prelu:()=>Pc,print:()=>Ea,prod:()=>zc,raggedGather:()=>Lc,raggedRange:()=>Bc,raggedTensorToTensor:()=>Vc,rand:()=>Wc,randomGamma:()=>qc,randomNormal:()=>Kc,randomStandardNormal:()=>Xc,randomUniform:()=>Yc,randomUniformInt:()=>Qc,range:()=>Zc,real:()=>Jc,reciprocal:()=>eh,relu:()=>th,relu6:()=>nh,reshape:()=>Tl,reverse:()=>rh,reverse1d:()=>sh,reverse2d:()=>ih,reverse3d:()=>ah,reverse4d:()=>oh,rfft:()=>Ih,round:()=>lh,rsqrt:()=>uh,scalar:()=>za,scatterND:()=>Jh,searchSorted:()=>hc,selu:()=>ch,separableConv2d:()=>hh,setdiff1dAsync:()=>dh,sigmoid:()=>Rl,sign:()=>ph,signal:()=>fp,sin:()=>fh,sinh:()=>mh,slice:()=>Ol,slice1d:()=>gh,slice2d:()=>yh,slice3d:()=>bh,slice4d:()=>vh,softmax:()=>xh,softplus:()=>nc,spaceToBatchND:()=>Fc,sparse:()=>bp,sparseToDense:()=>ed,spectral:()=>pp,split:()=>Ch,sqrt:()=>Da,square:()=>Fa,squaredDifference:()=>_h,squeeze:()=>Th,stack:()=>Nh,step:()=>Eh,stridedSlice:()=>$h,string:()=>vp,sub:()=>Xa,sum:()=>Au,tan:()=>Ah,tanh:()=>Dl,tensor:()=>hi,tensor1d:()=>Rh,tensor2d:()=>Oh,tensor3d:()=>No,tensor4d:()=>Dh,tensor5d:()=>Fh,tensor6d:()=>Mh,tensorScatterUpdate:()=>Bh,tile:()=>zu,topk:()=>Vh,transpose:()=>Qh,truncatedNormal:()=>Wh,unique:()=>Uh,unsortedSegmentSum:()=>Gh,unstack:()=>jh,upperBound:()=>Hh,variable:()=>qh,where:()=>fu,whereAsync:()=>Xh,zeros:()=>yc,zerosLike:()=>Ma});var _={};n.r(_),n.d(_,{mx:()=>_y,XI:()=>$y,Nk:()=>Ay,f6:()=>Ry,ct:()=>wy,YG:()=>zy,hH:()=>Vy,z3:()=>Wy,sG:()=>jy,uM:()=>Ky,C1:()=>eb,vS:()=>Qy,qB:()=>rb,GG:()=>sb,lg:()=>lb,rq:()=>ib,cu:()=>fb,WR:()=>hb,GE:()=>yb,px:()=>bb,jC:()=>wb,He:()=>kb,hE:()=>Ib,BF:()=>Nb,Dk:()=>Rb,cl:()=>Db,_B:()=>Bb,ub:()=>jb,_f:()=>qb,Ku:()=>Zb,qy:()=>Jb,Zy:()=>ev,bu:()=>rv,zv:()=>sv,dH:()=>hy,HS:()=>ov,yH:()=>cv,l3:()=>hv,z9:()=>dv,x6:()=>pv,_m:()=>gv,eW:()=>vv,GK:()=>wv,SP:()=>Sv,yr:()=>Cv,dl:()=>Iv,Dw:()=>Ev,xT:()=>Rv,_X:()=>Pb,wz:()=>Ov});var T=n(43),N=n(391),E=n(29),$=n.n(E),A=n(879);class R{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class O{refCount(e){return D("refCount")}incRef(e){return D("incRef")}timerAvailable(){return!0}time(e){return D("time")}read(e){return D("read")}readSync(e){return D("readSync")}readToGPU(e,t){return D("readToGPU")}numDataIds(){return D("numDataIds")}disposeData(e,t){return D("disposeData")}write(e,t,n){return D("write")}move(e,t,n,r,s){return D("move")}createTensorFromGPUData(e,t,n){return D("createTensorFromGPUData")}memory(){return D("memory")}floatPrecision(){return D("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return D("dispose")}}function D(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function F(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,z(e,t,n)}function M(e,t,n){return Math.max(e,Math.min(t,n))}function P(e){return e%2===0?e:e+1}function z(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function L(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function B(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function V(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";B(j(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function W(e){B(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function U(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function G(e){return 0===e.length}function j(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function H(e){return e%1===0}function q(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function K(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function X(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return new Promise(((s,i)=>{let a=0;const o=()=>{if(e())return void s();a++;const l=t(a);null!=n&&a>=n?i():null!=r?r(o,l):setTimeout(o,l)};o()}))}function Y(e,t){let n=1,r=-1;for(let i=0;i<e.length;++i)if(e[i]>=0)n*=e[i];else if(-1===e[i]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(e[i]<0)throw Error(`Shapes can not be < 0. Found ${e[i]} at dim ${i}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function Q(e,t){const n=t.length;return B((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),B(e.every((e=>H(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function Z(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||s?null:Q(t,e).sort();let a=0;for(let o=0;o<e.length;++o){if(null!=i){if(i[a]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==i[a]||i[a]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),i[a]<=o&&a++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function J(e,t){return ee(e,t)}function ee(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function te(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function ne(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function re(e){return"string"===typeof e||e instanceof String}function se(e){return"number"===typeof e}function ie(e){return Array.isArray(e)?ie(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":se(e)?"float32":re(e)?"string":"boolean"===typeof e?"bool":"float32"}function ae(e){return!!(e&&e.constructor&&e.call&&e.apply)}function oe(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function le(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function ue(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=new Array;if(1===t.length){const i=t[0]*(r?2:1);for(let t=0;t<i;t++)s[t]=n[e+t]}else{const i=t[0],a=t.slice(1),o=a.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<i;t++)s[t]=ue(e+t*o,a,n,r)}return s}function ce(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return ue(0,e,t,n)}function he(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function de(e,t){const n=pe(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function pe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function fe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ce(e,new Float32Array(n));if("int32"===t)return ce(e,new Int32Array(n));if("bool"===t)return ce(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function me(e){e.forEach((t=>{B(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ge(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function ye(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function be(e){return e&&e.then&&"function"===typeof e.then}const ve="tfjsflags";class xe{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=we,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ke().getBool("IS_TEST")||ke().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ke().getBool("IS_TEST")||ke().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(be(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(ve in e){e[ve].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function we(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),s=1;s<n;s++)r[s-1]=arguments[s];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,r[0],r[1]),r.join("=")})),t}function ke(){return Ce}let Se,Ce=null;function Ie(){if(null==Se){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}Se=e}return Se}function _e(e,t){const n=function(){const e=Ie();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Te="Abs",Ne="Acos",Ee="Acosh",$e="Add",Ae="AddN",Re="All",Oe="Any",De="ArgMax",Fe="ArgMin",Me="Asin",Pe="Asinh",ze="Atan",Le="Atanh",Be="Atan2",Ve="AvgPool",We="AvgPoolGrad",Ue="AvgPool3D",Ge="AvgPool3DGrad",je="BatchMatMul",He="BatchToSpaceND",qe="Bincount",Ke="BitwiseAnd",Xe="BroadcastArgs",Ye="Cast",Qe="Ceil",Ze="ClipByValue",Je="Complex",et="ComplexAbs",tt="Concat",nt="Conv2D",rt="Conv2DBackpropFilter",st="Conv2DBackpropInput",it="Conv3D",at="Conv3DBackpropFilterV2",ot="Conv3DBackpropInputV2",lt="Cos",ut="Cosh",ct="Cumprod",ht="Cumsum",dt="CropAndResize",pt="DenseBincount",ft="DepthToSpace",mt="DepthwiseConv2dNative",gt="DepthwiseConv2dNativeBackpropFilter",yt="DepthwiseConv2dNativeBackpropInput",bt="Diag",vt="Dilation2D",xt="Dilation2DBackpropInput",wt="Dilation2DBackpropFilter",kt="Draw",St="RealDiv",Ct="Einsum",It="Elu",_t="EluGrad",Tt="Erf",Nt="Equal",Et="Exp",$t="ExpandDims",At="Expm1",Rt="FFT",Ot="Fill",Dt="FlipLeftRight",Ft="Floor",Mt="FloorDiv",Pt="FusedBatchNorm",zt="GatherV2",Lt="GatherNd",Bt="Greater",Vt="GreaterEqual",Wt="Identity",Ut="IFFT",Gt="Imag",jt="IsFinite",Ht="IsInf",qt="IsNan",Kt="LeakyRelu",Xt="Less",Yt="LessEqual",Qt="LinSpace",Zt="Log",Jt="Log1p",en="LogicalAnd",tn="LogicalNot",nn="LogicalOr",rn="LRN",sn="LRNGrad",an="Max",on="Maximum",ln="MaxPool",un="MaxPoolGrad",cn="MaxPool3D",hn="MaxPool3DGrad",dn="MaxPoolWithArgmax",pn="Mean",fn="Min",mn="Minimum",gn="MirrorPad",yn="Mod",bn="Multinomial",vn="Multiply",xn="Neg",wn="NotEqual",kn="NonMaxSuppressionV3",Sn="NonMaxSuppressionV4",Cn="NonMaxSuppressionV5",In="OnesLike",_n="OneHot",Tn="Pack",Nn="PadV2",En="Pow",$n="Prelu",An="Prod",Rn="RaggedGather",On="RaggedRange",Dn="RaggedTensorToTensor",Fn="Range",Mn="Real",Pn="Reciprocal",zn="Relu",Ln="Reshape",Bn="ResizeNearestNeighbor",Vn="ResizeNearestNeighborGrad",Wn="ResizeBilinear",Un="ResizeBilinearGrad",Gn="Relu6",jn="Reverse",Hn="Round",qn="Rsqrt",Kn="ScatterNd",Xn="TensorScatterUpdate",Yn="SearchSorted",Qn="Select",Zn="Selu",Jn="Slice",er="Sin",tr="Sinh",nr="Sign",rr="Sigmoid",sr="Softplus",ir="Sqrt",ar="Sum",or="SpaceToBatchND",lr="SplitV",ur="Softmax",cr="SparseFillEmptyRows",hr="SparseReshape",dr="SparseSegmentMean",pr="SparseSegmentSum",fr="SparseToDense",mr="SquaredDifference",gr="Square",yr="StaticRegexReplace",br="StridedSlice",vr="StringNGrams",xr="StringSplit",wr="StringToHashBucketFast",kr="Sub",Sr="Tan",Cr="Tanh",Ir="Tile",_r="TopK",Tr="Transform",Nr="Transpose",Er="Unique",$r="Unpack",Ar="UnsortedSegmentSum",Rr="ZerosLike",Or="Step",Dr="FromPixels",Fr="RotateWithOffset",Mr="_FusedMatMul",Pr="FusedConv2D",zr="FusedDepthwiseConv2D";function Lr(){ke().getBool("IS_TEST")||ke().getBool("PROD")||console.warn(...arguments)}function Br(){ke().getBool("IS_TEST")||ke().getBool("PROD")||console.log(...arguments)}const Vr=_e("kernelRegistry",(()=>new Map)),Wr=_e("gradRegistry",(()=>new Map));function Ur(e,t){const n=Kr(e,t);return Vr.get(n)}function Gr(e){return Wr.get(e)}function jr(e){const t=Vr.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===e&&n.push(a)}return n}function Hr(e){const{kernelName:t,backendName:n}=e,r=Kr(t,n);Vr.has(r)&&Lr(`The kernel '${t}' for backend '${n}' is already registered`),Vr.set(r,e)}function qr(e){const{kernelName:t}=e;Wr.has(t)&&ke().getBool("DEBUG")&&Lr(`Overriding the gradient for '${t}'`),Wr.set(t,e)}function Kr(e,t){return`${t}_${e}`}function Xr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Yr=n(353);const Qr=n.n(Yr)()||Yr;function Zr(e){return Qr.fromString(e,!0,16)}const Jr=Zr("c3a5c85c97cb3127"),es=Zr("b492b66fbe98f273"),ts=Zr("9ae16a3b2f90404f");function ns(e){return e.xor(e.shru(47))}function rs(e,t,n){const r=e.slice(t,t+n);return Qr.fromBytes(Array.from(r),!0,!0)}function ss(e,t){return rs(e,t,8)}function is(e,t){return rs(e,t,4)}function as(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function os(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Zr("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function ls(e,t,n,r){return function(e,t,n,r,s,i){s=s.add(e),i=as(i.add(s).add(r),21);const a=s;return s=(s=s.add(t)).add(n),i=i.add(as(s,44)),[s.add(r),i.add(a)]}(ss(e,t),ss(e,t+8),ss(e,t+16),ss(e,t+24),n,r)}function us(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Qr.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=ts.add(2*t),r=ss(e,0).add(ts),s=ss(e,t-8);return os(as(s,37).mul(n).add(r),as(r,25).add(s).mul(n),n)}if(t>=4){const n=ts.add(2*t);return os(is(e,0).shl(3).add(t),is(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return ns(ts.mul(n).xor(Jr.mul(r))).mul(ts)}return ts}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=ts.add(2*t),r=ss(e,0).mul(es),s=ss(e,8),i=ss(e,t-8).mul(n),a=ss(e,t-16).mul(ts);return os(as(r.add(s),43).add(as(i,30)).add(a),r.add(as(s.add(ts),18)).add(i),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=ts.add(2*t),r=ss(e,0).mul(ts),s=ss(e,8),i=ss(e,t-8).mul(n),a=ss(e,t-16).mul(ts),o=as(r.add(s),43).add(as(i,30)).add(a),l=os(o,r.add(as(s.add(ts),18)).add(i),n),u=ss(e,16).mul(n),c=ss(e,24),h=o.add(ss(e,t-32)).mul(n),d=l.add(ss(e,t-24)).mul(n);return os(as(u.add(c),43).add(as(h,30)).add(d),u.add(as(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(es).add(113),i=ns(s.mul(ts).add(113)).mul(ts),a=[Qr.UZERO,Qr.UZERO],o=[Qr.UZERO,Qr.UZERO];r=r.mul(ts).add(ss(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=as(r.add(s).add(a[0]).add(ss(e,l+8)),37).mul(es),s=as(s.add(a[1]).add(ss(e,l+48)),42).mul(es),r=r.xor(o[1]),s=s.add(a[0]).add(ss(e,l+40)),i=as(i.add(o[0]),33).mul(es),a=ls(e,l,a[1].mul(es),r.add(o[0])),o=ls(e,l+32,i.add(o[1]),s.add(ss(e,l+16))),[i,r]=[r,i],l+=64}while(l!==u);const h=es.add(i.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=as(r.add(s).add(a[0]).add(ss(e,l+8)),37).mul(h),s=as(s.add(a[1]).add(ss(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(a[0].mul(9).add(ss(e,l+40))),i=as(i.add(o[0]),33).mul(h),a=ls(e,l,a[1].mul(h),r.add(o[0])),o=ls(e,l+32,i.add(o[1]),s.add(ss(e,l+16))),[i,r]=[r,i],os(os(a[0],o[0],h).add(ns(s).mul(Jr)).add(i),os(a[1],o[1],h).add(r),h)}function cs(e,t){return"string"===t?ps(e):hs([e],t)}function hs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=gs(e)),ke().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ds(){return ke().platform.now()}function ps(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",ke().platform.encode(e,t)}function fs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",ke().platform.decode(e,t)}function ms(e){return null!=ke().platform.isTypedArray?ke().platform.isTypedArray(e):Xr(e)}function gs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||be(e)||null==e||ms(e)&&n)t.push(e);else if(Array.isArray(e)||ms(e))for(let r=0;r<e.length;++r)gs(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)gs(e[s],t,n)}return t}class ys{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new vs)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const a=ds();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:ds()-a})}if(ke().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){const t=r[o];t.data().then((n=>{bs(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function bs(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class vs{logKernelProfile(e,t,n,r,s,i){const a="number"===typeof r?K(`${r}ms`,9):r.error,o=K(e,25),l=t.rank,u=t.size,c=K(t.shape.toString(),14);let h="";for(const d in s){const e=s[d];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function xs(e,t,n,r){const s=le(t),i=function(e,t,n,r){const s=U(t),i=r[r.length-1],a=new Array(i).fill(0),o=t.length,l="complex64"===n?Cs(e):e;if(o>1)for(let u=0;u<s/i;u++){const e=u*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],ws(l[e+t],0,n).length)}return a}(e,t,n,s),a=t.length,o=Ss(e,t,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function ws(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:re(e)?`'${e}'`:"bool"===n?ks(e):parseFloat(e.toFixed(7)).toString(),K(r,t)}function ks(e){return 0===e?"false":"true"}function Ss(e,t,n,r,s){let i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const a="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[ws(Cs(e)[0],0,n)]}return"bool"===n?[ks(e[0])]:[e[0].toString()]}if(1===l){if(o>20){const t=3*a;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-3)*a,o*a));return"complex64"===n&&(r=Cs(r),i=Cs(i)),["["+r.map(((e,t)=>ws(e,s[t],n))).join(", ")+", ..., "+i.map(((e,t)=>ws(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Cs(e):Array.from(e)).map(((e,t)=>ws(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,i=r+h;d.push(...Ss(e.slice(r,i),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,i=r+h;d.push(...Ss(e.slice(r,i),u,n,c,s,t===o-1))}}else for(let m=0;m<o;m++){const t=m*h,r=t+h;d.push(...Ss(e.slice(t,r),u,n,c,s,m===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Cs(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Is{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=U(e),null!=n){const e=n.length;B(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ee(t,this.size),this.strides=le(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),B(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const i of t){if(i<0||i>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let s=t[t.length-1];for(let i=0;i<t.length-1;++i)s+=this.strides[i]*t[i];return this.values[s]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return _s().makeTensor(this.values,this.shape,this.dtype)}}let _s=null,Ts=null,Ns=null;class Es{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=U(e),this.strides=le(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ts.buffer(this.shape,this.dtype,e)}bufferSync(){return Ts.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ce(this.shape,e,"complex64"===this.dtype)}arraySync(){return ce(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=_s().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>fs(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),_s().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=_s().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>fs(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await _s().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),_s().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Ts.print(this,e)}clone(){return this.throwIfDisposed(),Ts.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return xs(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ts.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),_s().makeVariable(this,e,t,n)}}function $s(){return _e("Tensor",(()=>Es))}Object.defineProperty(Es,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),$s();class As extends Es{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!j(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);_s().disposeTensor(this),this.dataId=e.dataId,_s().incRef(this,null)}dispose(){_s().disposeVariable(this),this.isDisposedInternal=!0}}var Rs,Os,Ds,Fs,Ms;Object.defineProperty(As,Symbol.hasInstance,{value:e=>e instanceof Es&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Rs||(Rs={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Os||(Os={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ds||(Ds={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Fs||(Fs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ms||(Ms={}));const Ps={float32:Fs,int32:Os,bool:Ds,complex64:Ms};function zs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ps[e][t]}function Ls(e){return zs(e,"int32")}function Bs(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Vs(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Ws(e,t){if(e.dtype===t.dtype)return[e,t];const n=zs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Us(e,t){return t.some((t=>t.id===e.id))}function Gs(e){const t=[];return js(e,t,new Set),t}function js(e,t,n){if(null==e)return;if(e instanceof Es)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!==typeof r)return;var r;const s=e;for(const i in s){const e=s[i];n.has(e)||(n.add(e),js(e,t,n))}}function Hs(e){return null!=e.kernelName}class qs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ks{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new qs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(Lr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ys(this.backendInstance),!0}setupRegisteredKernels(){jr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){jr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof O||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Lr(`Initialization of backend ${e} failed`),Lr(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return Lr(`Initialization of backend ${e} failed`),Lr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return Ks.nextTensorId++}nextVariableId(){return Ks.nextVariableId++}clone(e){const t=Ys.runKernel(Wt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Ys.runKernel(Ye,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Ur(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Hs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Hs(e)){const{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;const l=Ur(t,this.backendName);B(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),a=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const u=a.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};a=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Hs(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=a()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Gr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(B(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const a=n.filter(((e,t)=>s[t]));return i.concat(a)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&re(e[0])&&(s=e.map((e=>ps(e))));const i=r.write(s,t,n),a=new Es(t,n,i,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const e=this.state.tensorInfo.get(i),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,i=new Es(r,s,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new As(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ne(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof As||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ne(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Gr(e);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=pe(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Gs(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(B(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));B(s instanceof Es,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},s={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],i=n.inputs;for(const e in i){const a=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[a.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[n.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(i[t.outputs[e].id]){for(const e in n)i[n[e].id]=!0,a[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(s[t.id]&&a[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=de(U(e),"float32");return Ys.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const i=t[s],a=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const a=i.inputs[t];if(!j(s.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=s;else{const t=e[a.id];e[a.id]=r(t,s),t.dispose()}}}}(e,i,(e=>this.tidy(e)),Qs);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){var t=this;return B(ae(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];let i;B(r.every((e=>e instanceof Es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const a={};r.forEach(((e,t)=>{a[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(i=e(...r,n),B(i.value instanceof Es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),B(ae(i.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),i.value),backwardsFunc:(e,t)=>{const n=i.gradFunc(e,t),s=Array.isArray(n)?n:[n];B(s.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),B(s.every((e=>e instanceof Es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return s.forEach(((e,t)=>{a[t]=()=>e})),a},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=ds(),n=await this.backend.time(e);return n.wallMs=ds()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new qs;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Xs(){const e=Ie();if(null==e._tfengine){const t=new xe(e);e._tfengine=new Ks(t)}var t;return t=e._tfengine.ENV,Ce=t,function(e){_s=e}((()=>e._tfengine)),e._tfengine}Ks.nextTensorId=0,Ks.nextVariableId=0;const Ys=Xs();function Qs(e,t){const n={a:e,b:t};return Ys.runKernel($e,n)}let Zs;function Js(e){if(void 0!==Zs)return Zs;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ei(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const ti=ke();function ni(e,t){let n=e;if(ms(e))return"string"===t?[]:[e.length];if(Bs(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Vs(e))return[e.buffer.size/(null==t?4:ne(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||ms(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&ke().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ri(e,r,[]),r}function ri(e,t,n){if(n=n||[],!Array.isArray(e)&&!ms(e))return void B(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));B(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),B(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)ri(e[s],r,n.concat(s))}function si(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function ii(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof $s())return si(r,e.dtype,t,n),e;let s=ie(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),si(r,s,t,n),null==e||!ms(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=ni(e,s);ms(e)||Array.isArray(e)||(e=[e]);const a="string"!==s?hs(e,s):gs(e,[],!0);return Ys.makeTensor(a,i,s)}function ai(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>ii(e,`${t}[${s}]`,n,r)))}ti.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ti.registerFlag("IS_BROWSER",(()=>ei())),ti.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),ti.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ti.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),ti.registerFlag("PROD",(()=>!1)),ti.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ti.getBool("DEBUG"))),ti.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ti.registerFlag("IS_TEST",(()=>!1)),ti.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>ti.getBool("DEBUG"))),ti.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ti.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ti.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const oi="__op";function li(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=oi;const s=function(){Ys.startScope(n);try{const e=r(...arguments);return be(e)&&console.error("Cannot return a Promise inside of tidy."),Ys.endScope(e),e}catch(e){throw Ys.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const ui=li({complex_:function(e,t){const n=ii(e,"real","complex"),r=ii(t,"imag","complex");V(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Ys.runKernel(Je,s)}});function ci(e,t,n,r){if(null==r)r=ie(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Vs(e)||Bs(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Ys.backend.createTensorFromGPUData(e,t||n,r)}if(!ms(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){me(t);const e=U(t),r=U(n);B(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==U(t.slice(s));B(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return ms(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?hs(e,r):gs(e,[],!0),Ys.makeTensor(e,t,r)}function hi(e,t,n){return ci(e,t,ni(e,n),n)}const di={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class pi{static join(e){return new pi(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>ms(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let i=0;for(let a=n;a<this.shards.length;a++){const n=this.shards[a],r=e+i-n.start,o=i,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,r,l-r);if(s.set(u,o),i+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,i=t(e[s]);if(0===i)return s;i<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function fi(){return Ys}function mi(){return Ys.memory()}function gi(e,t){return Ys.tidy(e,t)}function yi(e){Gs(e).forEach((e=>e.dispose()))}function bi(e){return Ys.keep(e)}function vi(e){return Ys.setBackend(e)}function xi(){return Ys.ready()}function wi(){return Ys.backendName}function ki(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Ys.registerBackend(e,t,n)}function Si(){return Ys.backend}!function(e){Ns=e}((function(e){ke().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}));const Ci=4;async function Ii(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<s.length;++i){const a=s[i],o=Array.isArray(e)?e[i].tensor:e[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Ci*t.length,r=new Uint8Array(n);let s=0;for(let i=0;i<t.length;i++){const e=t[i],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=Ci,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Ri(await Promise.all(r)),specs:n}}function _i(e,t){const n=new pi(e),r={};let s=0;for(const i of t){const e=Ti(i,((e,t)=>n.slice(s+e,s+t)));r[i.name]=Ei(i,n.slice(s,s+e)),s+=e}return r}function Ti(e,t){const n=U(e.shape);let r;if("quantization"in e){const t=e.quantization;r=di[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=Ci+new Uint32Array(t(e,e+Ci))[0];return e}r=di[e.dtype]}return n*r}async function Ni(e,t){const n=U(e.shape);let r;if("quantization"in e){const t=e.quantization;r=di[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=Ci+new Uint32Array(await t(e,e+Ci))[0];return e}r=di[e.dtype]}return n*r}function Ei(e,t){const n=e.name,r=e.dtype,s=e.shape,i=U(s);let a,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${r}.`)}const l=di[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===s.dtype||"uint16"===s.dtype){a=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];a[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let a=0;a<r.length;a++){const s=r[a],o=e[n[s>>10]+(1023&s)]+t[s>>10];i[a]=o}return new Float32Array(s)}}();a=e(u)}}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight '${n}': ${r}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);a=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];a[e]=Math.round(t*s.scale+s.min)}}o+=i*l}else if("string"===r){const n=U(e.shape);a=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+Ci))[0];o+=Ci;const n=new Uint8Array(t.slice(o,o+e));a.push(n),o+=e}}else{const e=di[r];if("float32"===r)a=new Float32Array(t);else if("int32"===r)a=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){a=new Float32Array(t);const e=new Float32Array(a.length/2),n=new Float32Array(a.length/2);for(let t=0;t<e.length;t++)e[t]=a[2*t],n[t]=a[2*t+1];const r=hi(e,s,"float32"),i=hi(n,s,"float32"),o=ui(r,i);return r.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${r}`)}a=new Uint8Array(t)}o+=i*e}return hi(a,s,r)}async function $i(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:s}=await e.read();if(t&&null==s){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const i=new Uint8Array(r.length+s.byteLength);i.set(r,0),i.set(new Uint8Array(s),r.length),r=i}return r.buffer}async function Ai(e,t){const n={},r=e.getReader();let s=new ArrayBuffer(0);for(const i of t){const e=await Ni(i,(async(e,t)=>(s=await $i(r,s,t),s.slice(e,t))));s=await $i(r,s,e);const t=s.slice(0,e);s=s.slice(e);const a=Ei(i,t);if(n[i.name]=a,"webgpu"===wi()){const e=Si();"uploadToGPU"in e&&U(a.shape)>=ke().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(a.dataId)}}return n}function Ri(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Oi="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function Di(e){return Oi?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Fi(e){return pi.join(e)}function Mi(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Pi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function zi(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function Li(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),zi(e,n,r)}function Bi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Di(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Di(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new pi(e.weightData).byteLength}}function Vi(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Wi{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Wi.instance&&(Wi.instance=new Wi),Wi.instance}static registerSaveRouter(e){Wi.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Wi.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Wi.getHandlers(e,"save")}static getLoadHandlers(e,t){return Wi.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Wi.getInstance().loadRouters:Wi.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Ui=e=>Wi.registerSaveRouter(e),Gi=e=>Wi.registerLoadRouter(e),ji=e=>Wi.getSaveHandlers(e),Hi=(e,t)=>Wi.getLoadHandlers(e,t),qi="tensorflowjs",Ki="models_store",Xi="model_info_store";function Yi(){if(!ke().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Qi(e){const t=e.result;t.createObjectStore(Ki,{keyPath:"modelPath"}),t.createObjectStore(Xi,{keyPath:"modelPath"})}class Zi{constructor(e){if(this.indexedDB=Yi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(qi,1);r.onupgradeneeded=()=>Qi(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Ki,"readonly"),r=t.objectStore(Ki).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=pi.join(t.weightData);const r=Bi(t),a=s.transaction(Xi,"readwrite");let o,l,u=a.objectStore(Xi);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(i){return n(i)}o.onsuccess=()=>{l=s.transaction(Ki,"readwrite");const o=l.objectStore(Ki);let c;try{c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(i){return n(i)}c.onsuccess=()=>e({modelArtifactsInfo:r}),c.onerror=e=>{u=a.objectStore(Xi);const t=u.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(c.error)),t.onerror=e=>(s.close(),n(c.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Zi.URL_SCHEME="indexeddb://";const Ji=e=>{return ke().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Zi.URL_SCHEME)?(t=e.slice(Zi.URL_SCHEME.length),new Zi(t)):null;var t};Wi.registerSaveRouter(Ji),Wi.registerLoadRouter(Ji);class ea{constructor(){this.indexedDB=Yi()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(qi,1);n.onupgradeneeded=()=>Qi(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Xi,"readonly"),i=s.objectStore(Xi).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(r.close(),t(i.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Zi.URL_SCHEME)?t.slice(Zi.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(qi,1);r.onupgradeneeded=()=>Qi(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(Xi,"readwrite"),a=i.objectStore(Xi),o=a.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),i=()=>{l=s.transaction(Ki,"readwrite");const r=l.objectStore(Ki).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const ta="/",na="tensorflowjs_models",ra="info",sa="model_topology",ia="weight_specs",aa="weight_data",oa="model_metadata";function la(e){return{info:[na,e,ra].join(ta),topology:[na,e,sa].join(ta),weightSpecs:[na,e,ia].join(ta),weightData:[na,e,aa].join(ta),modelMetadata:[na,e,oa].join(ta)}}function ua(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ca(e){const t=e.split(ta);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ta)}class ha{constructor(e){if(!ke().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=la(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Bi(e),i=pi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(Oi)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(i));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw ua(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Oi){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(i),t}}ha.URL_SCHEME="localstorage://";const da=e=>{return ke().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ha.URL_SCHEME)?(t=e.slice(ha.URL_SCHEME.length),new ha(t)):null;var t};Wi.registerSaveRouter(da),Wi.registerLoadRouter(da);class pa{constructor(){B(ke().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),B("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=na+ta,n=ta+ra;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[ca(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=la(e=(t=e).startsWith(ha.URL_SCHEME)?t.slice(ha.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ua(n),r}}const fa="://";class ma{constructor(){this.managers={}}static getInstance(){return null==ma.instance&&(ma.instance=new ma),ma.instance}static registerManager(e,t){B(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(fa)&&(e=e.slice(0,e.indexOf(fa))),B(e.length>0,(()=>"scheme must not be an empty string."));const n=ma.getInstance();B(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ma.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ma.getInstance().managers)}}function ga(e){if(-1===e.indexOf(fa))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ma.getSchemes().join(",")}`);return{scheme:e.split(fa)[0],path:e.split(fa)[1]}}async function ya(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];B(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Wi.getLoadHandlers(e);B(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),B(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],i=Wi.getSaveHandlers(t);B(i.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),B(i.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const a=i[0],o=ga(e).scheme,l=ga(e).path,u=o===ga(e).scheme,c=await s.load();n&&u&&await ma.getManager(o).removeModel(l);const h=await a.save(c);return n&&!u&&await ma.getManager(o).removeModel(l),h.modelArtifactsInfo}async function ba(){const e=ma.getSchemes(),t={};for(const n of e){const e=await ma.getManager(n).listModels();for(const r in e){t[n+fa+r]=e[r]}}return t}async function va(e){const t=ga(e);return ma.getManager(t.scheme).removeModel(t.path)}async function xa(e,t){return ya(e,t,!1)}async function wa(e,t){return ya(e,t,!0)}class ka{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&ke().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return Xr(e)}}if(ke().get("IS_BROWSER")){ke().setPlatform("browser",new ka);try{ma.registerManager(ha.URL_SCHEME,new pa)}catch(Q3){}try{ma.registerManager(Zi.URL_SCHEME,new ea)}catch(Q3){}}const Sa=()=>n(817);let Ca;class Ia{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ke().global.fetch?ke().global.fetch(e,t):(null==Ca&&(Ca=Sa()),Ca(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function _a(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",me(e),new Is(e,t,n)}ke().get("IS_NODE")&&!ke().get("IS_BROWSER")&&ke().setPlatform("node",new Ia);const Ta=li({cast_:function(e,t){const n=ii(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Ys.runKernel(Ye,r,s)}});const Na=li({clone_:function(e){const t={x:ii(e,"x","clone","string_or_numeric")};return Ys.runKernel(Wt,t)}});function Ea(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}Xs();!function(e){Ts=e}({buffer:_a,cast:Ta,clone:Na,print:Ea});const $a=li({add_:function(e,t){let n=ii(e,"a","add"),r=ii(t,"b","add");[n,r]=Ws(n,r);const s={a:n,b:r};return Ys.runKernel($e,s)}});const Aa=li({floorDiv_:function(e,t){let n=ii(e,"a","floorDiv"),r=ii(t,"b","floorDiv");[n,r]=Ws(n,r);const s={a:n,b:r};return Ys.runKernel(Mt,s)}});const Ra=li({div_:function(e,t){let n=ii(e,"a","div"),r=ii(t,"b","div");if([n,r]=Ws(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Aa(n,r);const s={a:n,b:r};return Ys.runKernel(St,s,{})}});const Oa=li({mul_:function(e,t){let n=ii(e,"a","mul"),r=ii(t,"b","mul");[n,r]=Ws(n,r);const s={a:n,b:r};return Ys.runKernel(vn,s)}});const Da=li({sqrt_:function(e){const t={x:ii(e,"x","sqrt","float32")};return Ys.runKernel(ir,t)}});const Fa=li({square_:function(e){const t=ii(e,"x","square");return Ys.runKernel("Square",{x:t},{})}});const Ma=li({zerosLike_:function(e){const t={x:ii(e,"x","zerosLike")};return Ys.runKernel(Rr,t)}});function Pa(e){return Ys.customGrad(e)}function za(e,t){if((ms(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ms(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ci(e,[],[],t)}const La=new Map,Ba=new Map;class Va{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Wa{constructor(){this.classNameMap={}}static getMap(){return null==Wa.instance&&(Wa.instance=new Wa),Wa.instance}static register(e){Wa.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ua(e,t,n){B(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),B("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),B(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const r=t+">"+n;return Wa.register(e),La.set(r,e),Ba.set(e,r),e}class Ga extends Va{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return yi(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){B(ae(e),(()=>"The f passed in variableGrads(f) must be a function")),B(null==t||Array.isArray(t)&&t.every((e=>e instanceof As)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Ys.registeredVariables)t.push(Ys.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),B(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:i,grads:a}=Ys.gradients(e,t,null,!0);B(a.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),B(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=a[t]&&(o[e.name]=a[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:i,grads:o}}(e,t)}dispose(){null!=this.iterations_&&yi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:za(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ga,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class ja extends Ga{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ys.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ys.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:gi((()=>Ma(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:gi((()=>Ma(r).variable(s)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;gi((()=>{const e=$a(Oa(a,this.rho),Oa(Fa(i),1-this.rho)),t=Oa(Ra(Da($a(o,this.epsilon)),Da($a(a,this.epsilon))),i),n=$a(Oa(o,this.rho),Oa(Fa(t),1-this.rho));a.assign(e),o.assign(n);const s=$a(Oa(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(yi(this.accumulatedGrads.map((e=>e.variable))),yi(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Ha(e,t,n){me(e);const r={shape:e,value:t,dtype:n=n||ie(t)};return Ys.runKernel(Ot,{},r)}class qa extends Ga{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ys.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:gi((()=>Ha(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable;gi((()=>{const e=$a(i,Fa(s));i.assign(e);const t=$a(Oa(Ra(s,Da($a(e,Ys.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&yi(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Ka=li({pow_:function(e,t){let n=ii(e,"base","pow"),r=ii(t,"exp","pow");[n,r]=Ws(n,r);const s={a:n,b:r};return Ys.runKernel(En,s)}});const Xa=li({sub_:function(e,t){let n=ii(e,"a","sub"),r=ii(t,"b","sub");[n,r]=Ws(n,r);const s={a:n,b:r};return Ys.runKernel(kr,s)}});class Ya extends Ga{static get className(){return"Adam"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],gi((()=>{this.accBeta1=za(t).variable(),this.accBeta2=za(n).variable()})),null==r&&(this.epsilon=Ys.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);gi((()=>{const n=Xa(1,this.accBeta1),r=Xa(1,this.accBeta2);t.forEach(((t,s)=>{const i=Ys.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:gi((()=>Ma(i).variable(a)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:gi((()=>Ma(i).variable(a)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=$a(Oa(l,this.beta1),Oa(o,1-this.beta1)),h=$a(Oa(u,this.beta2),Oa(Fa(o),1-this.beta2)),d=Ra(c,n),p=Ra(h,r);l.assign(c),u.assign(h);const f=$a(Oa(Ra(d,$a(Da(p),this.epsilon)),-this.learningRate),i);i.assign(f)})),this.accBeta1.assign(Oa(this.accBeta1,this.beta1)),this.accBeta2.assign(Oa(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&yi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&yi(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),gi((()=>{this.accBeta1.assign(Ka(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ka(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Qa=li({abs_:function(e){const t=ii(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Ys.runKernel(et,e)}{const e={x:t};return Ys.runKernel(Te,e)}}});function Za(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=e[i]||1;(t[t.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}function Ja(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],i=t.length-r-1,a=t[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function eo(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let i=e[e.length-s-1];null==i&&(i=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===i)r[n-s-1]=a;else if(1===a)r[n-s-1]=i;else{if(i!==a){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-s-1]=i}}return r}const to=li({maximum_:function(e,t){let n=ii(e,"a","maximum"),r=ii(t,"b","maximum");[n,r]=Ws(n,r),"bool"===n.dtype&&(n=Ta(n,"int32"),r=Ta(r,"int32")),eo(n.shape,r.shape);const s={a:n,b:r};return Ys.runKernel(on,s)}});class no extends Ga{static get className(){return"Adamax"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],gi((()=>{this.iteration=za(0).variable(),this.accBeta1=za(t).variable()})),null==r&&(this.epsilon=Ys.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);gi((()=>{const n=Xa(1,this.accBeta1),r=Ra(-this.learningRate,$a(Oa(this.iteration,this.decay),1));t.forEach(((t,s)=>{const i=Ys.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Ma(i).variable(a)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:Ma(i).variable(a)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=$a(Oa(l,this.beta1),Oa(o,1-this.beta1)),h=Oa(u,this.beta2),d=Qa(o),p=to(h,d);l.assign(c),u.assign(p);const f=$a(Oa(Ra(r,n),Ra(c,$a(p,this.epsilon))),i);i.assign(f)})),this.iteration.assign($a(this.iteration,1)),this.accBeta1.assign(Oa(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&yi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&yi(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class ro extends Ga{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Ys.registeredVariables[t];gi((()=>{const e=$a(Oa(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=bi(za(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class so extends ro{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=za(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ys.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:gi((()=>Ma(r).variable(e)))}}const s=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&gi((()=>{let e;const t=$a(Oa(this.m,s),i);e=this.useNesterov?$a(Oa(this.c,$a(i,Oa(t,this.m))),r):$a(Oa(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&yi(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class io extends Ga{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Ys.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ys.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:gi((()=>Ma(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:gi((()=>Ma(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:gi((()=>Ma(r).variable(s)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;gi((()=>{const e=$a(Oa(a,this.decay),Oa(Fa(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=$a(Oa(t,this.decay),Oa(i,1-this.decay)),l=Ra(Oa(i,this.learningRate),Da(Xa(e,$a(Fa(s),this.epsilon)))),u=$a(Oa(o,this.momentum),l);a.assign(e),t.assign(s),o.assign(u);const c=Xa(r,u);r.assign(c)}else{const e=$a(Oa(a,this.decay),Oa(Fa(i),1-this.decay)),t=$a(Oa(o,this.momentum),Ra(Oa(i,this.learningRate),Da($a(e,this.epsilon))));a.assign(e),o.assign(t);const n=Xa(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&yi(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&yi(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&yi(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const ao=[ja,qa,Ya,no,so,io,ro];function oo(e){return new Promise((e=>setTimeout(e))).then(e)}class lo{constructor(e){if(!ke().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(lo.URL_SCHEME)&&(e=e.slice(lo.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=pi.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Pi(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await oo((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await oo((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Bi(e)}}}}lo.URL_SCHEME="downloads://";class uo{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const i=Li(r,(e=>this.loadWeights(e)));e(i)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const i of e)t.push(...i.weights),n.push(...i.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Mi(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=Mi(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function co(e){return new uo(e)}function ho(e,t,n,r){!function(e){B(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){B(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),B(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),B(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((i=>(i.then((i=>{const a=n+ ++s/e.length*(r-n);return t(a),i})),i))))}async function po(e,t){null==t&&(t={});const n=null==t.fetchFunc?ke().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await ho(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await ho(s,t.onProgress,.5,1)}async function fo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return mo((e=>po(e,{requestInit:r})))(e,t,n)}function mo(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const s=t.map((()=>!1)),i={},a=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=di[l]*U(e.shape),c=()=>{s[t]=!0,null==i[t]&&(i[t]=[]),i[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),a[n]=!0)})):c(),o.push(e.name),n+=u}))})),!a.every((e=>e))){const e=r.filter(((e,t)=>!a[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let d=0;return l.forEach((e=>{const n=t[e].paths.length,r=new pi(c.slice(d,d+n));i[e].forEach((e=>{const t=_i(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]})),d+=n})),h}}Wi.registerSaveRouter((e=>ke().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(lo.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new lo(e)}(e.slice(lo.URL_SCHEME.length)):null));class go{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(B("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ke().platform.fetch,B(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&B(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Pi(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=pi.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Bi(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return Li(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Vi(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?ke().platform.fetch:t.fetchFunc;let s,i=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var a;i<e.length;){if(!s){const n=(await r(e[i],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);i++,s=void 0,null===(a=t.onProgress)||void 0===a||a.call(t,i/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,i=[],a=[];for(const o of e)for(const e of o.paths)null!=this.weightUrlConverter?a.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e);return[Vi(e),await po(t,this.loadOptions)]}}function yo(e){return null!=e.match(go.URL_SCHEME_REGEX)}go.URL_SCHEME_REGEX=/^https?:\/\//;const bo=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>yo(e))):yo(e),n)return vo(e,t)}return null};function vo(e,t){return new go(e,t)}function xo(e,t){return vo(e,t)}Wi.registerSaveRouter(bo),Wi.registerLoadRouter(bo);class wo{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class ko{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class So{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Co(e,t,n,r){return new So(Io(...arguments))}function Io(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new wo(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new wo({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new wo({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function _o(e){return new ko(e)}function To(e){return new ko(e)}function No(e,t,n){if(W(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=ni(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ci(e,t,r,n)}let Eo,$o=!1;function Ao(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,i=!1,a=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else if(null!=e.getContext)a=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Ur(Dr,Ys.backendName)){const n={pixels:e},r={numChannels:t};return Ys.runKernel(Dr,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(a)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(i||s||o){if(null==Eo)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Eo=new OffscreenCanvas(1,1).getContext("2d")}else Eo=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Eo.canvas.width=l,Eo.canvas.height=u,Eo.drawImage(e,0,0,l,u),c=Eo.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return No(h,[u,l,t],"int32")}function Ro(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function Oo(e,t){let n=ii(e,"img","toPixels");if(!(e instanceof Es)){const e=n;n=Ta(e,"int32"),e.dispose()}Ro(n);const[r,s]=n.shape.slice(0,2),i=2===n.rank?1:n.shape[2],a=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let u=0;u<r*s;++u){const e=[0,0,0,255];for(let r=0;r<i;r++){const t=a[u*i+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===i?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){if(!$o){null!=Ur(kt,Ys.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),$o=!0)}t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const Do=li({fromPixels_:Ao}),Fo=-2,Mo=-1;function Po(e,t,n){const r=e.shape.length;B(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),B(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)B(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function zo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Lo(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Bo(e,t,n,r){const s=[...e];for(let i=s.length;i<r.length;i++)s.push(1);for(let i=0;i<n;i++)0===i?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Vo(e,t,n){return n<=e?n:n-(t-1)}function Wo(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Uo(e,t,n,r,s,i,a,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Go(a,l,u,r,e),h=jo(o,l,u,s,e),d=Bo(i,l,u,e)}else for(let p=0;p<u;p++)c[p]=qo(a,r,i,e,p,l),h[p]=Ko(o,s,i,e,p,l),d[p]=Ho(i,p,l);return{begin:c,end:h,strides:d}}function Go(e,t,n,r,s){const i=[...s],a=Wo(n,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=0;else{const s=Vo(t,n,o);let a=r[s];e&1<<s&&(a=0),i[o]=a}return i}function jo(e,t,n,r,s){const i=[...s],a=Wo(n,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=Number.MAX_SAFE_INTEGER;else{const s=Vo(t,n,o);let a=r[s];e&1<<s&&(a=Number.MAX_SAFE_INTEGER),i[o]=a}for(let o=0;o<i.length;o++){const e=s[o];i[o]<0&&(i[o]+=e),i[o]=M(0,i[o],s[o])}return i}function Ho(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function qo(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=M(0,a,l-1),a}function Ko(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=o>0?M(0,a,l):M(-1,a,l-1),a}function Xo(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Yo(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Qo(e,t,n){let r;const s=e.shape.length;let i;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{B(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(B(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function Zo(e,t,n,r,s,i,a,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=a&&0!==(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)c&&0!==(1<<b&o)&&h.numAddAxisAfterEllipsis++,1<<b&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Fo),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Mo),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error(`strides[${b}] must be non-zero`);const t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const r=[d.beginMask&1<<b,d.endMask&1<<b],s=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];const i=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){const e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=Jo(d.begin[b],0,d.strides[b],n,r,s),d.end[b]=Jo(d.end[b],1,d.strides[b],n,r,s);const e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;p=p&&e,f=f&&(0===b&&1===d.strides[b]||e)}else p=p&&1===d.strides[b]&&i,f=f&&(0===b&&1===d.strides[b]||i);let a,o=!1;if(d.beginValid&&d.endValid?(a=d.end[b]-d.begin[b],o=!0):t?(a=1,o=!0):i&&n>=0&&(a=d.strides[b]<0?-n:n,o=!0),o){let e;e=0===a||a<0!==d.strides[b]<0?0:Math.trunc(a/d.strides[b])+(a%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===Fo&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==Fo)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Jo(e,t,n,r,s,i){if(s[t])return n>0?i[t]:i[t+1&1];{const t=e<0?r+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}const el=li({acos_:function(e){const t={x:ii(e,"x","acos")};return Ys.runKernel(Ne,t)}});const tl=li({acosh_:function(e){const t={x:ii(e,"x","acosh")};return Ys.runKernel(Ee,t)}});const nl=li({addN_:function(e){B(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),B(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>ii(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!j(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Ys.runKernel(Ae,r)}});const rl=li({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:ii(e,"x","all","bool")},s={axis:t,keepDims:n};return Ys.runKernel(Re,r,s)}});const sl=li({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:ii(e,"x","any","bool")},s={axis:t,keepDims:n};return Ys.runKernel(Oe,r,s)}});const il=li({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:ii(e,"x","argMax")},r={axis:t};return Ys.runKernel(De,n,r)}});const al=li({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:ii(e,"x","argMin")},r={axis:t};return Ys.runKernel(Fe,n,r)}});const ol=li({asin_:function(e){const t={x:ii(e,"x","asin")};return Ys.runKernel(Me,t)}});const ll=li({asinh_:function(e){const t={x:ii(e,"x","asinh")};return Ys.runKernel(Pe,t)}});const ul=li({atan_:function(e){const t={x:ii(e,"x","atan")};return Ys.runKernel(ze,t)}});const cl=li({atan2_:function(e,t){let n=ii(e,"a","atan2"),r=ii(t,"b","atan2");[n,r]=Ws(n,r);const s={a:n,b:r};return Ys.runKernel(Be,s)}});const hl=li({atanh_:function(e){const t={x:ii(e,"x","atanh")};return Ys.runKernel(Le,t)}});function dl(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",i=arguments.length>5?arguments[5]:void 0;return ml(e,[...t,e[3]],n,i,r,null,null,Il(s))}function pl(e,t,n,r,s,i){let a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[o,l]=bl(t);let u;if("channelsLast"===a)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,e[1],e[1]]}return ml(e,u,n,r,s,i,!1,a)}function fl(e,t,n,r,s,i){let a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[o,l,u]=vl(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return gl(e,c,n,r,s,!1,h,i)}function ml(e,t,n,r,s,i){let a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=bl(n),[y,b]=bl(r),v=xl(d,y),x=xl(p,b),{padInfo:w,outHeight:k,outWidth:S}=function(e,t,n,r,s,i,a,o,l){let u,c,h;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=yl(e,t,n));const i=e[0],a=e[1],o=wl((i-t+2*r)/n+1,s),l=wl((a-t+2*r)/n+1,s);return[o,l]}([t,n],i,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+i-t),o=Math.max(0,(h-1)*s+a-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=wl((t-i+d+p)/r+1,o),h=wl((n-a+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,v,x,i,o),C=a?f*h:f;let I;return"channelsFirst"===o?I=[l,C,k,S]:"channelsLast"===o&&(I=[l,k,S,C]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:S,outChannels:C,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:e,outShape:I,filterShape:t}}function gl(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[y,b,v]=vl(n),[x,w,k]=vl(r),S=xl(p,x),C=xl(f,w),I=xl(m,k),{padInfo:_,outDepth:T,outHeight:N,outWidth:E}=function(e,t,n,r,s,i,a,o,l,u,c){let h,d,p,f;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,s,i){null==s&&(s=yl(e,t[0],r[0]));const a=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*s>=t[o]&&(a[o]=wl((e[o]-t[o]+2*s)/r[o]+1,i));return a}([t,n,r,1],[o,l,u],1,[s,i,a],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/i),f=Math.ceil(r/a);const e=(d-1)*s+o-t,c=(p-1)*i+l-n,m=(f-1)*a+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),v=c-b,x=Math.floor(m/2);h={top:b,bottom:v,left:x,right:m-x,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,v,S,C,I,o),$=i?g*d:g;let A;return"channelsFirst"===a?A=[l,$,T,N,E]:"channelsLast"===a&&(A=[l,T,N,E,$]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:T,outHeight:N,outWidth:E,outChannels:$,padInfo:_,strideDepth:y,strideHeight:b,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:C,effectiveFilterWidth:I,dilationDepth:x,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function yl(e,t,n){const r=xl(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)}function bl(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function vl(e){return"number"===typeof e?[e,e,e]:e}function xl(e,t){return t<=1?e:e+(e-1)*(t-1)}function wl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function kl(e){const[t,n,r]=bl(e);return 1===t&&1===n&&1===r}function Sl(e,t){return kl(e)||kl(t)}function Cl(e){return bl(e).every((e=>e>0))}function Il(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function _l(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)B(H(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{B(H(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Tl=li({reshape_:function(e,t){const n={x:ii(e,"x","reshape","string_or_numeric")},r={shape:t};return Ys.runKernel(Ln,n,r)}});const Nl=li({avgPool_:function(e,t,n,r,s){const i=ii(e,"x","avgPool","float32");B(Sl(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=Tl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),B(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),_l("avgPool",r,s);const l={x:a},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Ys.runKernel(Ve,l,u);return c=Ta(c,i.dtype),o?Tl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const El=li({avgPool3d_:function(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const a=ii(e,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=Tl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),B(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),B("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),B("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),_l("avgPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i};let h=Ys.runKernel(Ue,u,c);return h=Ta(h,o.dtype),l?Tl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const $l=li({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;B(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ai(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Na(n[0]);const r=n,s={axis:t};return Ys.runKernel(tt,r,s)}});const Al=li({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=ii(e,"a","matMul"),i=ii(t,"b","matMul");[s,i]=Ws(s,i);const a={a:s,b:i},o={transposeA:n,transposeB:r};return Ys.runKernel(je,a,o)}});const Rl=li({sigmoid_:function(e){const t={x:ii(e,"x","sigmoid","float32")};return Ys.runKernel(rr,t)}});const Ol=li({slice_:function(e,t,n){const r=ii(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:t,size:n};return Ys.runKernel(Jn,s,i)}});const Dl=li({tanh_:function(e){const t={x:ii(e,"x","tanh","float32")};return Ys.runKernel(Cr,t)}});const Fl=li({basicLSTMCell_:function(e,t,n,r,s,i){const a=ii(e,"forgetBias","basicLSTMCell"),o=ii(t,"lstmKernel","basicLSTMCell"),l=ii(n,"lstmBias","basicLSTMCell"),u=ii(r,"data","basicLSTMCell"),c=ii(s,"c","basicLSTMCell"),h=ii(i,"h","basicLSTMCell"),d=$l([u,h],1),p=Al(d,o),f=$a(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Ol(f,[0,0],y),v=Ol(f,[0,g],y),x=Ol(f,[0,2*g],y),w=Ol(f,[0,3*g],y),k=$a(Oa(Rl(b),Dl(v)),Oa(c,Rl($a(a,x))));return[k,Oa(Dl(k),Rl(w))]}});const Ml=li({batchToSpaceND_:function(e,t,n){const r=ii(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));B(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),B(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),B(r.shape[0]%s===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const i={x:r},a={blockShape:t,crops:n};return Ys.runKernel(He,i,a)}});const Pl=li({batchNorm_:function(e,t,n,r,s,i){null==i&&(i=.001);const a=ii(e,"x","batchNorm"),o=ii(t,"mean","batchNorm"),l=ii(n,"variance","batchNorm");let u,c;null!=s&&(u=ii(s,"scale","batchNorm")),null!=r&&(c=ii(r,"offset","batchNorm")),B(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),B(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),B(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Tl(e,[1,1,1,e.size]):2===e.rank?Tl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Tl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(a),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:i},p=Ys.runKernel(Pt,h,d);return Tl(p,a.shape)}});const zl=li({batchNorm2d_:function(e,t,n,r,s,i){const a=ii(e,"x","batchNorm"),o=ii(t,"mean","batchNorm"),l=ii(n,"variance","batchNorm");let u,c;return null!=s&&(u=ii(s,"scale","batchNorm")),null!=r&&(c=ii(r,"offset","batchNorm")),B(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),B(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),B(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&B(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&B(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Pl(a,o,l,c,u,i)}});const Ll=li({batchNorm3d_:function(e,t,n,r,s,i){const a=ii(e,"x","batchNorm"),o=ii(t,"mean","batchNorm"),l=ii(n,"variance","batchNorm");let u,c;return null!=s&&(u=ii(s,"scale","batchNorm")),null!=r&&(c=ii(r,"offset","batchNorm")),B(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),B(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),B(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&B(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&B(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Pl(a,o,l,c,u,i)}});const Bl=li({batchNorm4d_:function(e,t,n,r,s,i){const a=ii(e,"x","batchNorm"),o=ii(t,"mean","batchNorm"),l=ii(n,"variance","batchNorm");let u,c;return null!=s&&(u=ii(s,"scale","batchNorm")),null!=r&&(c=ii(r,"offset","batchNorm")),B(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),B(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),B(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&B(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&B(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Pl(a,o,l,c,u,i)}});const Vl=li({bincount_:function(e,t,n){const r=ii(e,"x","bincount"),s=ii(t,"weights","bincount");B("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),B(n>=0,(()=>`size must be non-negative, but got ${n}.`)),B(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},a={size:n};return Ys.runKernel(qe,i,a)}});const Wl=li({bitwiseAnd_:function(e,t){const n=ii(e,"x","bitwiseAnd"),r=ii(t,"y","bitwiseAnd");if(!j(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return Ys.runKernel(Ke,s)}});const Ul=li({broadcastArgs_:function(e,t){const n=ii(e,"s0","broadcastArgs","int32"),r=ii(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return Ys.runKernel(Xe,s)}});const Gl=li({broadcastTo_:function(e,t){let n=ii(e,"broadcastTo","x");const r=n.shape;if(me(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Tl(n,e)}const s=n.shape,i=Array.from(t);for(let l=t.length-1;l>=0;l--)if(s[l]===t[l])i[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Na(n);const a={x:n},o={reps:i};return Ys.runKernel(Ir,a,o)}});const jl=li({ceil_:function(e){const t={x:ii(e,"x","ceil","float32")};return Ys.runKernel(Qe,t)}});const Hl=li({clipByValue_:function(e,t,n){const r=ii(e,"x","clipByValue");if(B(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Ha(r.shape,t,r.dtype);const s={x:r},i={clipValueMin:t,clipValueMax:n};return Ys.runKernel(Ze,s,i)}});const ql=li({concat1d_:function(e){return $l(e,0)}});const Kl=li({concat2d_:function(e,t){return $l(e,t)}});const Xl=li({concat3d_:function(e,t){return $l(e,t)}});const Yl=li({concat4d_:function(e,t){return $l(e,t)}});const Ql=li({conv2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],a=arguments.length>6?arguments[6]:void 0;const o=ii(e,"x","conv2d","float32"),l=ii(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Tl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),B(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),B(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),_l("conv2d",r,a);const h="NHWC"===s?u.shape[3]:u.shape[1];B(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),B(Sl(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),B(Cl(i),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),B(Cl(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=Ys.runKernel(nt,d,p);return c?Tl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Zl=li({conv1d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,a=arguments.length>6?arguments[6]:void 0;const o=ii(e,"x","conv1d"),l=ii(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Tl(o,[1,o.shape[0],o.shape[1]])),B(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),B(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),_l("conv1d",r,a),B(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),B(Sl(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),B(Cl(i),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),B(Cl(n),(()=>"Error in conv1D: Stride should be larger than 0.")),B("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Tl(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Tl(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Ql(d,h,[1,n],r,"NHWC",[1,i],a);return Tl(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const Jl=li({conv2DBackpropInput_:function(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",a=arguments.length>6?arguments[6]:void 0;B(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Tl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),B(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),B(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),B(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];B(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),B(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),_l("conv2dDerInput",s,a);const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},f=Ys.runKernel(st,d,p);return u?Tl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const eu=li({conv2dTranspose_:function(e,t,n,r,s,i){const a=ii(e,"x","conv2dTranspose"),o=ii(t,"filter","conv2dTranspose");return Jl(n,a,o,r,s,"NHWC",i)}});const tu=li({conv3d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const a=ii(e,"x","conv3d"),o=ii(t,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=Tl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),B(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),B(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),B(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),B(Sl(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),B("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),B(Cl(i),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),B(Cl(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:i},d=Ys.runKernel(it,c,h);return u?Tl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const nu=li({conv3DBackpropInput_:function(e,t,n,r,s){B(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,a=t,o=!1;4===t.rank&&(o=!0,a=Tl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const l=i[4],u=a.shape[4];B(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),B(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),B(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),B(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),B(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:s,strides:r,inputShape:i},d=Ys.runKernel(ot,c,h);return o?Tl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const ru=li({conv3dTranspose_:function(e,t,n,r,s){const i=ii(e,"x","conv3dTranspose"),a=ii(t,"filter","conv3dTranspose");return nu(n,i,a,r,s)}});const su=li({cos_:function(e){const t={x:ii(e,"x","cos","float32")};return Ys.runKernel(lt,t)}});const iu=li({cosh_:function(e){const t={x:ii(e,"x","cosh","float32")};return Ys.runKernel(ut,t)}});const au=li({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s={x:ii(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:r};return Ys.runKernel(ct,s,i)}});const ou=li({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s={x:ii(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return Ys.runKernel(ht,s,i)}});const lu=li({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=ii(e,"x","denseBincount"),i=ii(t,"weights","denseBincount");B("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),B(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),B(n>=0,(()=>`size must be non-negative, but got ${n}.`)),B(i.size===s.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`));const a={x:s,weights:i},o={size:n,binaryOutput:r};return Ys.runKernel(pt,a,o)}});const uu=li({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const r=ii(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];B(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),B(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),B(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),B(a%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Ys.runKernel(ft,o,l)}});const cu=li({depthwiseConv2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],a=arguments.length>6?arguments[6]:void 0;const o=ii(e,"x","depthwiseConv2d","float32"),l=ii(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Tl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),B(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),B(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];B(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),_l("depthwiseConv2d",r,a);const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=Ys.runKernel(mt,d,p);return c?Tl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const hu=li({diag_:function(e){const t={x:ii(e,"x","diag")};return Ys.runKernel(bt,t)}});const du=li({dilation2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const a=ii(e,"x","dilation2d"),o=ii(t,"filter","dilation2d");B(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),B(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),B("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=Tl(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),B(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=Ys.runKernel(vt,c,h);return u?Tl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const pu=li({equal_:function(e,t){let n=ii(e,"a","equal","string_or_numeric"),r=ii(t,"b","equal","string_or_numeric");[n,r]=Ws(n,r),eo(n.shape,r.shape);const s={a:n,b:r};return Ys.runKernel(Nt,s)}});const fu=li({where_:function(e,t,n){const r=ii(t,"a","where"),s=ii(n,"b","where"),i=ii(e,"condition","where","bool"),a=eo(eo(i.shape,r.shape),s.shape),o={condition:Gl(i,a),t:Gl(r,a),e:Gl(s,a)};return Ys.runKernel(Qn,o)}});const mu=li({divNoNan_:function(e,t){let n=ii(e,"a","div"),r=ii(t,"b","div");[n,r]=Ws(n,r);const s=Ra(n,r),i=Ma(s),a=pu(r,i);return fu(a,i,s)}});const gu=li({dot_:function(e,t){const n=ii(e,"t1","dot"),r=ii(t,"t2","dot");B((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(B(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const e=Tl(n,[1,-1]),t=Tl(r,[-1,1]),s=Al(e,t);return Tl(s,[])}if(1===n.rank&&2===r.rank){const e=Tl(n,[1,-1]),t=Tl(r,[r.shape[0],r.shape[1]]),s=Al(e,t);return Tl(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Tl(r,[-1,1]),t=Al(n,e);return Tl(t,[t.size])}{const e=Tl(r,[r.shape[0],r.shape[1]]);return Al(n,e)}}});const yu=li({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];const s=n.map(((e,t)=>ii(e,`tensors${t}`,"einsum"))),i={equation:e};return Ys.runKernel(Ct,s,i)}});const bu=li({elu_:function(e){const t={x:ii(e,"x","elu","float32")};return Ys.runKernel(It,t)}});const vu=li({ensureShape_:function(e,t){const n=ii(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});const xu=li({erf_:function(e){let t=ii(e,"x","erf");B("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ta(t,"float32"));const n={x:t};return Ys.runKernel(Tt,n)}});function wu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ku(e,t,n){const r=e.length+t.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[i++]):s.push(t[a++]);return s}function Su(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Cu(e,t){return ku(e,t.map((e=>1)),t)}function Iu(e,t,n){B(wu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function _u(e,t){if(wu(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Tu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Nu(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Eu=li({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:ii(e,"x","max")},s={reductionIndices:t,keepDims:n};return Ys.runKernel(an,r,s)}});const $u=li({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:ii(e,"x","min")},s={axis:t,keepDims:n};return Ys.runKernel(fn,r,s)}});const Au=li({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=ii(e,"x","sum");"bool"===r.dtype&&(r=Ta(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return Ys.runKernel(ar,s,i)}});function Ru(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return Qa(e);if(1!==e.rank&&null===n)return Ru(Tl(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Au(Qa(e),n);if(t===1/0)return Eu(Qa(e),n);if(t===-1/0)return $u(Qa(e),n);if("euclidean"===t||2===t)return Da(Au(Ka(Qa(e),za(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Eu(Au(Qa(e),n[0]),n[1]-1);if(t===1/0)return Eu(Au(Qa(e),n[1]),n[0]);if(t===-1/0)return $u(Au(Qa(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Da(Au(Fa(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Ou=li({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Ru(e=ii(e,"x","norm"),t,n);let i=s.shape;if(r){const t=Q(n,e.shape);i=Cu(s.shape,t)}return Tl(s,i)}});const Du=li({euclideanNorm_:function(e){return Ou(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});const Fu=li({exp_:function(e){const t={x:ii(e,"x","exp")};return Ys.runKernel(Et,t)}});const Mu=li({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=ii(e,"x","expandDims","string_or_numeric");B(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Ys.runKernel($t,r,s)}});const Pu=li({expm1_:function(e){const t={x:ii(e,"x","expm1")};return Ys.runKernel(At,t)}});const zu=li({tile_:function(e,t){const n=ii(e,"x","tile","string_or_numeric");B(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Ys.runKernel(Ir,r,s)}});const Lu=li({eye_:function(e,t,n){null==t&&(t=e);const r=_a([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),s=e<=t?e:t;for(let a=0;a<s;++a)r.set(1,a,a);const i=Tl(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return zu(Mu(i,0),[n[0],1,1]);if(2===n.length)return zu(Mu(Mu(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return zu(Mu(Mu(Mu(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const Bu=li({floor_:function(e){const t={x:ii(e,"x","floor","float32")};return Ys.runKernel(Ft,t)}});const Vu=li({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const s={x:ii(e,"x","gather"),indices:ii(t,"indices","gather","int32")},i={axis:n,batchDims:r};return Ys.runKernel(zt,s,i)}});const Wu=li({greater_:function(e,t){let n=ii(e,"a","greater","string_or_numeric"),r=ii(t,"b","greater","string_or_numeric");[n,r]=Ws(n,r),eo(n.shape,r.shape);const s={a:n,b:r};return Ys.runKernel(Bt,s)}});const Uu=li({greaterEqual_:function(e,t){let n=ii(e,"a","greaterEqual","string_or_numeric"),r=ii(t,"b","greaterEqual","string_or_numeric");[n,r]=Ws(n,r),eo(n.shape,r.shape);const s={a:n,b:r};return Ys.runKernel(Vt,s)}});const Gu=li({imag_:function(e){const t={input:ii(e,"input","imag")};return Ys.runKernel(Gt,t)}});const ju=li({isFinite_:function(e){const t={x:ii(e,"x","isFinite")};return Ys.runKernel(jt,t)}});const Hu=li({isInf_:function(e){const t={x:ii(e,"x","isInf")};return Ys.runKernel(Ht,t)}});const qu=li({isNaN_:function(e){const t={x:ii(e,"x","isNaN")};return Ys.runKernel(qt,t)}});const Ku=li({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:ii(e,"x","leakyRelu")},r={alpha:t};return Ys.runKernel(Kt,n,r)}});const Xu=li({less_:function(e,t){let n=ii(e,"a","less","string_or_numeric"),r=ii(t,"b","less","string_or_numeric");[n,r]=Ws(n,r),eo(n.shape,r.shape);const s={a:n,b:r};return Ys.runKernel(Xt,s)}});const Yu=li({lessEqual_:function(e,t){let n=ii(e,"a","lessEqual","string_or_numeric"),r=ii(t,"b","lessEqual","string_or_numeric");[n,r]=Ws(n,r),eo(n.shape,r.shape);const s={a:n,b:r};return Ys.runKernel(Yt,s)}});function Qu(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Ys.runKernel(Qt,{},r)}const Zu=li({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const i=ii(e,"x","localResponseNormalization");B(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),B(H(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=Tl(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:t,bias:n,alpha:r,beta:s},c=Ys.runKernel(rn,l,u);return o?Tl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Ju=li({log_:function(e){const t={x:ii(e,"x","log","float32")};return Ys.runKernel(Zt,t)}});const ec=li({log1p_:function(e){const t={x:ii(e,"x","log1p")};return Ys.runKernel(Jt,t)}});const tc=li({neg_:function(e){const t={x:ii(e,"x","neg")};return Ys.runKernel(xn,t)}});const nc=li({softplus_:function(e){const t={x:ii(e,"x","softplus")};return Ys.runKernel(sr,t)}});const rc=li({logSigmoid_:function(e){const t=ii(e,"x","logSigmoid");return Pa((e=>({value:tc(nc(tc(e))),gradFunc:t=>Oa(t,Rl(tc(e)))})))(t)}});const sc=li({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=ii(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Pa(((e,n)=>{const r=Eu(e,t,!0),s=Xa(e,r),i=Xa(Ta(s,"float32"),Ju(Au(Fu(s),t,!0)));n([i]);return{value:i,gradFunc:(e,n)=>{const[r]=n,s=Fu(r);return Xa(e,Oa(Au(e,t,!0),s))}}}));return r(n)}});const ic=li({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=ii(e,"x","logSumExp"),s=Q(t,r.shape),i=Eu(r,s,!0),a=Xa(r,i),o=Fu(a),l=Au(o,s),u=Ju(l),c=$a(Tl(i,u.shape),u);if(n){const e=Cu(c.shape,s);return Tl(c,e)}return c}});const ac=li({logicalAnd_:function(e,t){const n=ii(e,"a","logicalAnd","bool"),r=ii(t,"b","logicalAnd","bool");eo(n.shape,r.shape);const s={a:n,b:r};return Ys.runKernel(en,s)}});const oc=li({logicalNot_:function(e){const t={x:ii(e,"x","logicalNot","bool")};return Ys.runKernel(tn,t)}});const lc=li({logicalOr_:function(e,t){const n=ii(e,"a","logicalOr","bool"),r=ii(t,"b","logicalOr","bool");eo(n.shape,r.shape);const s={a:n,b:r};return Ys.runKernel(nn,s)}});const uc=li({logicalXor_:function(e,t){const n=ii(e,"a","logicalXor","bool"),r=ii(t,"b","logicalXor","bool");return eo(n.shape,r.shape),ac(lc(e,t),oc(ac(e,t)))}}),cc=2147483648;const hc=li({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const r=ii(e,"sortedSequence","searchSorted"),s=ii(t,"values","searchSorted"),i=r.shape[r.shape.length-1],a=s.shape[s.shape.length-1],o=Tl(r,[-1,i]),l=Tl(s,[-1,a]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(U(l.shape)>=cc)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=cc)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return Ys.runKernel(Yn,u,c)}});function dc(e,t){return hc(e,t,"left")}const pc=li({maxPool_:function(e,t,n,r,s){const i=ii(e,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=Tl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),B(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),B(Sl(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),_l("maxPool",r,s);const l={x:a},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Ys.runKernel(ln,l,u);return o?Tl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const fc=li({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const a=ii(e,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=Tl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),B(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),B("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),_l("maxPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i},h=Ys.runKernel(cn,u,c);return l?Tl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const mc=li({maxPoolWithArgmax_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const i={x:ii(e,"x","maxPoolWithArgmax")},a={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=Ys.runKernel(dn,i,a);return{result:o[0],indexes:o[1]}}});const gc=li({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:ii(e,"x","mean")},s={axis:t,keepDims:n};return Ys.runKernel(pn,r,s)}});function yc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(me(e),"complex64"===t){const t=yc(e,"float32"),n=yc(e,"float32");return ui(t,n)}const n=pe(U(e),t);return Ys.makeTensor(n,e,t)}function bc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(me(e),"complex64"===t){const t=bc(e,"float32"),n=yc(e,"float32");return ui(t,n)}const n=de(U(e),t);return Ys.makeTensor(n,e,t)}function vc(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=ii(e,"x","meshgrid",e instanceof Es?e.dtype:"float32");if(void 0===t)return[r];let s=ii(t,"y","meshgrid",t instanceof Es?t.dtype:"float32");const i=U(r.shape),a=U(s.shape);return"xy"===n?(r=Tl(r,[1,-1]),s=Tl(s,[-1,1]),[Al(bc([a,1],r.dtype),r),Al(s,bc([1,i],s.dtype))]):(r=Tl(r,[-1,1]),s=Tl(s,[1,-1]),[Al(r,bc([1,a],r.dtype)),Al(bc([i,1],s.dtype),s)])}const xc=li({minimum_:function(e,t){let n=ii(e,"a","minimum"),r=ii(t,"b","minimum");[n,r]=Ws(n,r),"bool"===n.dtype&&(n=Ta(n,"int32"),r=Ta(r,"int32")),eo(n.shape,r.shape);const s={a:n,b:r};return Ys.runKernel(mn,s)}});const wc=li({mirrorPad_:function(e,t,n){B("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=ii(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");B(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let o=0;o<r.rank;o++)B(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),B(t[o][0]>=0&&t[o][0]<=r.shape[o]-s&&t[o][1]>=0&&t[o][1]<=r.shape[o]-s,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-s} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},a={x:r};return Ys.runKernel(gn,a,i)}});const kc=li({mod_:function(e,t){let n=ii(e,"a","mod"),r=ii(t,"b","mod");[n,r]=Ws(n,r);const s={a:n,b:r};return Ys.runKernel(yn,s)}});const Sc=li({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=Q(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=ii(e,"x","moments")).shape),r=gc(e,n,t);let s=r.shape;t||(s=Cu(r.shape,n));const i=Fa(Xa(Ta(e,"float32"),Tl(r,s)));return{mean:r,variance:gc(i,n,t)}}});const Cc=li({multiRNNCell_:function(e,t,n,r){const s=ii(t,"data","multiRNNCell"),i=ai(n,"c","multiRNNCell"),a=ai(r,"h","multiRNNCell");let o=s;const l=[];for(let h=0;h<e.length;h++){const t=e[h](o,i[h],a[h]);l.push(t[0]),l.push(t[1]),o=t[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}});const Ic=li({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=ii(e,"logits","multinomial"),i=s.size,a=s.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);n=n||Math.random();const o={logits:1===a?Tl(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=Ys.runKernel(bn,o,l);return 1===a?Tl(u,[u.size]):u}});const _c=li({notEqual_:function(e,t){let n=ii(e,"a","notEqual","string_or_numeric"),r=ii(t,"b","notEqual","string_or_numeric");[n,r]=Ws(n,r),eo(n.shape,r.shape);const s={a:n,b:r};return Ys.runKernel(wn,s)}});const Tc=li({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:ii(e,"indices","oneHot","int32")},a={dtype:s,depth:t,onValue:n,offValue:r};return Ys.runKernel(_n,i,a)}});const Nc=li({onesLike_:function(e){const t={x:ii(e,"x","onesLike")};return Ys.runKernel(In,t)}});const Ec=li({outerProduct_:function(e,t){const n=ii(e,"v1","outerProduct"),r=ii(t,"v2","outerProduct");B(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=Tl(n,[-1,1]),i=Tl(r,[1,-1]);return Al(s,i)}});const $c=li({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=ii(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},i={x:r};return Ys.runKernel(Nn,i,s)}});const Ac=li({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return B(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),$c(e,[t],n)}});const Rc=li({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return B(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),$c(e,t,n)}});const Oc=li({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return B(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),$c(e,t,n)}});const Dc=li({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return B(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),$c(e,t,n)}});const Fc=li({spaceToBatchND_:function(e,t,n){const r=ii(e,"x","spaceToBatchND");B(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),B(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),B(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},i={blockShape:t,paddings:n};return Ys.runKernel(or,s,i)}});const Mc=li({pool_:function(e,t,n,r,s,i,a){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=ii(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Tl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),B(Sl(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const c=pl(l.shape,t,i,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),i=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],i[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),i=e.concat(r,s),a=t.map(((e,t)=>(e-i[t]%e)%e)),o=s.map(((e,t)=>e+a[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,a[t]]));return[l,u]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",y=p?l:Fc(l,h,f),b=("avg"===n?()=>Nl(y,t,i,g,a):()=>pc(y,t,i,g,a))(),v=p?b:Ml(b,h,m);return u?Tl(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});const Pc=li({prelu_:function(e,t){const n={x:ii(e,"x","prelu"),alpha:ii(t,"alpha","prelu")};return Ys.runKernel($n,n)}});const zc=li({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=ii(e,"x","prod");"bool"===r.dtype&&(r=Ta(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return Ys.runKernel(An,s,i)}});const Lc=li({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map(((e,t)=>ii(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:ii(t,"paramsDenseValues","raggedGather"),indices:ii(n,"indices","raggedGather","int32")},i={outputRaggedRank:r},a=Ys.runKernel(Rn,s,i);return{outputNestedSplits:a.slice(0,a.length-1),outputDenseValues:a[a.length-1]}}});const Bc=li({raggedRange_:function(e,t,n){const r=ii(e,"starts","raggedRange"),s={starts:r,limits:ii(t,"limits","raggedRange",r.dtype),deltas:ii(n,"deltas","raggedRange",r.dtype)},i=Ys.runKernel(On,s);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}});const Vc=li({raggedTensorToTensor_:function(e,t,n,r,s){const i=ii(e,"shape","raggedTensorToTensor","int32"),a=ii(t,"values","raggedTensorToTensor"),o={shape:i,values:a,defaultValue:ii(n,"defaultValue","raggedTensorToTensor",a.dtype),rowPartitionTensors:r.map(((e,t)=>ii(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:s};return Ys.runKernel(Dn,o,l)}});const Wc=li({rand_:function(e,t,n){me(e);const r=U(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let i=0;i<r;i++)s[i]=t();return Ys.makeTensor(s,e,n)}});var Uc=n(334);class Gc{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=Uc.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class jc{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Uc.alea(s.toString()),this.randn=new Gc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,i;for(;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-i+Math.log(i)),s=this.randu(),s<t||Math.log(s)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Hc{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Uc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const qc=li({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;if(me(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const i=new jc(t,n,r,s),a=_a(e,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});const Kc=li({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if(me(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new Gc(t,n,r,!1,s),a=_a(e,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});const Xc=li({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Kc(e,0,1,t,n)}});const Yc=li({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;me(e);const i=_a(e,r),a=new Hc(t,n,null,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Qc=li({randomUniformInt_:function(e,t,n,r){return Yc(e,t,n,"int32",r)}});function Zc(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Ys.runKernel(Fn,{},s)}const Jc=li({real_:function(e){const t={input:ii(e,"input","real")};return Ys.runKernel(Mn,t)}});const eh=li({reciprocal_:function(e){const t={x:ii(e,"x","reciprocal")};return Ys.runKernel(Pn,t)}});const th=li({relu_:function(e){const t={x:ii(e,"x","relu")};return Ys.runKernel(zn,t)}});const nh=li({relu6_:function(e){const t={x:ii(e,"x","relu6")};return Ys.runKernel(Gn,t)}});const rh=li({reverse_:function(e,t){const n={x:ii(e,"x","reverse")},r={dims:t};return Ys.runKernel(jn,n,r)}});const sh=li({reverse1d_:function(e){const t=ii(e,"x","reverse");return B(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),rh(t,0)}});const ih=li({reverse2d_:function(e,t){const n=ii(e,"x","reverse");return B(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),rh(n,t)}});const ah=li({reverse3d_:function(e,t){const n=ii(e,"x","reverse");return B(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),rh(n,t)}});const oh=li({reverse4d_:function(e,t){const n=ii(e,"x","reverse");return B(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),rh(n,t)}});const lh=li({round_:function(e){const t={x:ii(e,"x","round")};return Ys.runKernel(Hn,t)}});const uh=li({rsqrt_:function(e){const t={x:ii(e,"x","rsqrt","float32")};return Ys.runKernel(qn,t)}});const ch=li({selu_:function(e){const t={x:ii(e,"x","selu")};return Ys.runKernel(Zn,t)}});const hh=li({separableConv2d_:function(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const o=ii(e,"x","separableConv2d"),l=ii(t,"depthwiseFilter","separableConv2d"),u=ii(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Tl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");B(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),B(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),B(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),B(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),B(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];B(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=cu(c,l,r,s,a,i),m=Ql(f,u,1,"valid",a);return h?Tl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const dh=async function(e,t){const n=ii(e,"x","setdiff1d"),r=ii(t,"y","setdiff1d");B(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),B(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),B(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),i=await r.data(),a=new Set(i);let o=0;for(let c=0;c<s.length;c++)a.has(s[c])||o++;const l=new Is([o],n.dtype),u=new Is([o],"int32");for(let c=0,h=0;c<s.length;c++)a.has(s[c])||(l.values[h]=s[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]};const ph=li({sign_:function(e){const t={x:ii(e,"x","sign")};return Ys.runKernel(nr,t)}});const fh=li({sin_:function(e){const t={x:ii(e,"x","sin","float32")};return Ys.runKernel(er,t)}});const mh=li({sinh_:function(e){const t={x:ii(e,"x","sinh")};return Ys.runKernel(tr,t)}});const gh=li({slice1d_:function(e,t,n){const r=ii(e,"x","slice1d");return B(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Ol(r,[t],[n])}});const yh=li({slice2d_:function(e,t,n){const r=ii(e,"x","slice2d");return B(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Ol(r,t,n)}});const bh=li({slice3d_:function(e,t,n){const r=ii(e,"x","slice3d");return B(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Ol(r,t,n)}});const vh=li({slice4d_:function(e,t,n){const r=ii(e,"x","slice4d");return B(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Ol(r,t,n)}});const xh=li({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=ii(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Ys.runKernel(ur,r,s)}});const wh=li({fft_:function(e){B("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Ys.runKernel(Rt,t)}});const kh=li({ifft_:function(e){B("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Ys.runKernel(Ut,t)}});const Sh=li({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Tl(e,[n,t]);r=kh(s)}else{const s=[n,2*(t-1)],i=Tl(Jc(e),[n,t]),a=Tl(Gu(e),[n,t]),o=rh(Ol(i,[0,1],[n,t-2]),1),l=Oa(rh(Ol(a,[0,1],[n,t-2]),1),za(-1)),u=$l([i,o],1),c=$l([a,l],1),h=Tl(ui(u,c),[s[0],s[1]]);r=kh(h)}if(r=Jc(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Tl(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const Ch=li({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r={x:ii(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Ys.runKernel(lr,r,s)}});const Ih=li({rfft_:function(e,t){B("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,s=Ol(e,r,i),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=$l([e,yc(r)],e.shape.length-1),n=t}else s=e;const i=Ma(s),a=Tl(ui(s,i),[r,n]),o=wh(a),l=Math.floor(n/2)+1,u=Jc(o),c=Gu(o),h=Ch(u,[l,n-l],u.shape.length-1),d=Ch(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,Tl(ui(h[0],d[0]),p)}});const _h=li({squaredDifference_:function(e,t){let n=ii(e,"a","squaredDifference"),r=ii(t,"b","squaredDifference");[n,r]=Ws(n,r),eo(n.shape,r.shape);const s={a:n,b:r};return Ys.runKernel(mr,s,{})}});const Th=li({squeeze_:function(e,t){const n=ii(e,"x","squeeze","string_or_numeric");return Tl(n,Z(n.shape,t).newShape)}});const Nh=li({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=ai(e,"tensors","stack","string_or_numeric");B(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&B(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Ys.runKernel(Tn,r,s)}});const Eh=li({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:ii(e,"x","step")},r={alpha:t};return Ys.runKernel(Or,n,r)}});const $h=li({stridedSlice_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const u={x:ii(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return Ys.runKernel(br,u,c)}});const Ah=li({tan_:function(e){const t={x:ii(e,"x","tan","float32")};return Ys.runKernel(Sr,t)}});function Rh(e,t){W(e);const n=ni(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ci(e,null,n,t)}function Oh(e,t,n){if(W(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ni(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ci(e,t,r,n)}function Dh(e,t,n){if(W(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=ni(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ci(e,t,r,n)}function Fh(e,t,n){if(W(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=ni(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ci(e,t,r,n)}function Mh(e,t,n){if(W(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=ni(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ci(e,t=t||r,r,n)}function Ph(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(i+" update.rank != "+(s+e.length-r));for(let a=0;a<s;++a)if(n.shape[a]!==t.shape[a])throw new Error(i+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<n.rank-s;++a)if(n.shape[a+s]!==e[a+r])throw new Error(i+` updates.shape[${a+s}] (${n.shape[a+s]}) != shape[${a+s}] (${e[a+s]})`)}function zh(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Ph(n,t,e)}function Lh(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,i=n.length;let a=1;for(let l=s;l<i;++l)a*=n[l];const o=s<1?1:s;return{sliceRank:s,numUpdates:U(t.shape)/o,sliceSize:a,strides:[...le(n.slice(0,s)),1],outputSize:U(n)}}const Bh=li({tensorScatterUpdate_:function(e,t,n){const r=ii(e,"tensor","tensorScatterupdate"),s=ii(t,"indices","tensorScatterupdate","int32"),i=ii(n,"updates","tensorScatterupdate");if(zh(i,s,r.shape),r.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${i.dtype}.`);const a={tensor:r,indices:s,updates:i};return Ys.runKernel(Xn,a,{})}});const Vh=li({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=ii(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const i={x:r},a={k:t,sorted:n},[o,l]=Ys.runKernel(_r,i,a);return{values:o,indices:l}}});const Wh=li({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if(me(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new Gc(t,n,r,!0,s),a=_a(e,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});const Uh=li({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=ii(e,"x","unique","string_or_numeric");B(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[i,a]=Ys.runKernel(Er,r,s);return{values:i,indices:a}}});const Gh=li({unsortedSegmentSum_:function(e,t,n){const r=ii(e,"x","unsortedSegmentSum"),s=ii(t,"segmentIds","unsortedSegmentSum","int32");B(H(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},a={numSegments:n};return Ys.runKernel(Ar,i,a)}});const jh=li({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=ii(e,"x","unstack","string_or_numeric");B(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Ys.runKernel($r,r,s)}});function Hh(e,t){return hc(e,t,"right")}function qh(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return Ys.makeVariable(e,t,n,r)}function Kh(e,t){const n=[];for(let i=0;i<t.length;i++)t[i]&&n.push(i);const r=_a(e,"int32"),s=_a([n.length,e.length],"int32");for(let i=0;i<n.length;i++){const t=r.indexToLoc(n[i]),a=i*e.length;s.values.set(t,a)}return s.toTensor()}const Xh=async function(e){const t=ii(e,"condition","whereAsync","bool"),n=await t.data(),r=Kh(t.shape,n);return e!==t&&t.dispose(),r};const Yh=async function(e,t,n){const r=ii(e,"tensor","boolMask"),s=ii(t,"mask","boolMask","bool"),i=null==n?0:n,a=s.rank,o=r.shape;B(a>0,(()=>"mask cannot be scalar")),V(o.slice(i,i+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=i;m<i+a;m++)l*=o[m];const u=o.slice(0,i).concat([l],o.slice(i+a)),c=Tl(r,u),h=Tl(s,[-1]),d=await Xh(h),p=Th(d,[1]),f=Vu(c,p,i);return e!==r&&r.dispose(),t!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f};const Qh=li({transpose_:function(e,t,n){const r=ii(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),B(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{B(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},i={perm:t};return"complex64"===r.dtype?gi((()=>{let e=Jc(r),t=Gu(r);return e=Ys.runKernel(Nr,{x:e},i),t=Ys.runKernel(Nr,{x:t},i),n&&(t=tc(t)),ui(e,t)})):Ys.runKernel(Nr,s,i)}});const Zh=li({movingAverage_:function(e,t,n,r){let s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const i=ii(e,"v","movingAverage"),a=ii(t,"x","movingAverage"),o=ii(n,"decay","movingAverage");var l,u;u=a,B((l=i).dtype===u.dtype,(()=>`The dtypes of the first(${l.dtype}) and second(${u.dtype}) input must match`)),B(j(i.shape,a.shape),(()=>"Shape mismatch in v and x"));const c=za(1),h=Xa(c,o);let d=Oa(Xa(a,i),h);if(s){B(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=ii(r,"step","movingAverage");d=Ra(d,Xa(c,Ka(o,e)))}return $a(i,d)}});const Jh=li({scatterND_:function(e,t,n){me(n);const r=ii(e,"indices","scatterND","int32"),s=ii(t,"updates","scatterND");zh(s,r,n);const i={indices:r,updates:s},a={shape:n};return Ys.runKernel(Kn,i,a)}});const ed=li({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;me(n);const s=ii(e,"sparseIndices","sparseToDense","int32"),i=ii(t,"sparseValues","sparseToDense","string_or_numeric"),a=ii(r,"defaultValue","sparseToDense",i.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const a=t.size;if(0!==t.rank&&(1!==t.rank||a!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,i,n,a);const o={sparseIndices:s,sparseValues:i,defaultValue:a},l={outputShape:n};return Ys.runKernel(fr,o,l)}});const td=li({gatherND_:function(e,t){const n=ii(t,"indices","gatherND","int32"),r={params:ii(e,"x","gatherND","string_or_numeric"),indices:n};return Ys.runKernel(Lt,r)}});const nd=li({dropout_:function(e,t,n,r){const s=ii(e,"x","dropout");if(B("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),B(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Es?s.clone():s;const i=function(e,t){if(null==t)return e.shape.slice();if(j(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),a=1-t,o=Ra(Bu($a(Yc(i,0,1,"float32",r),a)),a);return Oa(s,o)}});function rd(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function sd(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let i=0;i<e;++i){const a=2*Math.PI*i/(e+r-1);s[i]=t-n*Math.cos(a)}return Rh(s,"float32")}const id=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=ii(e,"predictions","inTopK"),s=ii(t,"targets","inTopK");B(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),B(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),V(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];B(n>0&&n<=i,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${n}`));const a=await r.data(),o=await s.data(),[l,u]=[a.length/i,i],c=J("bool",l);for(let h=0;h<l;h++){const e=h*u,t=a.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),c[h]=0;for(let s=0;s<n;s++)if(r[s].index===o[h]){c[h]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),hi(c,s.shape,"bool")};const ad=li({conv2DBackpropFilter_:function(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",a=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Tl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Tl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),B(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),B(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),B(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];B(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),B(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),_l("conv2dDerFilter",s,a);const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:n};return Ys.runKernel(rt,h,d)}});function od(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Oa(e,Eh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ld(e,t){let n=t;const r=Ja(e.shape,t.shape);return r.length>0&&(n=Au(n,r)),Tl(n,e.shape)}function ud(e,t,n,r){if("linear"===t)return e;if("relu"===t)return th(e);if("elu"===t)return bu(e);if("relu6"===t)return nh(e);if("prelu"===t)return Pc(e,n);if("leakyrelu"===t)return Ku(e,r);if("sigmoid"===t)return Rl(e);throw new Error(`Unknown fused activation ${t}.`)}const cd=(e,t)=>!(e>0)||"linear"===t;const hd=li({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:s,dataFormat:i="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}=e;if(u=u||"linear",!1===cd(Ys.state.gradientDepth,u)){B("NHWC"===i,(()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let e=Ql(t,n,r,s,i,a,o);return null!=l&&(e=$a(e,l)),ud(e,u,c,h)}const d=ii(t,"x","conv2d","float32"),p=ii(n,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=Tl(d,[1,d.shape[0],d.shape[1],d.shape[2]])),B(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),B(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),_l("fused conv2d",s,o);const g="NHWC"===i?f.shape[3]:f.shape[1];B(p.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${p.shape[2]}.`)),B(Sl(r,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`));const y=ml(f.shape,p.shape,r,a,s,o);let b,v;if(null!=l&&(b=ii(l,"bias","fused conv2d"),[b]=Ws(b,d),"NHWC"===i?eo(y.outShape,b.shape):(B(b.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`)),B(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],(()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${y.outChannels})`)))),null!=c){const e=c.shape;if(B(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)B(1===e[0]||e[0]===y.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${y.outChannels}).`));else if(3===e.length)try{eo(e,y.outShape)}catch(S){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(t)}v=ii(c,"prelu weights","fused conv2d")}const x=(e,t)=>{B("NHWC"===i,(()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`));const[n,o,l,c]=t,h=od(e,l,u);B(kl(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const d=[Jl(o.shape,h,n,r,s),ad(o,h,n.shape,r,s)];if(null!=c){const e=ld(c,h);d.push(e)}return d},w={x:f,filter:p,bias:b,preluActivationWeights:v},k={strides:r,pad:s,dataFormat:i,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:h};if(null==l){const e=Pa(((e,t,n)=>{let r=Ys.runKernel(Pr,w,k);return n([t,e,r]),m&&(r=Tl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,p)}{const e=Pa(((e,t,n,r)=>{let s=Ys.runKernel(Pr,w,k);return r([t,e,s,n]),m&&(s=Tl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(f,p,b)}}});const dd=li({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],a=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Tl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Tl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:n};return Ys.runKernel(gt,u,c)}});const pd=li({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],a=arguments.length>6?arguments[6]:void 0,o=t,l=!1;3===t.rank&&(l=!0,o=Tl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:e},h=Ys.runKernel(yt,u,c);return l?Tl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const fd=li({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:s,dataFormat:i="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}=e;if(!1===cd(Ys.state.gradientDepth,u)){let e=cu(t,n,r,s,i,a,o);return null!=l&&(e=$a(e,l)),ud(e,u,c,h)}const d=ii(t,"x","depthwiseConv2d","float32"),p=ii(n,"filter","depthwiseConv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=Tl(d,[1,d.shape[0],d.shape[1],d.shape[2]])),B(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),B(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),B(f.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),B(Sl(r,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`)),_l("fused depthwiseConv2d",s,o);const g=ml(f.shape,p.shape,r,a,s,o,!0);let y,b;null!=l&&(y=ii(l,"bias","fused conv2d"),[y]=Ws(y,d),eo(g.outShape,y.shape)),null!=c&&(b=ii(c,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{B(kl(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[n,i,l,c]=t,h=od(e,l,u),d=pd(i.shape,h,n,r,s,a,o),p=dd(i,h,n.shape,r,s,a,o);if(null!=c){return[d,p,ld(y,h)]}return[d,p]},x={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:r,pad:s,dataFormat:i,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:h};if(null==l){const e=Pa(((e,t,n)=>{let r=Ys.runKernel(zr,x,w);return n([t,e,r]),m&&(r=Tl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,p)}{const e=Pa(((e,t,n,r)=>{let s=Ys.runKernel(zr,x,w);return r([t,e,s,n]),m&&(s=Tl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(f,p,y)}}});const md=li({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:s=!1,bias:i,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:l=.2}=e;if(!1===cd(Ys.state.gradientDepth,a)){let e=Al(t,n,r,s);return null!=i&&(e=$a(e,i)),ud(e,a,o,l)}let u=ii(t,"a","fused matMul"),c=ii(n,"b","fused matMul");[u,c]=Ws(u,c);const h=r?u.shape[u.rank-2]:u.shape[u.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],f=s?c.shape[c.rank-2]:c.shape[c.rank-1],m=u.shape.slice(0,-2),g=c.shape.slice(0,-2),y=U(m),b=U(g);B(h===d,(()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${r} and transposeB=${s} must match.`));const v=eo(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,f]),x=Tl(u,r?[y,h,p]:[y,p,h]),w=Tl(c,s?[b,f,d]:[b,d,f]);let k,S;null!=i&&(k=ii(i,"bias","fused matMul"),[k]=Ws(k,u),eo(v,k.shape)),null!=o&&(S=ii(o,"prelu weights","fused matMul"));const C=(e,t)=>{const[n,o,l,u]=t,c=od(Tl(e,l.shape),l,a);let h,d;if(r||s?!r&&s?(h=Al(c,o,!1,!1),d=Al(c,n,!0,!1)):r&&!s?(h=Al(o,c,!1,!0),d=Al(n,c,!1,!1)):(h=Al(o,c,!0,!0),d=Al(c,n,!0,!0)):(h=Al(c,o,!1,!0),d=Al(n,c,!0,!1)),null!=i){return[h,d,ld(u,c)]}return[h,d]},I={a:x,b:w,bias:k,preluActivationWeights:S},_={transposeA:r,transposeB:s,activation:a,leakyreluAlpha:l};if(null==i){const e=Pa(((e,t,n)=>{const r=Ys.runKernel(Mr,I,_);return n([e,t,r]),{value:Tl(r,v),gradFunc:C}}));return e(x,w)}{const e=Pa(((e,t,n,r)=>{const s=Ys.runKernel(Mr,I,_);return r([e,t,s,n]),{value:Tl(s,v),gradFunc:C}}));return e(x,w,k)}}});const gd=li({hammingWindow_:function(e){return sd(e,.54,.46)}});const yd=li({hannWindow_:function(e){return sd(e,.5,.5)}});const bd=li({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,i=0;const a=[];for(;i+t<=e.size;)a.push(Ol(e,i,t)),i+=n;if(r)for(;i<e.size;){const r=i+t-e.size,o=$l([Ol(e,i,t-r),Ha([r],s)]);a.push(o),i+=n}return 0===a.length?Oh([],[0,t]):Tl($l(a),[a.length,t])}});const vd=li({stft_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:yd;null==r&&(r=rd(t));const i=bd(e,t,n),a=Oa(i,s(t));return Ih(a,r)}});const xd=li({cropAndResize_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const a=ii(e,"image","cropAndResize"),o=ii(t,"boxes","cropAndResize","float32"),l=ii(n,"boxInd","cropAndResize","int32"),u=o.shape[0];B(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),B(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),B(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),B(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),B(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),B("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:a,boxes:o,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r};return Ys.runKernel(dt,c,h)}});const wd=li({flipLeftRight_:function(e){const t=ii(e,"image","flipLeftRight","float32");B(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Ys.runKernel(Dt,n,{})}});const kd=li({grayscaleToRGB_:function(e){const t=ii(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];B(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),B(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,zu(t,s)}});const Sd=li({rgbToGrayscale_:function(e){const t=ii(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];B(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),B(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,i=Ta(t,"float32"),a=Rh([.2989,.587,.114]);let o;switch(t.rank){case 2:o=yu("ij,j->i",i,a);break;case 3:o=yu("ijk,k->ij",i,a);break;case 4:o=yu("ijkl,l->ijk",i,a);break;case 5:o=yu("ijklm,m->ijkl",i,a);break;case 6:o=yu("ijklmn,n->ijklm",i,a);break;default:throw new Error("Not a valid tensor rank.")}return o=Mu(o,-1),Ta(o,s)}});const Cd=li({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=ii(e,"image","rotateWithOffset","float32");B(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},a={radians:t,fillValue:n,center:r};return Ys.runKernel(Fr,i,a)}});function Id(e,t,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=e.shape[0];return n=Math.min(n,a),B(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),B(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),B(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),B(1===t.rank,(()=>"scores must be a 1D tensor")),B(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),B(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}const _d=li({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const i=ii(e,"boxes","nonMaxSuppression","float32"),a=ii(t,"scores","nonMaxSuppression","float32"),o=Id(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return Ys.runKernel(kn,{boxes:i,scores:a},l)}});function Td(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}(e,t,n||Nd)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Nd(e,t){return e>t?1:e<t?-1:0}function Ed(e,t,n,r,s){return Rd(e,t,n,r,s,0)}function $d(e,t,n,r,s,i){return Rd(e,t,n,r,s,0,!1,i,!0)}function Ad(e,t,n,r,s,i){return Rd(e,t,n,r,s,i,!0)}function Rd(e,t,n,r,s,i){let a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const u=[];for(let g=0;g<t.length;g++)t[g]>s&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(Fd);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=t;if(n<s)break;let o=!1;for(let l=h.length-1;l>=a;--l){const n=Od(e,i,h[l]);if(n>=r){o=!0;break}if(t.score=t.score*Dd(r,c,n),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>s&&Td(u,t,Fd))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Od(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,u),g=Math.max(a,c),y=Math.min(o,h),b=Math.min(l,d),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function Dd(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Fd(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Md=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const i=ii(e,"boxes","nonMaxSuppressionAsync"),a=ii(t,"scores","nonMaxSuppressionAsync"),o=Id(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=Ed(u,c,n,r,s);return i!==e&&i.dispose(),a!==t&&a.dispose(),Rh(h,"int32")};const Pd=li({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const a=ii(e,"boxes","nonMaxSuppression"),o=ii(t,"scores","nonMaxSuppression"),l=Id(a,o,n,r,s,i);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u={boxes:a,scores:o},c={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i},h=Ys.runKernel(Cn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const zd=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const a=ii(e,"boxes","nonMaxSuppressionAsync"),o=ii(t,"scores","nonMaxSuppressionAsync"),l=Id(a,o,n,r,s,i);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Ad(c,h,n,r,s,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:Rh(d,"int32"),selectedScores:Rh(p)}};const Ld=li({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,i=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const a=ii(e,"boxes","nonMaxSuppression"),o=ii(t,"scores","nonMaxSuppression"),l=Id(a,o,n,r,s,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=Ys.runKernel(Sn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Bd=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,i=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const a=ii(e,"boxes","nonMaxSuppressionAsync"),o=ii(t,"scores","nonMaxSuppressionAsync"),l=Id(a,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:m}=$d(d,p,u,c,h,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:Rh(f,"int32"),validOutputs:za(m,"int32")}};const Vd=li({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=ii(e,"images","resizeBilinear");B(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),B(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),B(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=Tl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ys.runKernel(Wn,o,l);return a?Tl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Wd=li({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=ii(e,"images","resizeNearestNeighbor");B(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),B(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),B("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),B(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=Tl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ys.runKernel(Bn,o,l);return a?Tl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Ud=li({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=ii(e,"image","threshold"),i=s.shape[0]*s.shape[1];let a,o,l,u,c=Oa(Rh([r]),255);if(B(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),B(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),B("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),B("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[a,o,l]=Ch(s,[1,1,1],-1);const e=Oa(a,.2989),t=Oa(o,.587),n=Oa(l,.114);u=$a($a(e,t),n)}else u=e;if("otsu"===t){c=function(e,t){let n,r,s,i,a,o,l=Rh([-1]),u=Rh([0]),c=Rh([0]);for(let h=0;h<e.size-1;h++){n=Ol(e,0,h+1),r=Ol(e,h+1),a=Ra(Au(n),t),o=Ra(Au(r),t);const d=Au(Oa(n,Zc(0,n.size)));s=Ra(d,Au(n));const p=Ha(r.shape,n.size),f=$a(Zc(0,r.size),p),m=Oa(r,f);i=Ra(Au(m),Au(r));const g=Xa(s,i),y=Xa(s,i),b=Oa(a,o);c=Oa(Oa(b,g),y);const v=Wu(c,u);u=fu(v,c,u),l=fu(v,Rh([h]),l)}return l}(Vl(Ta(lh(u),"int32"),hi([]),256),i)}const h=n?Yu(u,c):Wu(u,c);return Ta(Oa(h,255),"int32")}});const Gd=li({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,i=arguments.length>5?arguments[5]:void 0;const a=ii(e,"image","transform","float32"),o=ii(t,"transforms","transform","float32");B(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),B(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),B(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return Ys.runKernel(Tr,l,u)}});const jd=li({bandPart_:function(e,t,n){const r=ii(e,"a","bandPart");B(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,a]=r.shape.slice(-2);let o,l;"number"===typeof t?(B(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),B(t<=i,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`)),o=ii(t<0?i:t,"numLower","bandPart")):(B("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=fu(Xu(t,0),i,xc(t,i))),"number"===typeof n?(B(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),B(n<=a,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`)),l=ii(n<0?a:n,"numUpper","bandPart")):(B("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=fu(Xu(n,0),a,xc(n,a)));const u=Tl(Zc(0,i,1,"int32"),[-1,1]),c=Zc(0,a,1,"int32"),h=Xa(u,c),d=ac(Yu(h,o),Uu(h,tc(l))),p=yc([i,a],r.dtype);return Tl(Nh(jh(Tl(r,[-1,i,a])).map((e=>fu(d,e,p)))),s)}});const Hd=li({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,B(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)B(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Ch(e,e.shape[0],0).map((e=>Th(e,[0])));B(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(Ys.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=Oa(Au(Oa(n[t],e)),n[t]);e=Xa(e,r)}return Ra(e,Ou(e,"euclidean"))})));return t?Nh(n,0):n}});function qd(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Ys.tidy((()=>{B(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Lu(n),i=Na(e);const a=Oh([[1]],[1,1]);let o=Na(a);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=i,l=o,u=s;[o,i,s]=Ys.tidy((()=>{const t=Ol(i,[e,e],[n-e,1]),l=Ou(t),u=Ol(i,[e,e],[1,1]),c=fu(Wu(u,0),Oh([[-1]]),Oh([[1]])),h=Xa(u,Oa(c,l)),d=Ra(t,h);o=1===d.shape[0]?Na(a):$l([a,Ol(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=tc(Ra(Al(c,h),l)),f=Ol(i,[e,0],[n-e,r]),m=Oa(p,o),g=Qh(o);if(0===e)i=Xa(f,Al(m,Al(g,f)));else{const t=Xa(f,Al(m,Al(g,f)));i=$l([Ol(i,[0,0],[e,r]),t],0)}const y=Qh(m),b=Ol(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Xa(b,Al(Al(b,o),y));else{const t=Xa(b,Al(Al(b,o),y));s=$l([Ol(s,[0,0],[n,e]),t],1)}return[o,i,s]})),yi([t,l,u])}return!t&&n>r&&(s=Ol(s,[0,0],[n,r]),i=Ol(i,[0,0],[r,r])),[s,i]}))}const Kd=li({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(B(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return qd(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=jh(Tl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],i=[];r.forEach((e=>{const[n,r]=qd(e,t);s.push(n),i.push(r)}));return[Tl(Nh(s,0),e.shape),Tl(Nh(i,0),e.shape)]}}});var Xd;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Xd||(Xd={}));const Yd=li({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Xd.SUM_BY_NONZERO_WEIGHTS;const r=ii(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=ii(t,"weights","computeWeightedLoss"));const i=null==s?r:Oa(r,s);if(n===Xd.NONE)return i;if(n===Xd.SUM)return Au(i);if(n===Xd.MEAN){if(null==s)return gc(i);{const e=r.size/s.size,t=Ra(Au(i),Au(s));return e>1?Ra(t,za(e)):t}}if(n===Xd.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Ra(Au(i),za(r.size));{const e=Oa(s,bc(r.shape)),t=Ta(Au(_c(e,za(0))),"float32");return Ra(Au(i),t)}}throw Error(`Unknown reduction: ${n}`)}});const Qd=li({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xd.SUM_BY_NONZERO_WEIGHTS;const s=ii(e,"labels","absoluteDifference"),i=ii(t,"predictions","absoluteDifference");let a=null;null!=n&&(a=ii(n,"weights","absoluteDifference")),V(s.shape,i.shape,"Error in absoluteDifference: ");const o=Qa(Xa(s,i));return Yd(o,a,r)}});const Zd=li({cosineDistance_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xd.SUM_BY_NONZERO_WEIGHTS;const i=ii(e,"labels","cosineDistance"),a=ii(t,"predictions","cosineDistance");let o=null;null!=r&&(o=ii(r,"weights","cosineDistance")),V(i.shape,a.shape,"Error in cosineDistance: ");const l=za(1),u=Xa(l,Au(Oa(i,a),n,!0));return Yd(u,o,s)}});const Jd=li({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xd.SUM_BY_NONZERO_WEIGHTS,s=ii(e,"labels","hingeLoss");const i=ii(t,"predictions","hingeLoss");let a=null;null!=n&&(a=ii(n,"weights","hingeLoss")),V(s.shape,i.shape,"Error in hingeLoss: ");const o=za(1);s=Xa(Oa(za(2),s),o);const l=th(Xa(o,Oa(s,i)));return Yd(l,a,r)}});const ep=li({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xd.SUM_BY_NONZERO_WEIGHTS;const i=ii(e,"labels","huberLoss"),a=ii(t,"predictions","huberLoss");let o=null;null!=n&&(o=ii(n,"weights","huberLoss")),V(i.shape,a.shape,"Error in huberLoss: ");const l=za(r),u=Qa(Xa(a,i)),c=xc(u,l),h=Xa(u,c),d=$a(Oa(za(.5),Fa(c)),Oa(l,h));return Yd(d,o,s)}});const tp=li({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xd.SUM_BY_NONZERO_WEIGHTS;const i=ii(e,"labels","logLoss"),a=ii(t,"predictions","logLoss");let o=null;null!=n&&(o=ii(n,"weights","logLoss")),V(i.shape,a.shape,"Error in logLoss: ");const l=za(1),u=za(r),c=tc(Oa(i,Ju($a(a,u)))),h=Oa(Xa(l,i),Ju($a(Xa(l,a),u))),d=Xa(c,h);return Yd(d,o,s)}});const np=li({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xd.SUM_BY_NONZERO_WEIGHTS;const s=ii(e,"labels","meanSquaredError"),i=ii(t,"predictions","meanSquaredError");let a=null;null!=n&&(a=ii(n,"weights","meanSquaredError")),V(s.shape,i.shape,"Error in meanSquaredError: ");const o=_h(s,i);return Yd(o,a,r)}});const rp=li({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xd.SUM_BY_NONZERO_WEIGHTS,i=ii(e,"multiClassLabels","sigmoidCrossEntropy");const a=ii(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=ii(n,"weights","sigmoidCrossEntropy")),V(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=za(r),t=za(1),n=za(.5);i=$a(Oa(i,Xa(t,e)),Oa(n,e))}const l=function(e,t){const n=ii(e,"labels","sigmoidCrossEntropyWithLogits"),r=ii(t,"logits","sigmoidCrossEntropyWithLogits");V(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=th(r),i=Oa(r,n),a=ec(Fu(tc(Qa(r))));return $a(Xa(s,i),a)}(i,a);return Yd(l,o,s)}});const sp=li({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xd.SUM_BY_NONZERO_WEIGHTS,i=ii(e,"onehotLabels","softmaxCrossEntropy");const a=ii(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=ii(n,"weights","softmaxCrossEntropy")),V(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const e=za(r),t=za(1),n=za(i.shape[1]);i=$a(Oa(i,Xa(t,e)),Ra(e,n))}const l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Pa(((e,t,r)=>{const s=ic(t,[n],!0),i=Xa(Ta(t,"float32"),s);r([e,i]);const a=tc(Oa(i,e));return{value:Au(a,[n]),gradFunc:(e,t)=>{const[r,s]=t,i=Cu(e.shape,[n]);return[Oa(Tl(e,i),Xa(Ta(r,"float32"),Fu(s))),Oa(Tl(e,i),Xa(Fu(s),Ta(r,"float32")))]}}}));return r(e,t)}(i,a);return Yd(l,o,s)}});const ip=li({sparseFillEmptyRows_:function(e,t,n,r){const s=ii(e,"indices","sparseFillEmptyRows","int32"),i=ii(t,"values","sparseFillEmptyRows"),a=ii(n,"denseShape","sparseFillEmptyRows","int32"),o=ii(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:i,denseShape:a,defaultValue:o},u=Ys.runKernel(cr,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});const ap=li({sparseReshape_:function(e,t,n){const r=ii(e,"inputIndices","sparseReshape","int32"),s=ii(t,"inputShape","sparseReshape","int32"),i=ii(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:r,inputShape:s,newShape:i},o=Ys.runKernel(hr,a);return{outputIndices:o[0],outputShape:o[1]}}});const op=li({sparseSegmentMean_:function(e,t,n){const r=ii(e,"data","sparseSegmentMean"),s=ii(t,"indices","sparseSegmentMean","int32"),i=ii(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return Ys.runKernel(dr,a)}});const lp=li({sparseSegmentSum_:function(e,t,n){const r=ii(e,"data","sparseSegmentSum"),s=ii(t,"indices","sparseSegmentSum","int32"),i=ii(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return Ys.runKernel(pr,a)}});const up=li({stringNGrams_:function(e,t,n,r,s,i,a,o){const l=ii(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=ii(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:i,padWidth:a,preserveShortSequences:o},h={data:l,dataSplits:u},d=Ys.runKernel(vr,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}});const cp=li({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=ii(e,"input","stringSplit","string"),s=ii(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const i={skipEmpty:n},a={input:r,delimiter:s},o=Ys.runKernel(xr,a,i);return{indices:o[0],values:o[1],shape:o[2]}}});const hp=li({stringToHashBucketFast_:function(e,t){const n=ii(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return Ys.runKernel(wr,s,r)}});const dp=li({staticRegexReplace_:function(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=ii(e,"input","staticRegexReplace","string"),i={pattern:t,rewrite:n,replaceGlobal:r};return Ys.runKernel(yr,{x:s},i)}}),pp={fft:wh,ifft:kh,rfft:Ih,irfft:Sh},fp={hammingWindow:gd,hannWindow:yd,frame:bd,stft:vd},mp={flipLeftRight:wd,grayscaleToRGB:kd,resizeNearestNeighbor:Wd,resizeBilinear:Vd,rgbToGrayscale:Sd,rotateWithOffset:Cd,cropAndResize:xd,nonMaxSuppression:_d,nonMaxSuppressionAsync:Md,nonMaxSuppressionWithScore:Pd,nonMaxSuppressionWithScoreAsync:zd,nonMaxSuppressionPadded:Ld,nonMaxSuppressionPaddedAsync:Bd,threshold:Ud,transform:Gd},gp={bandPart:jd,gramSchmidt:Hd,qr:Kd},yp={absoluteDifference:Qd,computeWeightedLoss:Yd,cosineDistance:Zd,hingeLoss:Jd,huberLoss:ep,logLoss:tp,meanSquaredError:np,sigmoidCrossEntropy:rp,softmaxCrossEntropy:sp},bp={sparseFillEmptyRows:ip,sparseReshape:ap,sparseSegmentMean:op,sparseSegmentSum:lp},vp={stringNGrams:up,stringSplit:cp,stringToHashBucketFast:hp,staticRegexReplace:dp};const xp=class{static sgd(e){return new ro(e)}static momentum(e,t){return new so(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new io(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Ya(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new ja(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new no(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new qa(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},wp="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function kp(){return new Promise((e=>wp((()=>e()))))}function Sp(e,t){const n=e[0].length;e.forEach(((e,t)=>{B(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),B(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let i=0;i<n;i++)B(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Cp(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Ip;function _p(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const i=n[s],a=r[r.length-n.length+s],o=r[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${i} but shape[${s+e}] = ${o}`)}else r[a]=i}return r}function Tp(e){const t={FIRST_DIM_SIZE:Ip.FIRST_DIM_SIZE,VALUE_ROWIDS:Ip.VALUE_ROWIDS,ROW_LENGTHS:Ip.ROW_LENGTHS,ROW_SPLITS:Ip.ROW_SPLITS,ROW_LIMITS:Ip.ROW_LIMITS,ROW_STARTS:Ip.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Np(e){return 0===e.length?0:e[0]===Ip.FIRST_DIM_SIZE?e.length-1:e.length}function Ep(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Ip||(Ip={}));const $p=30;function Ap(e){return e<=$p?e:oe(e,Math.floor(Math.sqrt(e)))}function Rp(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Op(e,t,n){let r=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function Dp(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{const r=[],s=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?s.push(n):r.push(n);n.push(...r),n.push(0),n.push(...s)}return n}function Fp(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let i=1;i<e.length;++i)i<=t.length?r?s.push(t[i-1]*e[i]):s.push(e[i]/t[i-1]):s.push(e[i]);return s}function Mp(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Pp(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function zp(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===U(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,i=s[s.length-1];let a=1;for(let h=0;h<s.length-1;++h)a*=s[h];const o=e.shape,l=s.slice();l.pop();let u=1;for(let h=i;h<n;++h)u*=o[h],l.push(o[h]);const c=[...le(e.shape).map((e=>e/u)),1].slice(0,i);return[l,a,u,c]}const Lp=1.7580993408473768,Bp=1.0507009873554805,Vp=.3275911,Wp=.254829592,Up=-.284496736,Gp=1.421413741,jp=-1.453152027,Hp=1.061405429;function qp(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Kp(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Xp(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Yp(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Qp(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Zp(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Jp(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const i=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function ef(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const tf="->",nf=/->/g,rf=",",sf="...";function af(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(nf,"").length)/tf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${tf}").`);const[r,s]=e.split(tf);B(-1===r.indexOf(sf),(()=>`The ellipsis notation ("${sf}") is not supported yet.`));const i=r.split(rf),a=i.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<s.length;++h){const e=s[h];if(!i.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let h=0;h<r.length;++h){const e=r[h];-1===o.indexOf(e)&&e!==rf&&o.push(e)}const l=new Array(i.length);for(let h=0;h<a;++h){if(new Set(i[h].split("")).size!==i[h].length)throw new Error(`Found duplicate axes in input component ${i[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let e=0;e<i[h].length;++e)l[h].push(o.indexOf(i[h][e]))}const u=o.length,c=[];for(let h=s.length;h<u;++h)c.push(h);return{allDims:o,summedDims:c,idDims:l}}function of(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function lf(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:B(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function uf(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let a=0;a<s;++a)r.push([]);const i=[];for(let a=0;a<n.length;++a){const e=hf(t,n[a]);for(const t of e)-1===i.indexOf(t)&&(r[a].push(t),i.push(t))}return{path:n,steps:r}}function cf(e){return e.every(((e,t)=>e===t))}function hf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function df(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"===typeof t)B(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);B(s<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}B(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function pf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function ff(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function mf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function gf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function yf(e,t){return`size ${e} must be non-negative, not ${t}`}function bf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function vf(e,t){return`Input to reshape is a SparseTensor with ${U(e)}\n  dense values, but the requested shape requires a multiple of ${U(t)}. inputShape=${e} outputShape= ${t}`}function xf(e,t){return`Input to reshape is a tensor with ${U(e)} dense values, but the requested shape has ${U(t)}. inputShape=${e} outputShape=${t}`}function wf(){return"segment ids must be >= 0"}function kf(){return"segment ids are not increasing"}function Sf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Cf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function If(e,t){let n,r=!1;for(e<=$p?(n=e,r=!0):n=oe(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=oe(e,n+1);return n}function _f(e,t,n){const r=[],s=e.length;for(let i=0;i<s;i++)i!==t?r.push(e[i]):r.push(n);return r}function Tf(e,t,n,r){const s=t.shape.length,i=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const a=e.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=n+1;h<i;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}function Nf(e){try{return e.map((e=>fs(e)))}catch(Q3){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${Q3}`)}}function Ef(e){return e.map((e=>ps(e)))}!function(){for(const e of ao)Ua(e)}();var $f,Af;ke().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}($f||($f={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Af||(Af={}));const Rf={};function Of(e){return Rf[e]}function Df(e,t,n,r,s){const i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){const e=i.inputIndexStart,a=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===i.type)return Ff(t.inputNames[o],n,r,s);if("tensors"===i.type){const i=t.inputs.slice(e,a);return t.inputNames.slice(e,a).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=i[t])||void 0===n?void 0:n.op)})).map((e=>Ff(e,n,r,s)))}const l=Ff(t.inputNames[o],n,r,s),u=l.dataSync();return"number"===i.type?u[0]:ce(l.shape,u)}const a=t.attrParams[e];return a&&a.value}function Ff(e,t,n,r){const[s,i]=Lf(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const a=n.currentContextIds.find((e=>!!t[zf(s,e)]));return void 0!==a?t[zf(s,a)][i]:void 0}function Mf(e,t,n){return t[zf(e,n.currentContextId)]}function Pf(e,t){const[n,r,s]=Lf(e,t);return[zf(n,t&&t.currentContextId),r,s]}function zf(e,t){return t?`${e}-${t}`:e}function Lf(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function Bf(e,t,n){let r=Df("pad",e,t,n);if("explicit"===r){r=Df("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function Vf(e){return e.kept?e:Na(e)}const Wf=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Uf=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Gf=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],jf=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Hf=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],qf=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Kf=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Xf=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Yf=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Qf=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Zf=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Jf=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],em=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],tm=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],nm=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],rm=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],sm=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],im=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],am=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class om{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[a,o,l,u,c,h,d,p,f,m,g,y,b,v,x,w,k,S,C].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,r=[],s=[],i=[],a=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||i.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(a);h.forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=Pf(e),i=a[r];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(i),i.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=a[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=Pf(e),n=a[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=Pf(e),n=a[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:a,inputs:o,outputs:l,weights:s,placeholders:r,signature:t,functions:d};return i.length>0&&(p.initNodes=i),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Of(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=um(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=um(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=vm(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=vm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=hm(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=hm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=bm(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=bm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=cm(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=cm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=wm(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=wm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=ym(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ym(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=xm(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=xm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=fm(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=mm(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=mm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=pm(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],i=[];e.signature.inputArg.forEach((e=>{const[t]=Pf(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:dm(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,i]=Pf(e),a=r[s];if(null!=a.outputs){const e=a.outputs.indexOf(i);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(a),a.children.push(t)}))}));const a=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Pf(a[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,i.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:i,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function lm(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=ke().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function um(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e[t];return null!=s?lm(s.s,r):n}function cm(e,t,n){const r=e[t];return r?r.b:n}function hm(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof s?s:parseInt(s,10)}function dm(e){switch("string"===typeof e&&(e=$f[e]),e){case $f.DT_FLOAT:case $f.DT_HALF:return"float32";case $f.DT_INT32:case $f.DT_INT64:case $f.DT_INT8:case $f.DT_UINT8:return"int32";case $f.DT_BOOL:return"bool";case $f.DT_DOUBLE:return"float32";case $f.DT_STRING:return"string";case $f.DT_COMPLEX64:case $f.DT_COMPLEX128:return"complex64";default:return null}}function pm(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function fm(e,t,n){const r=e[t];return r&&r.type?dm(r.type):n}function mm(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>dm(e))):n}function gm(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function ym(e,t,n){const r=e[t];return r&&r.shape?gm(r.shape):n}function bm(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function vm(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>lm(e,r))):n}function xm(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>gm(e))):n}function wm(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class km{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Ff(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Ff(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return hm(this.node.rawAttrs,e,t);if(null!=n.s)return um(this.node.rawAttrs,e,t);if(null!=n.b)return cm(this.node.rawAttrs,e,t);if(null!=n.shape)return ym(this.node.rawAttrs,e,t);if(null!=n.type)return fm(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return bm(this.node.rawAttrs,e,t);if(null!=n.list.s)return vm(this.node.rawAttrs,e,t);if(null!=n.list.shape)return xm(this.node.rawAttrs,e,t);if(null!=n.list.b)return wm(this.node.rawAttrs,e,t);if(null!=n.list.type)return mm(this.node.rawAttrs,e,t)}return t}}function Sm(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){B(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],i=t[r];B(s<0||i<0||s===i,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Cm(e){return"number"!==typeof e&&!e.some((e=>e<0))}function Im(e,t,n){let r=_m(e,n);const s=!Cm(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=_m(e.shape,r)})),!Cm(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function _m(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],i=t[r];if(s>=0&&i>=0&&s!==i)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:i}return n}class Tm{constructor(e,t,n,r,s,i,a){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=za(0),bi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Sm(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,bi(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return hi([],[0].concat(this.elementShape));const n=this.readMany(e);return Sm(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Nh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return hi([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return Sm(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),$l(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,jh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,i=[];gi((()=>{t=Tl(t,[1,n,s]);for(let n=0;n<e.length;++n){const a=[0,0===n?0:r[n-1],0],o=[1,e[n],s];i[n]=Tl(Ol(t,a,o),this.elementShape)}return i}));const a=[];for(let o=0;o<e.length;o++)a[o]=o;this.writeMany(a,i)}}class Nm{get id(){return this.idTensor.id}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Sm(t,e.shape,"TensorList shape mismatch: "),bi(e)})),this.idTensor=za(0),this.maxNumElements=r,bi(this.idTensor)}copy(){return new Nm([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Sm(e,this.elementShape,"TensorList shape mismatch: ");const r=Im(this.elementShape,this.tensors,e);return gi((()=>{const e=this.tensors.map((e=>Tl(e,r)));return Nh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Im(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,Sm(r.shape,e,"TensorList shape mismatch: "),Tl(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Sm(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");bi(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Nm([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Sm(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Im(this.elementShape,this.tensors,t);return Tl(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Sm(this.elementShape,t.shape,"TensorList shape mismatch: "),bi(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Sm(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Im(this.elementShape,this.tensors,n);return 0===e.length?hi([],[0].concat(r)):gi((()=>{const t=e.map((e=>Tl(this.tensors[e],r)));return Nh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Sm(this.elementShape,t,"TensorList shape mismatch: ");const n=Im(this.elementShape,this.tensors,t);return 0===this.size()?hi([],[0].concat(n)):gi((()=>{const e=this.tensors.map((e=>Tl(e,n)));return $l(e,0)}))}}const Em=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Df("thenBranch",e,t,n),s=Df("elseBranch",e,t,n),i=Df("cond",e,t,n),a=Df("args",e,t,n);return(await i.data())[0]?n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Df("body",e,t,n),s=Df("cond",e,t,n),i=Df("args",e,t,n),a=await n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),o=i.map((e=>e.id));let l=await a[0].data();a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=i;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const i=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await i[0].data(),i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[Vf(Df("pred",e,t,n))];case"Switch":{const r=Df("pred",e,t,n);let s=Df("data",e,t,n);return s.kept||(s=Vf(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Ff(e,t,n)));if(r){return[Vf(Ff(r,t,n))]}return}case"Enter":{const r=Df("frameName",e,t,n),s=Df("tensor",e,t,n);return n.enterFrame(r),[Vf(s)]}case"Exit":{const r=Df("tensor",e,t,n);return n.exitFrame(),[Vf(r)]}case"NextIteration":{const r=Df("tensor",e,t,n);return n.nextIteration(),[Vf(r)]}case"TensorArrayV3":{const r=Df("size",e,t,n),s=Df("dtype",e,t,n),i=Df("elementShape",e,t,n),a=Df("dynamicSize",e,t,n),o=Df("clearAfterRead",e,t,n),l=Df("identicalElementShapes",e,t,n),u=Df("name",e,t,n),c=new Tm(u,s,r,i,l,a,o);return n.addTensorArray(c),[c.idTensor,za(1)]}case"TensorArrayWriteV3":{const r=Df("tensorArrayId",e,t,n),s=Df("index",e,t,n),i=Df("tensor",e,t,n),a=n.getTensorArray(r.id);return a.write(s,i),[a.idTensor]}case"TensorArrayReadV3":{const r=Df("tensorArrayId",e,t,n),s=Df("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=Df("tensorArrayId",e,t,n),s=Df("indices",e,t,n),i=Df("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,i)]}case"TensorArrayScatterV3":{const r=Df("tensorArrayId",e,t,n),s=Df("indices",e,t,n),i=Df("tensor",e,t,n),a=n.getTensorArray(r.id);return a.scatter(s,i),[a.idTensor]}case"TensorArrayConcatV3":{const r=Df("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),i=Df("dtype",e,t,n);return[s.concat(i)]}case"TensorArraySplitV3":{const r=Df("tensorArrayId",e,t,n),s=Df("tensor",e,t,n),i=Df("lengths",e,t,n),a=n.getTensorArray(r.id);return a.split(i,s),[a.idTensor]}case"TensorArraySizeV3":{const r=Df("tensorArrayId",e,t,n);return[za(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=Df("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=Df("tensorListId",e,t,n),s=Df("index",e,t,n),i=Df("tensor",e,t,n),a=n.getTensorList(r.id);return a.setItem(s,i),[a.idTensor]}case"TensorListGetItem":{const r=Df("tensorListId",e,t,n),s=Df("index",e,t,n),i=Df("elementShape",e,t,n),a=Df("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,i,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Df("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const i=new Nm([],n,e.dtype,r),a=jh(e,0);return t.forEach(((e,t)=>{i.setItem(e,a[t])})),i}(Df("tensor",e,t,n),r,Df("elementShape",e,t,n),Df("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Df("elementShape",e,t,n),s=Df("elementDType",e,t,n);let i;i="TensorListReserve"===e.op?"numElements":"maxNumElements";const a=Df(i,e,t,n),o=function(e,t,n,r){return new Nm([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:a);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=Df("tensorListId",e,t,n),s=Df("indices",e,t,n),i=Df("elementShape",e,t,n),a=Df("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,a,i)]}case"TensorListStack":{const r=Df("tensorListId",e,t,n),s=Df("elementShape",e,t,n),i=Df("elementDType",e,t,n),a=Df("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,i,a)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Sm(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=jh(e);return new Nm(s,t,r)}(Df("tensor",e,t,n),Df("elementShape",e,t,n),Df("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=Df("tensorListId",e,t,n),s=n.getTensorList(r.id),i=Df("dtype",e,t,n),a=Df("elementShape",e,t,n);return[s.concat(i,a)]}case"TensorListPushBack":{const r=Df("tensorListId",e,t,n),s=Df("tensor",e,t,n),i=n.getTensorList(r.id);return i.pushBack(s),[i.idTensor]}case"TensorListPopBack":{const r=Df("tensorListId",e,t,n),s=Df("elementShape",e,t,n),i=Df("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,i)]}case"TensorListSplit":{const r=Df("tensor",e,t,n),s=Df("elementShape",e,t,n),i=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const i=_m(e.shape.slice(1),n),a=0===r?0:e.size/r,o=gi((()=>{const n=[];e=Tl(e,[1,r,a]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],l=[1,t[r],a];n[r]=Tl(Ol(e,o,l),i)}return e.dispose(),n})),l=new Nm([],n,e.dtype,t.length);for(let u=0;u<o.length;u++)l.setItem(u,o[u]);return l}(r,Df("lengths",e,t,n),s);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{const r=Df("tensorListId",e,t,n);return[za(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=Df("tensorListId",e,t,n),s=Df("size",e,t,n),i=n.getTensorList(r.id).resize(s);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function $m(e,t,n){const[r,s]=Df("fusedOps",e,t,n),i="biasadd"===r,a=!i,o="prelu"===s,l="fusedbatchnorm"===r,u=Df("numArgs",e,t,n);if(i){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=Df("strides",e,t,n),h=Bf(e,t,n),d=Df("dataFormat",e,t,n).toUpperCase(),p=Df("dilations",e,t,n);let[f,m]=Df("args",e,t,n);a&&(m=f,f=void 0);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:Df("leakyreluAlpha",e,t,n)}}function Am(e,t,n){return{boxes:Df("boxes",e,t,n),scores:Df("scores",e,t,n),maxOutputSize:Df("maxOutputSize",e,t,n),iouThreshold:Df("iouThreshold",e,t,n),scoreThreshold:Df("scoreThreshold",e,t,n),softNmsSigma:Df("softNmsSigma",e,t,n)}}class Rm{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=za(0),this.tensorMap=new Map,bi(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return za(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),gi((()=>{const e=jh(t),r=n.length,s=e.length;B(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];bi(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return gi((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],i=this.findWithDefault(s,t);e.push(i)}return Nh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function Om(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:gi;const i=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(Df("a",e,t,n),Df("b",e,t,n))];case"AddN":return[r.addN(Df("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(Df("a",e,t,n),Df("b",e,t,n))];case"Mul":return[r.mul(Df("a",e,t,n),Df("b",e,t,n))];case"RealDiv":case"Div":return[r.div(Df("a",e,t,n),Df("b",e,t,n))];case"DivNoNan":return[r.divNoNan(Df("a",e,t,n),Df("b",e,t,n))];case"FloorDiv":return[r.floorDiv(Df("a",e,t,n),Df("b",e,t,n))];case"Sub":return[r.sub(Df("a",e,t,n),Df("b",e,t,n))];case"Minimum":return[r.minimum(Df("a",e,t,n),Df("b",e,t,n))];case"Maximum":return[r.maximum(Df("a",e,t,n),Df("b",e,t,n))];case"Pow":return[r.pow(Df("a",e,t,n),Df("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(Df("a",e,t,n),Df("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"basic_math":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(Df("x",e,t,n))];case"Acos":return[r.acos(Df("x",e,t,n))];case"Acosh":return[r.acosh(Df("x",e,t,n))];case"Asin":return[r.asin(Df("x",e,t,n))];case"Asinh":return[r.asinh(Df("x",e,t,n))];case"Atan":return[r.atan(Df("x",e,t,n))];case"Atan2":return[r.atan2(Df("x",e,t,n),Df("y",e,t,n))];case"Atanh":return[r.atanh(Df("x",e,t,n))];case"Ceil":return[r.ceil(Df("x",e,t,n))];case"Complex":return[r.complex(Df("real",e,t,n),Df("imag",e,t,n))];case"Cos":return[r.cos(Df("x",e,t,n))];case"Cosh":return[r.cosh(Df("x",e,t,n))];case"Elu":return[r.elu(Df("x",e,t,n))];case"Erf":return[r.erf(Df("x",e,t,n))];case"Exp":return[r.exp(Df("x",e,t,n))];case"Expm1":return[r.expm1(Df("x",e,t,n))];case"Floor":return[r.floor(Df("x",e,t,n))];case"Log":return[r.log(Df("x",e,t,n))];case"Log1p":return[r.log1p(Df("x",e,t,n))];case"Imag":return[r.imag(Df("x",e,t,n))];case"Neg":return[r.neg(Df("x",e,t,n))];case"Reciprocal":return[r.reciprocal(Df("x",e,t,n))];case"Real":return[r.real(Df("x",e,t,n))];case"Relu":return[r.relu(Df("x",e,t,n))];case"Round":return[r.round(Df("x",e,t,n))];case"Selu":return[r.selu(Df("x",e,t,n))];case"Sigmoid":return[r.sigmoid(Df("x",e,t,n))];case"Sin":return[r.sin(Df("x",e,t,n))];case"Sign":return[r.sign(Df("x",e,t,n))];case"Sinh":return[r.sinh(Df("x",e,t,n))];case"Softplus":return[r.softplus(Df("x",e,t,n))];case"Sqrt":return[r.sqrt(Df("x",e,t,n))];case"Square":return[r.square(Df("x",e,t,n))];case"Tanh":return[r.tanh(Df("x",e,t,n))];case"Tan":return[r.tan(Df("x",e,t,n))];case"ClipByValue":return[r.clipByValue(Df("x",e,t,n),Df("clipValueMin",e,t,n),Df("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(Df("x",e,t,n))];case"Rsqrt":return[r.rsqrt(Ff(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(Df("x",e,t,n),Df("alpha",e,t,n))];case"Prelu":return[r.prelu(Df("x",e,t,n),Df("alpha",e,t,n))];case"IsNan":return[r.isNaN(Ff(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(Ff(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(Ff(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"control":return Em(e,t,n);case"convolution":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Conv1D":{const s=Df("stride",e,t,n),i=Df("pad",e,t,n),a=Df("dataFormat",e,t,n).toUpperCase(),o=Df("dilation",e,t,n);return[r.conv1d(Df("x",e,t,n),Df("filter",e,t,n),s,i,a,o)]}case"Conv2D":{const s=Df("strides",e,t,n),i=Bf(e,t,n),a=Df("dataFormat",e,t,n).toUpperCase(),o=Df("dilations",e,t,n);return[r.conv2d(Df("x",e,t,n),Df("filter",e,t,n),[s[1],s[2]],i,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=$m(e,t,n);return[r.fused.conv2d({x:Df("x",e,t,n),filter:Df("filter",e,t,n),strides:[s[1],s[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=$m(e,t,n);return[r.fused.depthwiseConv2d({x:Df("x",e,t,n),filter:Df("filter",e,t,n),strides:[s[1],s[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=Df("outputShape",e,t,n),i=Df("strides",e,t,n),a=Bf(e,t,n);return[r.conv2dTranspose(Df("x",e,t,n),Df("filter",e,t,n),s,[i[1],i[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=Df("strides",e,t,n),i=Bf(e,t,n),a=Df("dilations",e,t,n),o=Df("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(Df("input",e,t,n),Df("filter",e,t,n),[s[1],s[2]],i,o,[a[1],a[2]])]}case"Conv3D":{const s=Df("strides",e,t,n),i=Df("pad",e,t,n),a=Df("dataFormat",e,t,n).toUpperCase(),o=Df("dilations",e,t,n);return[r.conv3d(Df("x",e,t,n),Df("filter",e,t,n),[s[1],s[2],s[3]],i,a,[o[1],o[2],o[3]])]}case"AvgPool":{const s=Df("strides",e,t,n),i=Df("pad",e,t,n),a=Df("kernelSize",e,t,n);return[r.avgPool(Df("x",e,t,n),[a[1],a[2]],[s[1],s[2]],i)]}case"MaxPool":{const s=Df("strides",e,t,n),i=Df("pad",e,t,n),a=Df("kernelSize",e,t,n);return[r.maxPool(Df("x",e,t,n),[a[1],a[2]],[s[1],s[2]],i)]}case"MaxPoolWithArgmax":{const s=Df("strides",e,t,n),i=Df("pad",e,t,n),a=Df("kernelSize",e,t,n),o=Df("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(Df("x",e,t,n),[a[1],a[2]],[s[1],s[2]],i,o);return[l,u]}case"AvgPool3D":{const s=Df("strides",e,t,n),i=Df("pad",e,t,n),a=Df("kernelSize",e,t,n);return[r.avgPool3d(Df("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],i)]}case"MaxPool3D":{const s=Df("strides",e,t,n),i=Df("pad",e,t,n),a=Df("kernelSize",e,t,n);return[r.maxPool3d(Df("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],i)]}case"Dilation2D":{const s=Df("strides",e,t,n),i=Df("pad",e,t,n),a=Df("dilations",e,t,n),o=s[1],l=s[2],u=a[1],c=a[2];return[r.dilation2d(Df("x",e,t,n),Df("filter",e,t,n),[o,l],i,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"creation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Fill":{const s=Df("shape",e,t,n),i=Df("dtype",e,t,n),a=Df("value",e,t,n);return[r.fill(s,a,i)]}case"LinSpace":{const s=Df("start",e,t,n),i=Df("stop",e,t,n),a=Df("num",e,t,n);return[r.linspace(s,i,a)]}case"Multinomial":{const s=Df("logits",e,t,n),i=Df("numSamples",e,t,n),a=Df("seed",e,t,n);return[r.multinomial(s,i,a)]}case"OneHot":{const s=Df("indices",e,t,n),i=Df("depth",e,t,n),a=Df("onValue",e,t,n),o=Df("offValue",e,t,n),l=Df("dtype",e,t,n);return[r.oneHot(s,i,a,o,l)]}case"Ones":return[r.ones(Df("shape",e,t,n),Df("dtype",e,t,n))];case"OnesLike":return[r.onesLike(Df("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(Df("shape",e,t,n),Df("dtype",e,t,n),Df("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(Df("shape",e,t,n),Df("minval",e,t,n),Df("maxval",e,t,n),Df("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(Df("shape",e,t,n),Df("minval",e,t,n),Df("maxval",e,t,n),Df("seed",e,t,n))];case"Range":{const s=Df("start",e,t,n),i=Df("stop",e,t,n),a=Df("step",e,t,n);return[r.range(s,i,a,Df("dtype",e,t,n))]}case"TruncatedNormal":{const s=Df("shape",e,t,n),i=Df("mean",e,t,n),a=Df("stdDev",e,t,n),o=Df("seed",e,t,n);return[r.truncatedNormal(s,i,a,Df("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(Df("shape",e,t,n),Df("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(Df("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"dynamic":return async function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:I;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=Am(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,i,a,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=Am(e,t,n),u=Df("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,i,a,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=Am(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,i,a,o,l)]}case"Where":{const r=s.cast(Df("condition",e,t,n),"bool"),i=[await s.whereAsync(r)];return r.dispose(),i}case"ListDiff":return s.setdiff1dAsync(Df("x",e,t,n),Df("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n);case"evaluation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"LowerBound":{const s=Df("sortedSequence",e,t,n),i=Df("values",e,t,n);return[r.lowerBound(s,i)]}case"TopKV2":{const s=Df("x",e,t,n),i=Df("k",e,t,n),a=Df("sorted",e,t,n),o=r.topk(s,i,a);return[o.values,o.indices]}case"UpperBound":{const s=Df("sortedSequence",e,t,n),i=Df("values",e,t,n);return[r.upperBound(s,i)]}case"Unique":{const s=Df("x",e,t,n),i=r.unique(s);return[i.values,i.indices]}case"UniqueV2":{const s=Df("x",e,t,n),i=Df("axis",e,t,n),a=r.unique(s,i);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"image":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"ResizeBilinear":{const s=Df("images",e,t,n),i=Df("size",e,t,n),a=Df("alignCorners",e,t,n),o=Df("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[i[0],i[1]],a,o)]}case"ResizeNearestNeighbor":{const s=Df("images",e,t,n),i=Df("size",e,t,n),a=Df("alignCorners",e,t,n),o=Df("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[i[0],i[1]],a,o)]}case"CropAndResize":{const s=Df("image",e,t,n),i=Df("boxes",e,t,n),a=Df("boxInd",e,t,n),o=Df("cropSize",e,t,n),l=Df("method",e,t,n),u=Df("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,i,a,o,l,u)]}case"ImageProjectiveTransformV3":{const s=Df("images",e,t,n),i=Df("transforms",e,t,n),a=Df("outputShape",e,t,n),o=Df("fillValue",e,t,n),l=Df("interpolation",e,t,n),u=Df("fillMode",e,t,n);return[r.image.transform(s,i,l.toLowerCase(),u.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"graph":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=Df("default",e,t,n);return[Ff(e.name,t,n)||s];case"Placeholder":return[Ff(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Vf(Df("x",e,t,n))];case"IdentityN":return Df("x",e,t,n).map((e=>Vf(e)));case"Shape":return[r.tensor1d(Df("x",e,t,n).shape,"int32")];case"ShapeN":return Df("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(Df("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(Df("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const i=Df("x",e,t,n),a=Df("data",e,t,n),o=Df("message",e,t,n),l=Df("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,l));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"logical":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Equal":return[r.equal(Df("a",e,t,n),Df("b",e,t,n))];case"NotEqual":return[r.notEqual(Df("a",e,t,n),Df("b",e,t,n))];case"Greater":return[r.greater(Df("a",e,t,n),Df("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(Df("a",e,t,n),Df("b",e,t,n))];case"Less":return[r.less(Df("a",e,t,n),Df("b",e,t,n))];case"LessEqual":return[r.lessEqual(Df("a",e,t,n),Df("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(Df("a",e,t,n),Df("b",e,t,n))];case"LogicalNot":return[r.logicalNot(Df("a",e,t,n))];case"LogicalOr":return[r.logicalOr(Df("a",e,t,n),Df("b",e,t,n))];case"Select":case"SelectV2":return[r.where(Df("condition",e,t,n),Df("a",e,t,n),Df("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(Df("a",e,t,n),Df("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"matrices":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(Df("a",e,t,n),Df("b",e,t,n),Df("transposeA",e,t,n),Df("transposeB",e,t,n))];case"Einsum":return[r.einsum(Df("equation",e,t,n),...Df("tensors",e,t,n))];case"Transpose":return[r.transpose(Df("x",e,t,n),Df("perm",e,t,n))];case"_FusedMatMul":const[s,i]=Df("fusedOps",e,t,n),a="biasadd"===s,o="prelu"===i,l=Df("numArgs",e,t,n),u=Df("leakyreluAlpha",e,t,n);if(a){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=Df("args",e,t,n);return[r.fused.matMul({a:Df("a",e,t,n),b:Df("b",e,t,n),transposeA:Df("transposeA",e,t,n),transposeB:Df("transposeB",e,t,n),bias:c,activation:i,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(Df("a",e,t,n),Df("numLower",e,t,n),Df("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"normalization":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(Df("x",e,t,n),Df("axis",e,t,n),Df("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(Df("x",e,t,n),Df("mean",e,t,n),Df("variance",e,t,n),Df("offset",e,t,n),Df("scale",e,t,n),Df("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(Df("x",e,t,n),Df("radius",e,t,n),Df("bias",e,t,n),Df("alpha",e,t,n),Df("beta",e,t,n))];case"Softmax":return[r.softmax(Df("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(Df("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"ragged":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:i}=r.raggedGather(Df("paramsNestedSplits",e,t,n),Df("paramsDenseValues",e,t,n),Df("indices",e,t,n),Df("outputRaggedRank",e,t,n));return s.concat(i)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:i}=r.raggedRange(Df("starts",e,t,n),Df("limits",e,t,n),Df("splits",e,t,n));return[s,i]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(Df("shape",e,t,n),Df("values",e,t,n),Df("defaultValue",e,t,n),Df("rowPartitionTensors",e,t,n),Df("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"reduction":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Max":{const s=Df("axis",e,t,n),i=Df("keepDims",e,t,n);return[r.max(Df("x",e,t,n),s,i)]}case"Mean":{const s=Df("axis",e,t,n),i=Df("keepDims",e,t,n);return[r.mean(Df("x",e,t,n),s,i)]}case"Min":{const s=Df("axis",e,t,n),i=Df("keepDims",e,t,n);return[r.min(Df("x",e,t,n),s,i)]}case"Sum":{const s=Df("axis",e,t,n),i=Df("keepDims",e,t,n);return[r.sum(Df("x",e,t,n),s,i)]}case"All":{const s=Df("axis",e,t,n),i=Df("keepDims",e,t,n);return[r.all(Df("x",e,t,n),s,i)]}case"Any":{const s=Df("axis",e,t,n),i=Df("keepDims",e,t,n);return[r.any(Df("x",e,t,n),s,i)]}case"ArgMax":{const s=Df("axis",e,t,n);return[r.argMax(Df("x",e,t,n),s)]}case"ArgMin":{const s=Df("axis",e,t,n);return[r.argMin(Df("x",e,t,n),s)]}case"Prod":{const s=Df("axis",e,t,n),i=Df("keepDims",e,t,n);return[r.prod(Df("x",e,t,n),s,i)]}case"Cumprod":{const s=Df("axis",e,t,n),i=Df("exclusive",e,t,n),a=Df("reverse",e,t,n);return[r.cumprod(Df("x",e,t,n),s,i,a)]}case"Cumsum":{const s=Df("axis",e,t,n),i=Df("exclusive",e,t,n),a=Df("reverse",e,t,n);return[r.cumsum(Df("x",e,t,n),s,i,a)]}case"Bincount":const s=Df("x",e,t,n),i=Df("weights",e,t,n),a=Df("size",e,t,n);return[r.bincount(s,i,a)];case"DenseBincount":{const s=Df("x",e,t,n),i=Df("weights",e,t,n),a=Df("size",e,t,n),o=Df("binaryOutput",e,t,n);return[r.denseBincount(s,i,a,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"slice_join":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"ConcatV2":case"Concat":{const s=Df("n",e,t,n),i=Df("axis",e,t,n);let a=Df("tensors",e,t,n);return a=a.slice(0,s),[r.concat(a,i)]}case"Gather":{const s=Df("x",e,t,n),i=Df("indices",e,t,n);return[r.gather(s,r.cast(i,"int32"),0)]}case"GatherV2":{const s=Df("axis",e,t,n),i=Df("batchDims",e,t,n),a=Df("x",e,t,n),o=Df("indices",e,t,n);return[r.gather(a,r.cast(o,"int32"),s,i)]}case"Reverse":{const s=Df("dims",e,t,n),i=[];for(let e=0;e<s.length;e++)s[e]&&i.push(e);const a=Df("x",e,t,n);return[r.reverse(a,i)]}case"ReverseV2":{const s=Df("axis",e,t,n),i=Df("x",e,t,n);return[r.reverse(i,s)]}case"Slice":{const s=Df("begin",e,t,n),i=Df("size",e,t,n);return[r.slice(Df("x",e,t,n),s,i)]}case"StridedSlice":{const s=Df("begin",e,t,n),i=Df("end",e,t,n),a=Df("strides",e,t,n),o=Df("beginMask",e,t,n),l=Df("endMask",e,t,n),u=Df("ellipsisMask",e,t,n),c=Df("newAxisMask",e,t,n),h=Df("shrinkAxisMask",e,t,n),d=Df("x",e,t,n);return[r.stridedSlice(d,s,i,a,o,l,u,c,h)]}case"Pack":return gi((()=>{const s=Df("axis",e,t,n),i=Df("tensors",e,t,n),a=i[0].shape,o=r.squeeze(i[0]).shape,l=i.map((e=>{const t=j(e.shape,a);if(!t&&!j(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,a)}));return[r.stack(l,s)]}));case"Unpack":{const s=Df("axis",e,t,n),i=Df("tensor",e,t,n);return r.unstack(i,s)}case"Tile":{const s=Df("reps",e,t,n);return[r.tile(Df("x",e,t,n),s)]}case"Split":case"SplitV":{const s=Df("axis",e,t,n),i=Df("numOrSizeSplits",e,t,n),a=Df("x",e,t,n);return r.split(a,i,s)}case"ScatterNd":{const s=Df("indices",e,t,n),i=Df("values",e,t,n),a=Df("shape",e,t,n);return[r.scatterND(s,i,a)]}case"GatherNd":{const s=Df("x",e,t,n),i=Df("indices",e,t,n);return[r.gatherND(s,i)]}case"SparseToDense":{const s=Df("sparseIndices",e,t,n),i=Df("outputShape",e,t,n),a=Df("sparseValues",e,t,n),o=Df("defaultValue",e,t,n);return[r.sparseToDense(s,a,i,a.dtype===o.dtype?o:r.cast(o,a.dtype))]}case"TensorScatterUpdate":{const s=Df("indices",e,t,n),i=Df("values",e,t,n),a=Df("tensor",e,t,n);return[r.tensorScatterUpdate(a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"sparse":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:i,emptyRowIndicator:a,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(Df("indices",e,t,n),Df("values",e,t,n),Df("denseShape",e,t,n),Df("defaultValue",e,t,n));return[s,i,a,o]}case"SparseReshape":{const{outputIndices:s,outputShape:i}=r.sparse.sparseReshape(Df("inputIndices",e,t,n),Df("inputShape",e,t,n),Df("newShape",e,t,n));return[s,i]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(Df("data",e,t,n),Df("indices",e,t,n),Df("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(Df("data",e,t,n),Df("indices",e,t,n),Df("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"spectral":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"FFT":return[r.fft(Df("x",e,t,n))];case"IFFT":return[r.ifft(Df("x",e,t,n))];case"RFFT":return[r.rfft(Df("x",e,t,n))];case"IRFFT":return[r.irfft(Df("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"string":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(Df("input",e,t,n),Df("pattern",e,t,n),Df("rewrite",e,t,n),Df("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:i}=r.string.stringNGrams(Df("data",e,t,n),Df("dataSplits",e,t,n),Df("separator",e,t,n),Df("nGramWidths",e,t,n),Df("leftPad",e,t,n),Df("rightPad",e,t,n),Df("padWidth",e,t,n),Df("preserveShortSequences",e,t,n));return[s,i]}case"StringSplit":{const{indices:s,values:i,shape:a}=r.string.stringSplit(Df("input",e,t,n),Df("delimiter",e,t,n),Df("skipEmpty",e,t,n));return[s,i,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(Df("input",e,t,n),Df("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"transformation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Cast":return[r.cast(Df("x",e,t,n),Df("dtype",e,t,n))];case"ExpandDims":{const s=Df("axis",e,t,n);return[r.expandDims(Df("x",e,t,n),s)]}case"Squeeze":{const s=Df("axis",e,t,n);return[r.squeeze(Df("x",e,t,n),s)]}case"Reshape":return[r.reshape(Df("x",e,t,n),Df("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(Df("x",e,t,n),Df("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(Df("x",e,t,n),Df("padding",e,t,n),Df("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(Df("x",e,t,n),Df("padding",e,t,n),Df("constantValue",e,t,n))];case"SpaceToBatchND":{const s=Df("blockShape",e,t,n),i=Df("paddings",e,t,n);return[r.spaceToBatchND(Df("x",e,t,n),s,i)]}case"BatchToSpaceND":{const s=Df("blockShape",e,t,n),i=Df("crops",e,t,n);return[r.batchToSpaceND(Df("x",e,t,n),s,i)]}case"DepthToSpace":{const s=Df("blockSize",e,t,n),i=Df("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(Df("x",e,t,n),s,i)]}case"BroadcastTo":return[r.broadcastTo(Df("x",e,t,n),Df("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(Df("s0",e,t,n),Df("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=Df("keyDType",e,t,n),i=Df("valueDType",e,t,n),a=new Rm(s,i);return r.addHashTable(e.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=Df("tableHandle",e,t,n,r),i=Df("keys",e,t,n),a=Df("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(i,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=Df("tableHandle",e,t,n,r),i=Df("keys",e,t,n),a=Df("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(i,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=Df("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const i=Of(e.op);if(i&&i.customExecutor)return i.customExecutor(new km(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return be(i)?i.then((e=>[].concat(e))):[].concat(i)}class Dm{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Fm(e,t,n,r){const s=new Set,i=[];let a=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>Lf(e)[0])));r=r||[];const c=new Set(r.map((e=>Lf(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(Vm(e)||Wm(e)||Um(e))&&null==a&&(a=e,o=a.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):i.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:i,dynamicNode:a,syncInputs:o}}function Mm(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map((e=>Lf(e)[0])).map((t=>e.nodes[t])),i=e.initNodes||[],a=e=>n.has("string"===typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...s,...e.weights,...i]).filter(a),u=o([...l,...Object.values(e.nodes)]).filter(a),c=new Map(u.map((e=>[e.name,e]))),h={};for(const m of u){h[m.name]=h[m.name]||0;for(const e of m.children)a(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}const d=Object.entries(h).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...d];for(;d.length>0;){const e=d.pop(),t=c.get(e);for(const n of t.children.filter(a))0===--h[n.name]&&(p.push(n.name),d.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const i of t.children)n.has(i.name)&&!s.has(i.name)&&(s.add(i.name),r.push(i.name))}const i=e.filter((e=>s.has(e.name)));return i}(p.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"===typeof e?e:e.name),i=new Set(e.map((e=>e.name))),a=e=>i.has("string"===typeof e?e:e.name);for(const o of e){for(const e of o.children.filter(a)){if(!n.has(e.name))throw new Pm(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new Pm(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!s(o))for(const e of o.inputs){if(!n.has(e.name))throw new Pm(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new Pm(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}class Pm extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const zm=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Lm=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Bm=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Vm(e){return zm.has(e.op)}function Wm(e){return Lm.has(e.op)}function Um(e){return Bm.has(e.op)}class Gm{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Gm(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=Fm(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:i}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const a=Mm(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>Vm(e)?n:t)),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},i=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),a=new Map;for(let o=0;o<e.length;++o){const t=i[o];if(t===n)continue;const r=e[o],s=e[t];a.has(s.name)||a.set(s.name,[]),a.get(s.name).push(r)}return a}(a);return{orderedNodes:a,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return bi(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Lf(e)[0]])),s=t.map((e=>Lf(e)[0])),i=new Set(s);let a=s.map((e=>this.graph.nodes[e]));0===a.length&&(a=this._outputs);const o=this.getCompilationKey(r,a);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,a),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=ke().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const u={},c={};return gi((()=>{const n=new Dm(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,i]=Lf(t,n),a=[];a[i]=e[t],r[s]=a,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(a))}));const s=this.getFrozenTensorIds(r),{orderedNodes:a,nodeLiveUntilMap:o}=l;for(const e of a){if(r[e.name])continue;const t=Om(e,r,n,this._resourceManager);if(be(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,i,o.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>Ff(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,i,a){if(!Vm(t)&&!i.has(e)){for(const r of n[e])null!=r&&(a[r.id]=(a[r.id]||0)+t.children.length);for(const e of t.inputs){if(Vm(e))continue;const t=Mf(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=a[e.id];1===t?(e.dispose(),delete a[e.id]):null!=t&&a[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,i){function a(e){return Vm(e)||s.has(e.name)}if(!Vm(e)&&null!=i)for(const o of i){if(a(o))continue;const e=Mf(o.name,t,n);for(const t of e)!t||t.kept||r.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=ke().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const i=new Dm(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,i,t,n),o=t.map((e=>Ff(e,a,i))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(a).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&i.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),i=s.map((e=>this.graph.nodes[Lf(e)[0]])),a=n.map((e=>Lf(e)[0])),o=new Set(a);let l=a.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:h,syncInputs:d}=Fm(e,l,this.weightMap,this._initNodes),p=[...i,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Lf(t),s=[];s[r]=e[t],f[n]=s}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(i,p,t,f,y,g,o,m,u);await Promise.all(e)}null!=h||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!Vm(e)&&!Ff(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,s,i,a,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&Df("isConstant",e.node,r,n)&&([c]=Pf(e.node.name,n)),null==r[e.node.name]){const h=Om(e.node,r,n,this._resourceManager);c||([c]=Pf(e.node.name,n));const d=n.currentContext;be(h)?u.push(h.then((u=>(r[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,i,a,o),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,r,n,i,a,o),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,i){e.children.forEach((e=>{const[a]=Pf(e.name,n);!s[a]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Ff(e,r,n)))&&(s[a]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Ff(e,r,n)))&&(s[a]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Lf(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;B(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&B(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const i=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=i?r[i.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Lf(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Lf(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class jm{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const Hm="?tfjs-format=file",qm="model.json";class Km{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=r,null==n&&(this.loadOptions={}),this.resourceManager=new jm}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return be(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Ai(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Gm(om.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=om.Instance.transformGraph(e.modelInitializer);this.initializer=new Gm(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof Es?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Es)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,i,a;const o=null===(a=null===(i=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===i?void 0:i[n])||void 0===a?void 0:a.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&yi(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Xm(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"===typeof t&&(t=function(e){e.endsWith("/")||(e+="/");return`${e}${qm}${Hm}`}(t));const s=new Km(t,n,r);return await s.load(),s}const Ym=ke();Ym.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),Ym.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),Ym.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",(()=>-1)),Ym.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!0)),Ym.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),Ym.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),Ym.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),Ym.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",(()=>!0)),Ym.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",(()=>!1)),Ym.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",(()=>-1)),Ym.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1)),Ym.registerFlag("WEBGPU_PRINT_SHADER",(()=>"")),Ym.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",(()=>!1));class Qm{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return"intel"===this.vendor}}class Zm{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t){let n,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const i=Jm(e,t);return s?(this.freeBuffers.has(i)||this.freeBuffers.set(i,[]),this.freeBuffers.get(i).length>0?(n=this.freeBuffers.get(i).pop(),this.numFreeBuffers--):(n=this.device.createBuffer({size:e,usage:t,mappedAtCreation:r}),this.numBytesAllocated+=e)):(n=this.device.createBuffer({size:e,usage:t,mappedAtCreation:r}),this.numBytesAllocated+=e),this.usedBuffers.has(i)||this.usedBuffers.set(i,[]),this.usedBuffers.get(i).push(n),this.numUsedBuffers++,this.numBytesUsed+=e,n}releaseBuffer(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===this.freeBuffers.size)return;const n=e.size,r=Jm(n,e.usage),s=this.usedBuffers.get(r),i=s.indexOf(e);if(i<0)throw new Error("Cannot find the buffer in buffer manager");s[i]=s[s.length-1],s.pop(),this.numUsedBuffers--,this.numBytesUsed-=n,t?(this.freeBuffers.get(r).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=n)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function Jm(e,t){return`${e}_${t}`}class eg{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,r){const s=e*t*ng(n),i=tg(e,t,n,r);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=s,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;const e=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(e),e}this.numBytesAllocated+=s;const a=this.device.createTexture({size:[e,t],format:n,usage:r});return this.usedTextures.get(i).push(a),a}releaseTexture(e){if(0===this.freeTextures.size)return;const t=e.width,n=e.height,r=e.format,s=tg(t,n,r,e.usage);this.freeTextures.has(s)||this.freeTextures.set(s,[]),this.freeTextures.get(s).push(e),this.numFreeTextures++,this.numUsedTextures--;const i=this.usedTextures.get(s),a=i.indexOf(e);if(a<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(a,1);const o=t*n*ng(r);this.numBytesUsed-=o}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function tg(e,t,n,r){return`${e}_${t}_${n}_${r}`}function ng(e){if("rgba8unorm"===e)return 16;throw new Error(`${e} is not supported!`)}function rg(e,t){if(Math.max(...e)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const n=e.length,r=e.map((e=>`${t}.${"xyzwuv"[e]}`)),s=new Array(n-1);s[n-2]=r[n-1];for(let i=n-3;i>=0;--i)s[i]=`(${s[i+1]} * ${r[i+1]})`;return s}const sg=(e,t,n)=>"int32"===n?`atomicAdd(${e}, bitcast<i32>(${t}));`:`\n          {\n            var oldValue = 0;\n            loop {\n              let newValueF32 = bitcast<f32>(oldValue) + (${t});\n              let newValue = bitcast<i32>(newValueF32);\n              let res = atomicCompareExchangeWeak(${e}, oldValue, newValue);\n              if res.exchanged {\n                break;\n              }\n              oldValue = res.old_value;\n            }\n          }`;var ig;!function(e){e[e.FROM_PIXELS=0]="FROM_PIXELS",e[e.DRAW=1]="DRAW"}(ig||(ig={}));const ag=(e,t,n,r,s)=>{const i=function(e,t,n){const r=[],s=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,r.push(`\n\n      var<private> localId: vec3<u32>;\n      var<private> localIndex: u32;\n      var<private> globalId: vec3<u32>;\n      var<private> numWorkgroups: vec3<u32>;\n      var<private> workgroupId: vec3<u32>;\n\n      // Only used when the y/z dimension of workgroup size is 1.\n      fn getGlobalIndex() -> i32 {\n        ${gg(n)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +\n                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${s}u +\n                localIndex);\n        `}\n      }\n    `),null!=n.pixelsOpType){const s=n.pixelsOpType===ig.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${yg(t.dtype,n.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${yg(e[0].dtype,n.outputComponent)}>;`,i=3===t.shape.length?"vec2<i32>":"i32";r.push(`\n        struct Uniform {\n          outShapeStrides : ${i},\n          size            : i32,\n          numChannels     : i32,\n          alpha           : f32,\n        };\n\n        ${s}\n        @group(0) @binding(2) var<uniform> uniforms: Uniform;\n      `);const a=bg(n);return[dg,r.join("\n"),fg(t.shape),n.getUserCode(),hg(a,n)].join("\n")}let i,a,o="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach(((t,n)=>{const r=lg(e[n].shape.length);o+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${r}, `,i=e[n].shape.length-1,a=lg(i),o+=`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides: ${a}, `}));const l=lg(t.shape.length);o+=`outShape : ${l}, `,i=t.shape.length-1,a=lg(i),o+=`\n         outShapeStrides: ${a}, `,n.size&&(o+="size : i32, ");n.uniforms&&(o+=n.uniforms);o+="};",o=function(e){const t=/(\w+)\s*:\s*vec(5|6)/g;e=e.replace(t,(e=>"@align(16) "+e));const n=/vec(5|6)\s*,\s*(\w+)/g;return e=e.replace(n,((e,t,n)=>`vec${t}, @align(16) ${n}`))}(o),r.push(o),n.atomic?r.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n    "):r.push(`\n      @group(0) @binding(0) var<storage, read_write> result: array<${yg(t.dtype,n.outputComponent)}>;\n    `);n.variableNames.forEach(((t,s)=>{r.push(`\n      @group(0) @binding(${1+s}) var<storage, read> ${t}: array<${n.variableComponents?yg(e[s].dtype,n.variableComponents[s]):yg(e[s].dtype,n.outputComponent)}>;\n        `)})),""!==o&&r.push(`\n      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;\n      `);const u=function(e,t){const{x:n,y:r=[],z:s=[]}=t,i=e.length,a=n.length+r.length+s.length;if(a!==i)return"";if(n.length===i){return`fn getOutputCoords() -> ${lg(i)}{\n    let globalIndex = getGlobalIndex();\n    return getCoordsFromIndex(globalIndex);\n  }\n  `}let o="";const l=[n,r,s];for(let d=0;d<l.length;d++){const e=l[d];if(0!==e.length)if(1===e.length)o+=`let d${e[0]} = i32(globalId[${d}]);`;else{const t=rg(e,"uniforms.outShape");o+=`var index${d} = i32(globalId[${d}]);`;for(let n=0;n<t.length;n++)o+=`let d${e[n]} = index${d} / ${t[n]};`,n===t.length-1?o+=`let d${e[n+1]} = index${d} - d${e[n]} * ${t[n]};`:o+=`index${d} = index${d} - d${e[n]} * ${t[n]};`}}const u=[];for(let d=0;d<a;d++)u.push(`d${d}`);const c=lg(a);let h=`fn getOutputCoords() -> ${c} {\n  ${o}\n`;0===u.length?h+=`return ${c}(0); }`:h+=`return ${c}(${u.join(",")}); }`;return h}(t.shape,n.dispatchLayout),c=[dg,r.join("\n")+pg,fg(t.shape),u,mg(t.shape.length)];n.atomic||c.push(function(e,t,n){const r=e.length,s=yg(t,n);let i=`fn setOutputAtIndex(flatIndex : i32, value : ${og(n)}) {\n      result[flatIndex] = ${s}(value);\n    }\n\n    fn setOutputAtIndexI32(flatIndex : i32, value : ${og(n,"i32")}) {\n      result[flatIndex] = ${s}(value);\n    }\n    `;if(r>=2){const e=["d0","d1","d2","d3","d4","d5"].slice(0,r),t=lg(r);i+=`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : ${og(n)}) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex${1===n?"":` / ${n}`}, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : ${og(n,"i32")}) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex${1===n?"":` / ${n}`}, value);\n      }\n    `}return i}(t.shape,t.dtype,n.outputComponent));n.variableNames.forEach(((t,n)=>{c.push(`${fg(e[n].shape,t)}`)}));const h=e.map(((e,r)=>function(e,t,n,r){let s=function(e,t){const n=e.name,r=e.shape.length,s=lg(r),i="get"+n.charAt(0).toUpperCase()+n.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,r),o=a.map((e=>`${e} : i32`)).join(", ");if(r<1)return`\n      fn ${i}() -> ${og(t)} {\n        return ${og(t)}(${n}[0]);\n      }\n    `;const l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`;let u=`${r}D`;0===r&&(u="1D");return`\n    fn ${i}(${o}) -> ${og(t)} {\n      return ${og(t)}(${n}[getIndexFromCoords${u}(${s}(${a.join(",")}),\n        ${l})${1===t?"":` / ${t}`}]);\n    }\n   `}(e,n);const i=e.shape;i.length<=t.length&&(s+=function(e,t,n,r){const s=e.name,i=s.charAt(0).toUpperCase()+s.slice(1),a="get"+i+"ByOutput",o=e.shape.length,l=t.length,u=lg(l);if(j(e.shape,t)&&r)return`\n    fn ${a}Index(globalIndex : i32) -> ${og(n)} {\n      return ${og(n)}(${s}[globalIndex]);\n    }\n\n    fn ${a}Coords(coords : ${u}) -> ${og(n)} {\n      return ${og(n)}(${s}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${1===n?"":` / ${n}`}]);\n    }\n    `;const c=Za(e.shape,t),h=l-o;let d="";if(0===o)return`\n    fn ${a}Index(globalIndex : i32) -> ${og(n)}{\n      return get${i}();\n    }\n\n    fn ${a}Coords(coords : ${u}) -> ${og(n)}{\n      return get${i}();\n    }\n  `;d=l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${ug(e+h)} = 0;`)).join("\n");let p="";if(l<2&&o>0)p="coords";else if(l>1){const t=lg(o),n=e.shape.map(((e,t)=>`coords.${ug(t+h)}`)).join(", ");p=`${t}(${n})`}else p="coords";const f=`uniforms.${s.charAt(0).toLowerCase()+s.slice(1)}Shape`,m=`${o}D`;return`\n  fn ${a}Index(globalIndex : i32) -> ${og(n)} {\n    var coords = getCoordsFromIndex(globalIndex);\n    ${d}\n    return ${og(n)}(${s}[getIndexFromCoords${m}(${p}, ${f})${1===n?"":` / ${n}`}]);\n  }\n\n  fn ${a}Coords(coordsIn : ${u}) -> ${og(n)} {\n    var coords = coordsIn;\n    ${d}\n    return ${og(n)}(${s}[getIndexFromCoords${m}(${p}, ${f})${1===n?"":` / ${n}`}]);\n  }\n`}(e,t,n,r));return s}(e,t.shape,n.variableComponents?n.variableComponents[r]:n.outputComponent,n.dispatchLayout.x.length===t.shape.length))).join("\n");c.push(h),c.push(n.getUserCode());const d=bg(n);c.push(hg(d,n));const p=c.join("\n");return p}(n,{dtype:r.dtype,shape:r.shape},t),a=e.createShaderModule({code:i,label:t.constructor.name});let o=ke().get("WEBGPU_PRINT_SHADER");if(""!==o){o=o.toLowerCase();const e=o.split(",");("all"===o||e.some((e=>t.shaderKey.toLowerCase().includes(e))))&&(console.group(t.shaderKey),console.debug(i),console.groupEnd())}return s?e.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):e.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},og=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"f32";switch(e){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component ${t} is not supported.`)}};function lg(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ug(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error(`Index ${e} is not yet supported`)}function cg(){let e;switch(arguments.length){case 0:e="\n        fn main()\n      ";break;case 1:e=`\n        fn main(${arguments.length<=0?void 0:arguments[0]} : i32)\n      `;break;default:throw Error("Unreachable")}return e}function hg(e,t){let n;return n=`\n     ${function(e){return`\n  @compute @workgroup_size(${e.workgroupSize[0]}, ${e.workgroupSize[1]}, ${e.workgroupSize[2]})\n`}(t)}\n      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,\n                @builtin(global_invocation_id) GlobalId : vec3<u32>,\n                @builtin(local_invocation_index) LocalIndex: u32,\n                @builtin(workgroup_id) WorkgroupId : vec3<u32>,\n                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {\n        localId = LocalId;\n        localIndex = LocalIndex;\n        globalId = GlobalId;\n        numWorkgroups = NumWorkgroups;\n        workgroupId = WorkgroupId;\n        ${e?"main(getGlobalIndex());":"main();"};\n      }\n    `,n}const dg="\n  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};\n  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {\n    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;\n  }\n  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {\n    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);\n    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);\n  }\n",pg="\n  fn isinf(val: f32) -> bool {\n    return abs(val) == uniforms.INFINITY;\n  }\n";function fg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const n=e.length,r=""!==t?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",s=""!==t?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(n<=1)return`fn ${r}(index : i32) -> i32 { return index; }`;const i=le(e),a=lg(n),o=[];for(let u=0;u<n;u++)o.push(`d${u}`);if(1===i.length)return`    fn ${r}(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.${s}; let d1 = index - d0 * uniforms.${s};\n      return vec2<i32>(d0, d1);\n    }`;let l;return l="var index2 = index;"+i.map(((e,t)=>`${`let ${o[t]} = index2 / uniforms.${s}.${ug(t)}`}; ${t===i.length-1?`let ${o[t+1]} = index2 - ${o[t]} * uniforms.${s}.${ug(t)}`:`index2 = index2 - ${o[t]} * uniforms.${s}.${ug(t)}`};`)).join(""),`\n    fn ${r}(index : i32) -> ${a} {\n      ${l}\n      return ${a}(${o.join(",")});\n    }\n  `}function mg(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;case 5:t+="\n        fn getOutputIndexFromCoords(coords : vec5) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u;\n        }\n        ";break;case 6:t+="\n        fn getOutputIndexFromCoords(coords : vec6) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u * uniforms.outShapeStrides.u +\n              coords.v;\n        }\n        ";break;default:B(!1,(()=>`Unsupported ${e}D shape`))}return t}function gg(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function yg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if("float32"===e)return og(t,"f32");if("int32"===e||"bool"===e)return og(t,"i32");throw new Error(`type ${e} is not supported.`)}function bg(e){return(!e.dispatchLayout.hasOwnProperty("y")||0===e.dispatchLayout.y.length)&&(!e.dispatchLayout.hasOwnProperty("z")||0===e.dispatchLayout.z.length)}const vg=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function xg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1];const[s,i,a]=[Math.ceil(vg(e.x.map((e=>t[e])))/(n[0]*r[0])),e.y?Math.ceil(vg(e.y.map((e=>t[e])))/(n[1]*r[1])):1,e.z?Math.ceil(vg(e.z.map((e=>t[e])))/(n[2]*r[2])):1];return[s,i,a]}function wg(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return[8,8,1];const n=vg(e.x.map((e=>t[e]))),r=vg(e.y.map((e=>t[e])));return n<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function kg(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return[4,4,1];const n=vg(e.x.map((e=>t[e]))),r=vg(e.y.map((e=>t[e])));return n<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function Sg(e){return{x:e.map(((e,t)=>t))}}function Cg(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error(`Unknown dtype ${e}`)}function Ig(){return!("undefined"===typeof globalThis||!globalThis.navigator||!globalThis.navigator.gpu)}function _g(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&B("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGPU backend.`))}))}var Tg;!function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"}(Tg||(Tg={}));const Ng=ke().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD");class Eg extends O{nextDataId(){return Eg.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!Ig())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new Qm(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new Zm(this.device),this.textureManager=new eg(this.device),this.tensorMap=new R(this,fi()),ke().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.tensorMap.has(e))return!0;const n=this.tensorMap.get(e);return t?n.refCount=0:n.refCount--,!(n.refCount>0)&&(null!=n.complexTensorInfos&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);t&&t.resource&&(t.external||(t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource)),t.resource=null)}refCount(e){if(this.tensorMap.has(e)){return this.tensorMap.get(e).refCount}return 0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){if(this.tensorMap.has(e)){this.tensorMap.get(e).refCount--}}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:n,shape:t,values:e,refCount:1}),r}move(e,t,n,r,s){if("complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:n,values:t,refCount:s})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach((e=>{this.releaseResource(e),this.tensorMap.delete(e)})),this.uniformPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e))),this.stagingPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e,!1))),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map(((t,n)=>{this.pipelineCache[t]=e[n]}))}async getBufferData(e){if(ke().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const t=e.size,n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const r=n.getMappedRange().slice(0);return n.unmap(),null!=n&&this.bufferManager.releaseBuffer(n),ke().getBool("WEBGPU_USE_PROFILE_TOOL")&&(B(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(e,t){const n=this.tensorMap.get(e);return n.values=t,n.values}readSync(e){const t=this.tensorMap.get(e),{values:n,complexTensorInfos:r}=t;if(null!=n||"string"===t.dtype)return n;if("complex64"===t.dtype){const t=he(qp(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)).buffer,"float32");return this.convertAndCacheOnCPU(e,t),t}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const s=["opaque","premultiplied"],i=t.resource,a=i.size;B(a%4===0,(()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4."));const o=a/4,l=new ArrayBuffer(a),u=256,c=256,h=s.map((e=>new OffscreenCanvas(u,c))),d=new OffscreenCanvas(u,c);this.endComputePassEncoder(),h.map(((e,t)=>{const n=e.getContext("webgpu");return n.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:s[t]}),n.getCurrentTexture()})).map(((e,t)=>{const n=(n,r,a)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:1024,offset:a},{texture:e},{width:n,height:r}),this.submitQueue();const o=d.getContext("2d",{willReadFrequently:!0});o.clearRect(0,0,n,r),o.drawImage(h[t],0,0);const u=o.getImageData(0,0,n,r).data,c=s[t],p=new Uint8ClampedArray(l,a,n*r*4);for(let e=0;e<p.length;e+=4)if("premultiplied"===c)p[e+3]=u[e+3];else{const t=u[e];p[e]=u[e+2],p[e+1]=u[e+1],p[e+2]=t}},r=Math.floor(o/65536);let a=u,p=c,f=0;for(let s=0;s<r;s++)n(a,p,f),f+=262144;const m=o%65536;p=Math.floor(m/u),p>0&&(n(a,p,f),f+=1024*p),a=m%u,a>0&&n(a,1,f)}));const p=he(l,t.dtype);return this.convertAndCacheOnCPU(e,p),p}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:n}=t;if(null!=n)return n;let r;if("complex64"===t.dtype){const e=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]);r=qp(e[0],e[1])}else{r=he(await this.getBufferData(t.resource),t.dtype)}return this.convertAndCacheOnCPU(e,r),r}copyBuffer(e){const t=e.size,n=e.usage,r=this.bufferManager.acquireBuffer(t,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),r}createTensorFromGPUData(e,t,n){let r=e.buffer;if("complex64"===n)throw new Error("Cannot write to a complex64 dtype. ");const s={id:this.nextDataId()};this.tensorMap.set(s,{dtype:n,shape:t,values:null,refCount:1,external:e.zeroCopy});const i=this.tensorMap.get(s),a=Cg(i.dtype)*U(i.shape);if(e.buffer.size<a)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${a})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return!0!==e.zeroCopy&&(r=this.copyBuffer(r)),i.resource=r,fi().makeTensorFromDataId(s,t,n,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:n,dtype:r,shape:s,resource:i}=t;if("complex64"===r)throw new Error("Does not support reading buffer for complex64 dtype.");if(null==i)throw null!=n?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const a=i,o=a.size,l=a.usage,u=this.bufferManager.acquireBuffer(o,l);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,u,0,o),this.submitQueue();const c=this.makeTensorInfo(s,r),h=fi().makeTensorFromTensorInfo(c);return this.tensorMap.get(c.dataId).resource=u,{tensorRef:h,buffer:u}}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>fs(e)));return _a(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return _a(e.shape,e.dtype,t)}async time(e){this.supportTimestampQuery||this.hasTimestampQueryWarned||(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=gs(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=gs(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(s);return a.kernelMs=L(o),a.getExtraProfileInfo=()=>o.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,a}makeTensorInfo(e,t,n){"string"===t&&null!=n&&n.length>0&&re(n[0])&&(n=n.map((e=>ps(e))));return{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const t=this.tensorMap.get(e.dataId).resource;return t instanceof GPUBuffer?{buffer:t}:t instanceof GPUTexture?t.createView():t}uploadToGPU(e){const t=this.tensorMap.get(e);if(null!=t.resource)return;const n=Cg(t.dtype)*U(t.shape);let r;const s=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(r=this.bufferManager.acquireBuffer(n,s,!0),"unmapped"===r.mapState){const e=this.bufferManager.acquireBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),s=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(s).set(t.values):new Float32Array(s).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,n),this.stagingPendingDisposal.push(e)}else{const e=r.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(e).set(t.values):new Float32Array(e).set(t.values),r.unmap()}t.values=null}else r=this.bufferManager.acquireBuffer(n,s);t.resource=r}makeUniforms(e){let t=0,n=0;const r=[];let s=1;e.forEach((e=>{let i;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:i=4;break;case 2:i=8;break;case 3:case 4:case 5:case 6:i=16;break;default:B(!1,(()=>`Unsupported ${e.data.length}D shape`))}5!==n&&6!==n||(i=16),i>s&&(s=i),t=Math.ceil(t/i)*i,n=e.data.length,r.push(t),t+=4*e.data.length})),t=Math.ceil(t/s)*s;const i=new ArrayBuffer(t);e.forEach(((e,t)=>{const n=r[t];"int32"===e.type?new Int32Array(i,n,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(i,n,e.data.length).set(e.data):new Float32Array(i,n,e.data.length).set(e.data)}));const a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(a,0,i,0,t),this.uniformPendingDisposal.push(a),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,n,r,s){if(s||(s=this.makeTensorInfo(e.outputShape,n)),0===U(s.shape))return this.tensorMap.get(s.dataId).values=J(s.dtype,0),s;this.uploadToGPU(s.dataId),e.dispatch=((e,t)=>{const n=e.limits.maxComputeWorkgroupsPerDimension,r=t.dispatchLayout,s=t.dispatch;if(s.every((e=>e<=n)))return s;B(s[0]>n&&void 0===r.y&&void 0===r.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let i=Math.ceil(Math.sqrt(s[0]));return i>n?(i=Math.ceil(Math.cbrt(s[0])),B(i<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[i,i,i]):[i,i,1]})(this.device,e);const i=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}}));e.shaderKey=function(e,t,n){let r=e.shaderKey;if(null!=e.pixelsOpType)return r;const s=[],i=[];t.forEach((e=>{s.push(e.shape),i.push(e.dtype)})),s.push(n.shape),i.push(n.dtype);const a=t.map((e=>Za(e.shape,n.shape))),o=t.map((e=>j(e.shape,n.shape))).join("_"),l=a.map((e=>e.join("_"))).join(";"),u=gg(e)?"flatDispatch":"";return r+="_"+(e.workgroupSize?e.workgroupSize.join(","):"")+s.map((e=>e.length)).join(",")+i.join(",")+e.variableNames.join(",")+l+o+u,r}(e,i,s);const a=ke().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=ag(this.device,e,i,s,a)),e.pipeline=this.pipelineCache[e.shaderKey],a||this.recordAndSubmit(e,s,t,r),s}recordAndSubmit(e,t,n,r){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let s=[],i=[];const a="int32";if(null==e.pixelsOpType){s.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=n.concat(t).map((e=>e.shape));const e="int32";i.map((t=>{s.push({type:e,data:t});const n=le(t);s.push({type:e,data:n})}))}else{const e=le(t.shape);s.push({type:a,data:e})}if(e.size){const t=U(e.outputShape);s.push({type:a,data:[e.outputComponent?t/e.outputComponent:t]})}r&&(s=[...s,...r]);const o=[this.tensorToBinding(t),...n.map((e=>this.tensorToBinding(e))),this.makeUniforms(s)];n.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(t.dataId);const l=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:o.map(((e,t)=>({binding:t,resource:e})))}),u=null!=this.activeTimers;this.ensureCommandEncoderReady();const c={};u&&this.supportTimestampQuery?(this.endComputePassEncoder(),null==this.querySet&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),c.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(c)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(c)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,l),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(u||ke().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===ig.DRAW)&&(this.endComputePassEncoder(),u?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;null==this.queryResolveBuffer&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,8*this.querySetCount),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),n=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ng;return ke().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).resource&&U(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(null!=this.querySet&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}var $g;Eg.nextDataId=0,Ig()&&ki("webgpu",(async()=>{const e={powerPreference:ke().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},r=[];t.features.has("timestamp-query")&&r.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&r.push(["bgra8unorm-storage"]),n.requiredFeatures=r;const s=t.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:s.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:s.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:s.maxStorageBufferBindingSize,maxBufferSize:s.maxBufferSize,maxComputeWorkgroupSizeX:s.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:s.maxComputeInvocationsPerWorkgroup};const i=await t.requestDevice(n),a="info"in t?t.info:"requestAdapterInfo"in t?await t.requestAdapterInfo():void 0;return new Eg(i,a)}),3),function(e){e[e.ADD=0]="ADD",e[e.ATAN2=1]="ATAN2",e[e.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",e[e.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",e[e.DIV=4]="DIV",e[e.ELU_DER=5]="ELU_DER",e[e.EQUAL=6]="EQUAL",e[e.FLOOR_DIV=7]="FLOOR_DIV",e[e.GREATER=8]="GREATER",e[e.GREATER_EQUAL=9]="GREATER_EQUAL",e[e.LESS=10]="LESS",e[e.LESS_EQUAL=11]="LESS_EQUAL",e[e.LOGICAL_AND=12]="LOGICAL_AND",e[e.LOGICAL_OR=13]="LOGICAL_OR",e[e.MAX=14]="MAX",e[e.MIN=15]="MIN",e[e.MOD=16]="MOD",e[e.MUL=17]="MUL",e[e.NOT_EQUAL=18]="NOT_EQUAL",e[e.POW=19]="POW",e[e.PRELU=20]="PRELU",e[e.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",e[e.SUB=22]="SUB"}($g||($g={}));function Ag(e,t){let n;do{switch(e){case $g.ATAN2:n="let resultTemp = atan2(a, b);";break;case $g.MAX:n="let resultTemp = max(a, b);";break;case $g.MIN:n="let resultTemp = min(a, b);";break;case $g.MOD:n=t?"\n  let isNaN = !vec4<bool>(b);\n  var resultTemp = vec4<f32>(a % b);\n  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {\n    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];\n  }\n  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {\n    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];\n  }\n  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {\n    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];\n  }\n  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {\n    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];\n  }\n":"\n  let isNaN = b == 0.;\n  var resultTemp = a % b;\n  resultTemp = select((resultTemp + b) % b, resultTemp,\n      (a < 0. && b < 0.) || (a >= 0. && b > 0.));\n";break;case $g.NOT_EQUAL:n=t?"\n  var resultTemp = vec4<f32>(a != b);\n  let valueForNaN = 1.0;\n":"\n  var resultTemp = f32(a != b);\n  let valueForNaN = 1.0;\n";break;case $g.POW:n=t?"\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);\n":"\n  let isNaN = a < 0.0 && floor(b) < b;\n  if (b == 0.0) {\n    return 1.0;\n  }\n  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),\n      round(abs(b) % 2.0) != 1.0);\n";break;default:continue}let r,s,i;return t?(r="isnanVec4",s="vec4<f32>",i="vec4<bool>"):(r="isnan",s="f32",i="bool"),`\n      let aIsNaN = ${r}(a);\n      let aPostLegalization = select(a, ${s}(42), aIsNaN);\n      let bIsNaN = ${r}(b);\n      let bPostLegalization = select(b, ${s}(42), bIsNaN);\n      let isNaN = false;\n      let valueForNaN = uniforms.NAN;\n      {\n        let a = aPostLegalization;\n        let b = bPostLegalization;\n        ${n}\n        return select(\n            resultTemp, ${s}(valueForNaN),\n            ${i}(isNaN) | aIsNaN | bIsNaN);\n      }\n    `}while(0);switch(e){case $g.ADD:n="let resultTemp = a + b;";break;case $g.COMPLEX_MULTIPLY_IMAG:n="let resultTemp = areal * bimag + aimag * breal;";break;case $g.COMPLEX_MULTIPLY_REAL:n="let resultTemp = areal * breal - aimag * bimag;";break;case $g.DIV:n="let resultTemp = a / b;";break;case $g.ELU_DER:n="let resultTemp = select(a * (b + 1.0), a, b >= b - b);";break;case $g.EQUAL:n="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a == b);\n";break;case $g.FLOOR_DIV:n="\n  let remainder =\n      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));\n  let quotient = (a - remainder) / b;\n  let resultTemp =\n      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));\n";break;case $g.GREATER:n="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a > b);\n";break;case $g.GREATER_EQUAL:n="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a >= b);\n";break;case $g.LESS:n="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a < b);\n";break;case $g.LESS_EQUAL:n="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a <= b);\n";break;case $g.LOGICAL_AND:return t?"return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));":"return f32(a >= 1.0 && b >= 1.0);";case $g.LOGICAL_OR:return t?"return min(vec4<f32>(a >= vec4<f32>(1.0)) +\n  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));":"return f32(a >= 1.0 || b >= 1.0);";case $g.MUL:n="let resultTemp = a * b;";break;case $g.PRELU:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return b * a; }  return a;";case $g.SQUARED_DIFFERENCE:n="let resultTemp = (a - b) * (a - b);";break;case $g.SUB:n="let resultTemp = a - b;"}return`\n    ${n}\n    return resultTemp;\n  `}var Rg;!function(e){e[e.ABS=0]="ABS",e[e.ACOS=1]="ACOS",e[e.ACOSH=2]="ACOSH",e[e.ASIN=3]="ASIN",e[e.ASINH=4]="ASINH",e[e.ATAN=5]="ATAN",e[e.ATANH=6]="ATANH",e[e.CEIL=7]="CEIL",e[e.COS=8]="COS",e[e.COSH=9]="COSH",e[e.ELU=10]="ELU",e[e.ERF=11]="ERF",e[e.EXP=12]="EXP",e[e.EXPM1=13]="EXPM1",e[e.FLOOR=14]="FLOOR",e[e.IS_FINITE=15]="IS_FINITE",e[e.IS_INF=16]="IS_INF",e[e.IS_NAN=17]="IS_NAN",e[e.LINEAR=18]="LINEAR",e[e.LOG=19]="LOG",e[e.LOG1P=20]="LOG1P",e[e.LOGICAL_NOT=21]="LOGICAL_NOT",e[e.NEG=22]="NEG",e[e.RELU=23]="RELU",e[e.RELU6=24]="RELU6",e[e.LEAKYRELU=25]="LEAKYRELU",e[e.RECIPROCAL=26]="RECIPROCAL",e[e.ROUND=27]="ROUND",e[e.RSQRT=28]="RSQRT",e[e.SELU=29]="SELU",e[e.SIGMOID=30]="SIGMOID",e[e.SIGN=31]="SIGN",e[e.SIN=32]="SIN",e[e.SINH=33]="SINH",e[e.SOFTPLUS=34]="SOFTPLUS",e[e.SQRT=35]="SQRT",e[e.SQUARE=36]="SQUARE",e[e.STEP=37]="STEP",e[e.TAN=38]="TAN",e[e.TANH=39]="TANH",e[e.TO_INT=40]="TO_INT"}(Rg||(Rg={}));const Og=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  let p = ${Vp};\n  let a1 = ${Wp};\n  let a2 = ${Up};\n  let a3 = ${Gp};\n  let a4 = ${jp};\n  let a5 = ${Hp};\n\n  let sign = sign(a);\n  let absA = abs(a);\n  let t = 1.0 / (1.0 + p * absA);\n  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));\n`,Dg=`\n  if (a >= 0.0) {\n    return ${Bp} * a;\n  } else {\n    return ${Lp} * (exp(a) - 1.0);\n  }\n`;function Fg(e,t){switch(e){case Rg.ABS:return"return abs(a);";case Rg.ACOS:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return acos(a);\n";case Rg.ACOSH:return"\n  if (a < 1.) {\n    return uniforms.NAN;\n  }\n  return acosh(a);\n";case Rg.ASIN:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return asin(a);\n";case Rg.ASINH:return"return asinh(a);";case Rg.ATAN:return"\n  if (isnan(a)) {\n    return uniforms.NAN;\n  }\n  return atan(a);\n";case Rg.ATANH:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  if (a == 1.) {\n    return uniforms.INFINITY;\n  }\n  if (a == -1.) {\n    return -uniforms.INFINITY;\n  }\n  return atanh(a);\n";case Rg.COS:return"return cos(a);";case Rg.COSH:return"\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n";case Rg.CEIL:return"return ceil(a);";case Rg.ELU:return t?"\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case Rg.ERF:return Og;case Rg.EXP:return"return exp(a);";case Rg.EXPM1:return"return exp(a) - 1.0;";case Rg.FLOOR:return"return floor(a);";case Rg.IS_FINITE:return"return f32(!isnan(a) && !isinf(a));";case Rg.IS_INF:return"return f32(isinf(a));";case Rg.IS_NAN:return"return f32(isnan(a));";case Rg.LINEAR:return"return a;";case Rg.LOG:return"if (a < 0.0) { return uniforms.NAN; }\n  return log(a);";case Rg.LOG1P:return"\n  if (isnan(a)) { return a; }\n  return log(1.0 + a);\n";case Rg.LOGICAL_NOT:return"return f32(!(a >= 1.0));";case Rg.NEG:return"return -a;";case Rg.LEAKYRELU:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return uniforms.alpha * a; } return a;";case Rg.RECIPROCAL:return"return 1.0 / a;";case Rg.RELU:return t?"\n  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));\n":"return select(a, 0.0, a < 0.0);";case Rg.RELU6:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case Rg.ROUND:return"return round(a);";case Rg.RSQRT:return"return inverseSqrt(a);";case Rg.SELU:return Dg;case Rg.SIGMOID:return"return 1.0 / (1.0 + exp(-1.0 * a));";case Rg.SIGN:return"return sign(a);";case Rg.SIN:return"return sin(a);";case Rg.SINH:return"\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n";case Rg.SOFTPLUS:return"\n  let epsilon = 1.1920928955078125e-7;\n  let threshold = log(epsilon) + 2.0;\n\n  let too_large = a > -threshold;\n  let too_small = a < threshold;\n  let exp_a = exp(a);\n\n  if (too_large) {\n    return a;\n  } else if (too_small) {\n    return exp_a;\n  } else {\n    return log(exp_a + 1.0);\n  }\n";case Rg.SQRT:return"return sqrt(a);";case Rg.SQUARE:return"return a * a;";case Rg.STEP:return"\n  if (isnan(a)) {\n    return a;\n  }\n\n  return select(uniforms.stepAlpha, 1.0, a > 0.0);\n";case Rg.TAN:return"return tan(a);";case Rg.TANH:return"\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n";case Rg.TO_INT:return"return f32(i32((a)));";default:throw new Error(`BinaryType ${e} is not implemented!`)}}function Mg(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3;if(null===e)return"";let s="";if("linear"===e)s=Fg(Rg.LINEAR);else if("relu"===e)s=Fg(Rg.RELU,n);else if("elu"===e)s=Fg(Rg.ELU,n);else if("relu6"===e)s=Fg(Rg.RELU6,n);else if("prelu"===e)s=Ag($g.PRELU,n);else if("sigmoid"===e)s=Fg(Rg.SIGMOID,n);else{if("leakyrelu"!==e)throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);s=Fg(Rg.LEAKYRELU,n)}const i=og(n?4:1);let a="";return a=t?`\n      fn activation(a : ${i}, coords : vec${r}<i32>) -> ${i} {\n        let b = getPreluActivationWeightsByOutputCoords(coords);\n        ${s}\n      }`:`\n      fn activation(a : ${i}, coords : vec${r}<i32>) -> ${i} {\n        ${s}\n      }`,a}function Pg(e,t){return`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      ${t?"value = activation(value, coords);":""}\n      `}function zg(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;B(e&&1===s||!e,(()=>`transposeA ${e} is not compatible with component size ${s}`));const i=`\n      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}\n\n    `,a=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`\n  fn mm_readA(batch: i32, row: i32, col: i32) -> ${og(s)} {\n    var value = ${og(s)}(0.0);\n    ${n&&r?i:`\n    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}\n    {\n      ${i}\n    }\n    `}\n    return value;\n  }\n\n  fn mm_readB(batch: i32, row: i32, col: i32) -> ${og(s)} {\n    var value = ${og(s)}(0.0);\n    ${a}\n    return value;\n  }\n  `}function Lg(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>7&&void 0!==arguments[7]?arguments[7]:1;return`\n  ${zg(n,r,s,i,arguments.length>6&&void 0!==arguments[6]&&arguments[6],a)}\n  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${og(a)}) {\n    ${s&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}\n    {\n      var value = valueIn;\n      let coords = vec3<i32>(batch, row, col);\n      ${Pg(e,t)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], value);\n    }\n  }\n  `}function Bg(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,a=arguments.length>6&&void 0!==arguments[6]&&arguments[6];const o=t[1]*e[1],l=t[0]*e[0],u=n?o:r,c=n?r:o,h=u/t[0],d=r/t[1],p=e[1],f=e[0];return B((n&&4===h&&4===e[1]||!n&&(3===h||4===h))&&u%t[0]===0&&r%t[1]===0&&4===e[0],(()=>`If transposeA ${n} is true, innerElementSize ${h} and workPerThread[1] ${e[1]} must be 4.\n          Otherwise, innerElementSize ${h} must be 3 or 4.\n      tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${r} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`)),`\n  var<workgroup> mm_Asub : array<array<vec${h}<f32>, ${u/h}>, ${c}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/e[0]}>, ${r}>;\n\n  ${cg()} {\n    let localRow = i32(localId.y);\n    let tileRow = localRow * ${p};\n    let tileCol = i32(localId.x);\n\n    let globalRow = i32(globalId.y) * ${p};\n    let globalCol = i32(globalId.x) * ${f};\n    let batch = ${s?"0":"i32(globalId.z)"};\n    let batchA = ${s||!a?"batch":"batch % uniforms.aShape[0]"};\n    let batchB = ${s||!a?"batch":"batch % uniforms.bShape[0]"};\n    let globalRowStart = i32(workgroupId.y) * ${o};\n\n    let numTiles = ${s?`${Math.ceil(i/r)}`:`(uniforms.dimInner - 1) / ${r} + 1`};\n    var kStart = ${s?`i32(globalId.z) * ${i}`:"0"};\n\n    var acc: array<vec4<f32>, ${p}>;\n\n    // Loop over shared dimension.\n    let tileRowB = localRow * ${d};\n    for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${p}; innerRow++) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            ${((e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol * ${t});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRow + innerRow,\n          kStart + inputCol * ${t});\n        `)(n,h)}\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < ${d}; innerRow++) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);\n        }\n        kStart = kStart + ${r};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        ${((e,t,n,r)=>{if(e)return`\n      for (var k = 0; k < ${r}; k++) {\n        let BCached0 = mm_Bsub[k][tileCol];\n        let ACached0 = mm_Asub[k][localRow];\n        for (var i = 0; i < ${n}; i++) {\n          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);\n        }\n      }`;{let e="",s="";for(let n=0;n<t;n++)e+=`let BCached${n} = mm_Bsub[k * ${t} + ${n}][tileCol];`,s+=`acc[i] = fma(BCached${n}, vec4<f32>(ACached[${n}]), acc[i]);`;return`\n      for (var k = 0; k < ${r/t}; k++) {\n        ${e}\n        for (var i = 0; i < ${n}; i++) {\n          let ACached = mm_Asub[tileRow + i][k];\n          ${s}\n        }\n      }`}})(n,h,p,r)}\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < ${p}; innerRow++) {\n        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n    }\n  }`}const Vg=e=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRowStart + inputRow,\n          kStart + inputCol);\n        ";function Wg(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const l=e[1]*t[1],u=e[0]*t[0],c=n?l:r,h=n?r:l;B(h%t[1]===0&&c%t[0]===0&&r%t[1]===0,(()=>`tileAHight ${h} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${r} must be divisible by workgroupSize[1]${t[1]}`));const d=h/t[1],p=c/t[0],f=r/t[1],m=e[1],g=e[0],y=a?`\n      let localRow = i32(localId.y);\n      let localCol = i32(localId.x);\n      let globalRowStart = i32(workgroupId.y) * ${l};\n      let globalColStart = i32(workgroupId.x) * ${u};\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${t[1]}) {\n          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n            ${Vg(n)}\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${t[1]}) {\n              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n              kStart + inputRow,\n              globalColStart + inputCol);\n          }\n        }\n        kStart = kStart + ${r};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        var BCached : array<f32, ${g}>;\n        for (var k = 0; k < ${r}; k++) {\n          for (var inner = 0; inner < ${g}; inner++) {\n            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n          }\n          for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n            let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n            for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n              acc[innerRow][innerCol] =\n                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n            }\n          }\n        }\n        workgroupBarrier();\n      }\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          let gCol = globalColStart + localCol + innerCol * ${t[0]};\n          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n        }\n      }\n      `:`\n  let tileRow = i32(localId.y) * ${m};\n  let tileCol = i32(localId.x) * ${g};\n\n  let globalRow = i32(globalId.y) * ${m};\n  let globalCol = i32(globalId.x) * ${g};\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let tileRowA = i32(localId.y) * ${d};\n  let tileColA = i32(localId.x) * ${p};\n  let tileRowB = i32(localId.y) * ${f};\n  // Loop over shared dimension.\n  for (var t = 0; t < numTiles; t++) {\n    // Load one tile of A into local memory.\n    for (var innerRow = 0; innerRow < ${d}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${p}; innerCol++) {\n        let inputRow = tileRowA + innerRow;\n        let inputCol = tileColA + innerCol;\n        ${Vg(n)}\n      }\n    }\n\n    // Load one tile of B into local memory.\n    for (var innerRow = 0; innerRow < ${f}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n        let inputRow = tileRowB + innerRow;\n        let inputCol = tileCol + innerCol;\n        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n          kStart + inputRow,\n          globalCol + innerCol);\n      }\n    }\n    kStart = kStart + ${r};\n    workgroupBarrier();\n\n    // Compute acc values for a single thread.\n    var BCached : array<f32, ${g}>;\n    for (var k = 0; k < ${r}; k++) {\n      for (var inner = 0; inner < ${g}; inner++) {\n        BCached[inner] = mm_Bsub[k][tileCol + inner];\n      }\n\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(n)}\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          acc[innerRow][innerCol] =\n              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n        }\n      }\n    }\n\n    workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n    for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n      mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n          acc[innerRow][innerCol]);\n    }\n  }\n  `;return`\n    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${h}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${r}>;\n\n    ${cg()} {\n      let batch = ${s?"0":"i32(globalId.z)"};\n      let batchA = ${s||!o?"batch":"batch % uniforms.aShape[0]"};\n      let batchB = ${s||!o?"batch":"batch % uniforms.bShape[0]"};\n      let numTiles = ${s?`${Math.ceil(i/r)}`:`(uniforms.dimInner - 1) / ${r} + 1`};\n      var kStart = ${s?`i32(globalId.z) * ${i}`:"0"};\n\n      var acc : array<array<f32, ${g}>, ${m}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n      ${y}\n    }\n  `}class Ug{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const l=n?e[1]:e[2];if(this.isVec4=(l%4===0&&!n||t[1]%4===0&&n)&&t[2]%4===0&&!r,this.outputComponent=this.isVec4?4:1,this.isVectorA=1===t[1]&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const e=function(e,t,n){const r=[8,8,1],s=[4,4,1];return arguments.length>3&&void 0!==arguments[3]&&arguments[3]||(e<=8&&(s[1]=1),t<=16&&n<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:s}}(t[1],l,t[2],n);this.workgroupSize=e.workgroupSize,this.elementsPerThread=e.elementsPerThread}this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const u=null!=s,c=null!=a;u&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=o,this.transposeA=n,this.transposeB=r,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=c,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],l),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${n}_${r}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,n){const r=this.workgroupSize[1]*this.elementsPerThread[1],s=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=4*this.workgroupSize[0]:this.tileInner=s;return[e%r===0,t%s===0,n%this.tileInner===0]}getUserCode(){const e=`\n      ${Mg(this.activation,this.hasPreluActivationWeights,this.isVec4)}\n      ${Lg(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}\n      ${this.isVec4?Bg(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];B(1===e[1]&&1===e[2],(()=>`A linear work group size is required. But got ${e}.`));const n=4*e[0];return`\n    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;\n\n    ${cg()} {\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;\n      let batch = i32(globalId.z);\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        let colA = t * ${n} + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(${(e=>e?"\n      mm_readA(batchA, colA, globalRow),\n      mm_readA(batchA, colA + 1, globalRow),\n      mm_readA(batchA, colA + 2, globalRow),\n      mm_readA(batchA, colA + 3, globalRow)\n  ":"\n      mm_readA(batchA, globalRow, colA),\n      mm_readA(batchA, globalRow, colA + 1),\n      mm_readA(batchA, globalRow, colA + 2),\n      mm_readA(batchA, globalRow, colA + 3)\n  ")(t)});\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${n/4}; k++) {\n          let rowB = t * ${n} + k * 4;\n          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),\n                              mm_readB(batchB, rowB + 1, globalCol),\n                              mm_readB(batchB, rowB + 2, globalCol),\n                              mm_readB(batchB, rowB + 3, globalCol));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      mm_write(batch, globalRow, globalCol, acc);\n    }\n  `}(this.workgroupSize,this.transposeA):Wg(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}\n    `;return e}}class Gg{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize);const a=null!=r,o=null!=i;a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=a,this.activation=s,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){var e;return`\n      ${Mg(this.activation,this.hasPreluActivationWeights)}\n      ${Lg(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${e=this.workgroupSize[0],`\n    var<workgroup> sumValues : array<f32, ${e}>;\n    ${cg()} {\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + ${e}) {\n        let dataA = mm_readA(batchA, row, k);\n        let dataB = mm_readB(batchB, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = ${e/2}u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  `}\n    `}}class jg{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];const l=null!=i;l&&this.variableNames.push("bias");const u=null!=o;u&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=s,this.addBias=l,this.activation=a,this.hasPreluActivationWeights=u,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${s}`}getUserCode(){return`\n      ${Mg(this.activation,this.hasPreluActivationWeights)}\n      ${Lg(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${function(e){const t=e[1],n=e[0],r=t>n?t:n;return`\n  var<workgroup> mm_Asub : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${r}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Read data from global memory to registers firstly, then store them into\n  // shared memory, so it is instruction-Level parallelism for arithmetic\n  // operations and others handle IO operations between barrier api, makes ALU\n  // and load/store units work simultaneously, could improves the performance.\n  ${cg()} {\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n    let batchA = batch % uniforms.aShape[0];\n    let batchB = batch % uniforms.bShape[0];\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = 0;\n    var regA = mm_readA(batchA, globalRow, globalColA);\n    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n    globalColA = globalColA + ${r};\n    globalRowB = globalRowB + ${r};\n\n    for (var t = 0; t < numTiles; t = t + 1) {\n      mm_Asub[tileRow][tileCol] = regA;\n      mm_Bsub[2 * tileRow][tileCol] = regB0;\n      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;\n\n      workgroupBarrier();\n\n      regA = mm_readA(batchA, globalRow, globalColA);\n      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n      globalColA = globalColA + ${r};\n      globalRowB = globalRowB + ${r};\n\n      for (var k = 0; k < ${r}; k = k + 1) {\n        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];\n      }\n      workgroupBarrier();\n    }\n\n    mm_write(batch, globalRow, globalCol, acc);\n  }\n  `}(this.workgroupSize)}\n    `}}class Hg{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,B(1===e[0],(()=>"MatMulSplitKProgram only supports batch = 1.")),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const s=(n&&this.outputShape[1]%4===0||!n&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=s?4:1,s||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=xg(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=r,this.shaderKey=`matMulSplitK_${n}_${r}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`\n      ${zg(!1,this.transposeB,!1,!1,!1,e)}\n      fn mm_write(batch: i32, row : i32, col : i32, value : ${og(e)}) {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n          let coords = vec3<i32>(batch, row, col);\n          let flatIndex = getOutputIndexFromCoords(coords);\n          // The problem is that we should initialize output to zero before using.\n          // Otherwise, the original value will be added to the result.\n          for (var i = 0; i < ${e}; i = i + 1) {\n            ${sg("&result[flatIndex + i]",""+(e>1?"value[i]":"value"),"float32")}\n          }\n        }\n      }\n      ${4===e?Bg(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Wg(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}\n    `}}class qg{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=r,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`\n    ${Mg(this.activation,this.hasPreluActivationWeights)}\n    ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        var value = getXByOutputIndex(index);\n        ${Pg(this.addBias,this.activation)}\n        setOutputAtIndex(index, value);\n      }\n    }\n    `}}class Kg{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`\n    ${cg("index")} {\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  `}}function Xg(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||ie(s),"string"===i){const e=ee(i,U(r));return e.fill(s),t.makeTensorInfo(r,i,e)}{const e=new Kg(r),n=[{type:"float32",data:[s]}];return t.runWebGPUProgram(e,[],i,n)}}const Yg={kernelName:Ot,backendName:"webgpu",kernelFunc:Xg};function Qg(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:s}=n,i=U(r.shape),a=Y(s,i),o=U(a);return B(i===o,(()=>`The new shape (${a}) has ${o} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:a,dtype:r.dtype}}const Zg={kernelName:Ln,backendName:"webgpu",kernelFunc:Qg};function Jg(e){let{a:t,b:n,transposeA:r,transposeB:s,backend:i,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e;const c=t.shape.length,h=n.shape.length,d=r?t.shape[c-2]:t.shape[c-1],p=s?n.shape[h-1]:n.shape[h-2],f=r?t.shape[c-1]:t.shape[c-2],m=s?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=U(g),v=U(y),x=eo(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);B(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${s} must match.`));const w=r?[b,d,f]:[b,f,d],k=s?[v,m,p]:[v,p,m],S=Qg({inputs:{x:t},backend:i,attrs:{shape:w}}),C=Qg({inputs:{x:n},backend:i,attrs:{shape:k}}),I=[S,C],_=Math.max(b,v),T=[S,C],N=[{type:"int32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[d]}];let E,$;const A=[_,f,m];let R=ke().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(R<0){const e=ke().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),t=e>0?e:i.thresholdToIncreaseWorkgroups,n=_*Math.ceil(f/32)*Math.ceil(m/32);R=n<=t||f<=8&&n<=2*t?_*f*m<=128?Tg.MatMulReduceProgram:1===_&&p>=2e3?Tg.MatMulSplitKProgram:Tg.MatMulSmallOutputSizeProgram:Tg.MatMulPackedProgram}switch(R){case Tg.MatMulReduceProgram:E=new Gg(A,r,s,a,u,o);break;case Tg.MatMulSplitKProgram:if($=Xg({backend:i,attrs:{shape:A,value:0,dtype:t.dtype}}),E=new Hg(A,p,r,s),a||u){$=i.runWebGPUProgram(E,T,t.dtype,N,$);const e=new qg($.shape,a,u,o);let n=null;const r=[$];a&&r.push(a),o&&r.push(o),"leakyrelu"===u&&(n=[{type:"float32",data:[l]}],e.uniforms+=" alpha : f32,");const s=i.runWebGPUProgram(e,r,$.dtype,n);I.push($);const c=Qg({inputs:{x:s},backend:i,attrs:{shape:x}});I.push(s);for(const t of I)i.disposeData(t.dataId);return c}break;case Tg.MatMulSmallOutputSizeProgram:E=new jg(w,k,A,r,s,a,u,o);break;case Tg.MatMulPackedProgram:const e=i.adapterInfo.isIntel();E=new Ug(w,A,r,s,a,u,o,e);break;default:throw new Error(`Unsupported MatMulProgramType ${R}.`)}a&&T.push(a),o&&T.push(o),"leakyrelu"===u&&(N.push({type:"float32",data:[l]}),E.uniforms+=" alpha : f32,"),$=i.runWebGPUProgram(E,T,t.dtype,N,$);const O=Qg({inputs:{x:$},backend:i,attrs:{shape:x}});I.push($);for(const D of I)i.disposeData(D.dataId);return O}const ey={kernelName:Mr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return Jg({a:s,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}};class ty{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=eo(t,n),this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${Ag(this.op,!1)}\n      }\n\n      ${cg("index")} {\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}}class ny{constructor(e,t,n){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=eo(t,n),this.dispatchLayout=Sg(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&n.length>1&&t[0]<128,this.useSharedMemoryWithB=n.length<=1&&t.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const r=t.length>0&&t[t.length-1]%4===0,s=n.length>0&&n[n.length-1]%4===0;r&&s?(this.outputComponent=4,this.variableComponents=[4,4]):r&&(G(n)||1===n[n.length-1])||s&&(G(t)||1===t[t.length-1])?(this.outputComponent=4,this.variableComponents=r?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=4===this.outputComponent?"vec4<f32>":"f32",n=`\n    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {\n      ${Ag(this.op,4===this.outputComponent)}\n    };\n    `;if("shared"===this.type){const t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",r=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);\n          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];\n          let b = getBByOutputIndex(index);`;e=`\n        ${n}\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        ${cg("index")} {\n          // Fill in the shared memory buffer.\n          let localIndex = i32(localId.x);\n          if(localIndex < ${this.lastDimensionSize}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);\n          }\n          workgroupBarrier();\n\n          if(index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            ${r}\n            setOutputAtIndex(index, binaryOperation(a, b));\n          }\n        }\n        `}else e=`\n       ${n}\n       ${cg("index")} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index * ${this.outputComponent});\n           let a = ${t}(getAByOutputCoords(coords));\n           let b = ${t}(getBByOutputCoords(coords));\n           setOutputAtIndex(index, binaryOperation(a, b));\n         }\n       }\n       `;return e}}function ry(e){const{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const sy={kernelName:Wt,backendName:"webgpu",kernelFunc:ry};function iy(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.makeTensorInfo(r.shape,"complex64"),a=n.tensorMap.get(i.dataId),o=ry({inputs:{x:r},backend:n}),l=ry({inputs:{x:s},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const ay={kernelName:Je,backendName:"webgpu",kernelFunc:iy};class oy{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";this.variableNames=["A"],this.size=!0;this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,""!==n&&(this.uniforms=n),this.shaderKey=`unary_${t}`}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${Fg(this.op,!1)}\n      }\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `}}function ly(e){let{opType:t,cpuKernelImpl:n,dtype:r}=e;return e=>{let{inputs:s,backend:i}=e;const{x:a}=s,o=i,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const e=o.tensorMap.get(a.dataId),t=n(e.values,l);return o.makeTensorInfo(a.shape,l,t)}const u=new oy(a.shape,t);return o.runWebGPUProgram(u,[a],l)}}function uy(e){let{opType:t,cpuKernelImpl:n,supportsComplex:r=!1,dtype:s}=e;return e=>{let{inputs:i,backend:a}=e;const{a:o,b:l}=i,u=a;if(r&&"complex64"===o.dtype){const e=u.tensorMap.get(o.dataId),n=u.tensorMap.get(l.dataId);let r,s;if(t!==$g.MUL)[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:o.shape},i={dataId:r.dataId,dtype:r.dtype,shape:l.shape},a=new ny(t,o.shape,l.shape);return u.runWebGPUProgram(a,[s,i],zs(n.dtype,r.dtype))}));else{const t=new ty($g.COMPLEX_MULTIPLY_REAL,o.shape,l.shape),i=new ty($g.COMPLEX_MULTIPLY_IMAG,o.shape,l.shape),a=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:o.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l.shape}];r=u.runWebGPUProgram(t,a,"float32"),s=u.runWebGPUProgram(i,a,"float32")}const i=iy({inputs:{real:r,imag:s},backend:u});return u.disposeData(r.dataId),u.disposeData(s.dataId),i}const c=s||zs(o.dtype,l.dtype);if(("string"===o.dtype||"string"===l.dtype||u.shouldExecuteOnCPU([o,l]))&&null!=n){const e=u.tensorMap.get(o.dataId).values,t=u.tensorMap.get(l.dataId).values,r="string"===o.dtype?Nf(e):e,s="string"===o.dtype?Nf(t):t,[i,a]=n(o.shape,l.shape,r,s,c);return u.makeTensorInfo(a,c,i)}const h=new ny(t,o.shape,l.shape);return u.runWebGPUProgram(h,[o,l],c)}}function cy(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&B("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function hy(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const dy={kernelName:Te,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;cy(t,"abs");let r=new Float32Array(U(t.shape));return r=hy(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function py(e){return(t,n,r,s,i)=>{const a=eo(t,n),o=a.length,l=le(a),u=J(i,U(a)),c=t.length,h=n.length,d=le(t),p=le(n),f=Za(t,a),m=Za(n,a);if(f.length+m.length===0)for(let g=0;g<u.length;++g)u[g]=e(r[g%r.length],s[g%s.length]);else for(let g=0;g<u.length;++g){const t=ye(g,o,l),n=t.slice(-c);f.forEach((e=>n[e]=0));const i=ge(n,c,d),a=t.slice(-h);m.forEach((e=>a[e]=0));const y=ge(a,h,p);u[g]=e(r[i],s[y])}return[u,a]}}function fy(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",a)},o}const my={kernelName:Je,backendName:"cpu",kernelFunc:fy};function gy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return fy({inputs:{real:gy(e,t,"float32"),imag:gy(e,t,"float32")},backend:e})}const r=pe(U(t),n);return e.makeTensorInfo(t,n,r)}function yy(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const by={kernelName:Wt,backendName:"cpu",kernelFunc:yy};function vy(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const xy={kernelName:Mn,backendName:"cpu",kernelFunc:vy};function wy(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=hs([0],n),[s,i]=py(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function ky(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return yy({inputs:{x:s},backend:n});const e=gy(n,s.shape,s.dtype),t=ky({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=fy({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=vy({inputs:{input:s},backend:n}),t=ky({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!te(s.dtype,i)){const e=yy({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const a=n.data.get(s.dataId).values,[o,l,u]=wy(a,s.shape,s.dtype,i);return n.makeTensorInfo(o,l,u)}const Sy={kernelName:Ye,backendName:"cpu",kernelFunc:ky};function Cy(e,t,n,r){return null==n?n=>{let{inputs:s,backend:i}=n;const{a:a,b:o}=s,l=i;cy([a,o],e);const u=l.data.get(a.dataId).values,c=l.data.get(o.dataId).values,h="string"===a.dtype?Nf(u):u,d="string"===a.dtype?Nf(c):c,p=r||a.dtype,[f,m]=t(a.shape,o.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:e=>{let{inputs:s,backend:i}=e;const{a:a,b:o}=s,l=i;if("complex64"===a.dtype||"complex64"===o.dtype){const e=ky({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,i=l.data.get(r.dataId).values,u=l.data.get(s.dataId).values,c=ky({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=l.data.get(d.dataId).values,m=l.data.get(p.dataId).values,[g,y,b]=n(a.shape,o.shape,i,u,f,m),v=l.makeTensorInfo(b,"float32",g),x=l.makeTensorInfo(b,"float32",y),w=fy({inputs:{real:v,imag:x},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(v),l.disposeIntermediateTensorInfo(x),w}{const e=l.data.get(a.dataId).values,n=l.data.get(o.dataId).values,s=r||a.dtype,[i,u]=t(a.shape,o.shape,e,n,s);return l.makeTensorInfo(u,s,i)}}}function Iy(e){return(t,n,r,s,i,a)=>{const o=eo(t,n),l=U(o),u=o.length,c=le(o),h=J("float32",l),d=J("float32",l),p=Za(t,o),f=Za(n,o),m=qp(r,s),g=qp(i,a),y=t.length,b=le(t),v=n.length,x=le(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%m.length,n=w%g.length,r=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[w]=r.real,d[w]=r.imag}else for(let w=0;w<h.length;w++){const t=ye(w,u,c),n=t.slice(-y);p.forEach((e=>n[e]=0));const r=ge(n,y,b),s=t.slice(-v);f.forEach((e=>s[e]=0));const i=ge(s,v,x),a=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[w]=a.real,d[w]=a.imag}return[h,d,o]}}const _y=py(((e,t)=>e+t)),Ty=Iy(((e,t,n,r)=>({real:e+n,imag:t+r}))),Ny=Cy($e,_y,Ty),Ey={kernelName:$e,backendName:"cpu",kernelFunc:Ny};function $y(e,t,n,r,s){const i=U(r),a=pe(s,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(a[n]+=i>0?t[o]:1)}return a}function Ay(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e.shape[0],i=e.shape[1],a=_a([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<i;s++){const i=e.get(o,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?a.set(1,o,i):t.size>0?a.set(a.get(o,i)+t.get(o,s),o,i):a.set(a.get(o,i)+1,o,i))}return a}const Ry=py(((e,t)=>e&t)),Oy=Cy(Ke,Ry),Dy={kernelName:Ke,backendName:"cpu",kernelFunc:Oy};function Fy(e){return(t,n,r)=>{const s=ee(n,t.length);for(let i=0;i<t.length;++i)s[i]=e(t[i],r);return s}}function My(e,t,n){return Py(e,Fy(t),n)}function Py(e,t,n){return r=>{let{inputs:s,attrs:i,backend:a}=r;const{x:o}=s;cy(o,e);const l=a,u=l.data.get(o.dataId).values;let c;if("string"===o.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");c=Nf(u)}else c=u;const h=n||o.dtype,d=t(c,h,i);return l.makeTensorInfo(o.shape,h,d)}}const zy=Fy((e=>Math.ceil(e))),Ly=Py(Qe,zy),By={kernelName:Qe,backendName:"cpu",kernelFunc:Ly};function Vy(e,t,n,r){const s=ee(n,U(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=U(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?Nf(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=i[a++]}r+=e.shape[1]}))}return s}const Wy=py(((e,t)=>e===t?1:0)),Uy=Cy(Nt,Wy,null,"bool"),Gy={kernelName:Nt,backendName:"cpu",kernelFunc:Uy},jy=Fy((e=>Math.exp(e))),Hy=Py(Et,jy,"float32"),qy={kernelName:Et,backendName:"cpu",kernelFunc:Hy},Ky=Fy((e=>Math.expm1(e))),Xy=Py(At,Ky),Yy={kernelName:At,backendName:"cpu",kernelFunc:Xy},Qy=Fy((e=>Math.floor(e))),Zy=Py(Ft,Qy),Jy={kernelName:Ft,backendName:"cpu",kernelFunc:Zy},eb=py(((e,t)=>Math.floor(e/t))),tb=Cy(Mt,eb,null,"int32"),nb={kernelName:Mt,backendName:"cpu",kernelFunc:tb};function rb(e,t,n,r,s,i,a,o,l){const u=_a([r,i],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let t=0;t<s;t++){const i=e[c*s+t];r+=i*a[t],n.push(i)}if(r<0||r>=l/i)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<i;e++)u.values[c*i+e]=t.get(...t.indexToLoc(r*i+e))}return u}function sb(e,t,n){const r=_a(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),i=n[0],a=n[2],o=t.locToIndex([i,a]);n[2]=t.values[o];const l=e.locToIndex(n);0<=l&&l<e.values.length&&(r.values[s]=e.values[l])}return r}const ib=py(((e,t)=>e>t?1:0)),ab=Cy(Bt,ib,null,"bool"),ob={kernelName:Bt,backendName:"cpu",kernelFunc:ab},lb=py(((e,t)=>e>=t?1:0)),ub=Cy(Vt,lb,null,"bool"),cb={kernelName:Vt,backendName:"cpu",kernelFunc:ub},hb=py(((e,t)=>e<t?1:0)),db=Cy(Xt,hb,null,"bool"),pb={kernelName:Xt,backendName:"cpu",kernelFunc:db},fb=py(((e,t)=>e<=t?1:0)),mb=Cy(Yt,fb,null,"bool"),gb={kernelName:Yt,backendName:"cpu",kernelFunc:mb};function yb(e,t,n){const r=(t-e)/(n-1),s=pe(n,"float32");s[0]=e;for(let i=1;i<s.length;i++)s[i]=s[i-1]+r;return s}const bb=Fy((e=>Math.log(e))),vb=Py(Zt,bb),xb={kernelName:Zt,backendName:"cpu",kernelFunc:vb};function wb(e,t,n,r){const s=J(r,U(n));for(let i=0;i<s.length;++i){const n=i*t;let r=e[n];for(let s=0;s<t;++s){const t=e[n+s];(Number.isNaN(t)||t>r)&&(r=t)}s[i]=r}return s}const kb=py(((e,t)=>Math.max(e,t))),Sb=Cy(on,kb),Cb={kernelName:on,backendName:"cpu",kernelFunc:Sb},Ib=py(((e,t)=>Math.min(e,t))),_b=Cy(mn,Ib),Tb={kernelName:mn,backendName:"cpu",kernelFunc:_b},Nb=py(((e,t)=>e*t)),Eb=Iy(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),$b=Cy(vn,Nb,Eb),Ab={kernelName:vn,backendName:"cpu",kernelFunc:$b};function Rb(e,t,n){const r=cs(-1,n);return Nb([],t,r,e,n)}const Ob={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;cy(r,"neg");const s=n.data.get(r.dataId).values,[i,a]=Rb(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,i)}},Db=py(((e,t)=>e!==t?1:0)),Fb=Cy(wn,Db,null,"bool"),Mb={kernelName:wn,backendName:"cpu",kernelFunc:Fb};function Pb(e,t,n,r,s){const i=t.length,a=U(t),o=le(t),l=le(s),u=J(n,U(s));for(let c=0;c<a;++c){const t=ye(c,i,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];u[ge(n,i,l)]=e[c]}return u}function zb(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:i}=n;cy(s,"transpose");const a=s.shape.length,o=new Array(a);for(let u=0;u<o.length;u++)o[u]=s.shape[i[u]];const l=Pb(r.data.get(s.dataId).values,s.shape,s.dtype,i,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const Lb={kernelName:Nr,backendName:"cpu",kernelFunc:zb};function Bb(e,t,n,r){const[s,i]=Su(e,r),a=zs(t,"int32"),o=pe(U(s),a),l=U(i);for(let u=0;u<o.length;++u){const e=u*l;let t=1;for(let r=0;r<l;++r)t*=n[e+r];o[u]=t}return{outVals:o,outShape:s,outDtype:a}}const Vb={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;cy(s,"prod");const o=s.shape.length,l=Q(i,s.shape),u=_u(l,o);let c=l,h=s;const d=[];null!=u&&(h=zb({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=Nu(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=Bb(h.shape,h.dtype,p,c);let y=m;return a&&(y=Cu(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function Wb(e,t,n,r){const s=[];let i=0;const a=t.length-1+n.length,o=new Array(a).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],a=e[u]+1;for(let e=0;e<n.length;++e){const s=n[e],i=e+t.length-1;if(i>=0){const e=o[i],t=e[e.length-1]-s[r];for(let n=r;n<a;++n)o[i].push(s[n+1]+t)}r=s[r],a=s[a]}a!==r&&(s.push([r,a]),i+=a-r)}return{outSplits:o,valueSlices:s,numValues:i}}function Ub(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function Gb(e,t,n,r,s){const i=t.slice();i[0]=s;const a=ee(n,U(i)),o=e.length;return function(e,t,n,r,s,i){const a=Ub(t,2)[1],o=Ub(i,2)[1];let l=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<r;++n)s[l*o+n]=e[t*a+n];++l}}(e,t,r,0===o?0:o/t[0],a,i),[a,i]}function jb(e,t,n,r,s,i,a,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=ye(r,t.length,le(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(i,a,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:h}=Wb(i,a,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=ee("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),p=Gb(n,r,s,c,h);return[d,p[0],p[1]]}const Hb=2147483647;function qb(e,t,n,r,s,i,a){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,u=0===a.length,c=[];o||c.push(t[0]),l||c.push(s[0]),u||c.push(a[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=ee("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const t=o?e[0]:e[m],n=l?r[0]:r[m],s=u?i[0]:i[m];if(0===s)throw new Error("Requires delta != 0");let a;if(s>0&&n<t||s<0&&n>t)a=0;else if(a=Math.ceil(Math.abs((n-t)/s)),a>Hb)throw new Error(`Requires ((limit - start) / delta) <= ${Hb}`);d[m+1]=d[m]+a}const p=ee(n,d[h]);let f=0;for(let m=0;m<h;++m){const t=d[m+1]-d[m];let n=o?e[0]:e[m];const r=u?i[0]:i[m];for(let e=0;e<t;++e)p[f++]=n,n+=r}return[d,p]}var Kb=Ip;class Xb{constructor(e,t,n,r,s,i,a,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Tp(u),this.raggedRank=Np(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Kb.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Kb.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Kb.VALUE_ROWIDS:return Xb.getMaxWidthValueRowID(t);case Kb.ROW_SPLITS:return Xb.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Kb[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let i=1;i<t;++i){const t=e[i];t!==r&&(r=t,s=Math.max(i-n,s),n=i)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Qb(e,n)}calculateOutputSize(e){const t=this.valuesShape;Ep(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=_p(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let s=1;s<=this.raggedRank;++s)r[s]<0&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let i=0;for(let a=0;a<r;++a,i+=t)s.push(i);for(let a=r;a<e;++a)s.push(-1);return B(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,i=[];for(let a=0;a<s-1;++a){const s=e[a+1]-e[a];let o=Math.min(r,s),l=t[a];-1===l&&(o=0);for(let e=0;e<o;++e)i.push(l),l+=n;for(let e=0;e<s-o;++e)i.push(-1)}if(s>0&&i.length!==e[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,i=[];if(0===s)return[];let a=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];i.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++a,a<r?l+=n:l=-1);else{if(a=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case Kb.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case Kb.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${Kb[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Kb.FIRST_DIM_SIZE:return e[0];case Kb.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Kb.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Kb[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let i=n.length-2;i>=0;--i)n[i]=n[i+1]*t[i+1];const r=Qb(t,!1),s=ee(this.valuesDType,U(r));if(n[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){i=this.calculateOutputIndex(e-1,i,n[e],t[e])}this.setOutput(this.raggedRank,i,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,i=n;let a=r.slice();a=a.slice(e+1);const o=U(a),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;gi((()=>{const t=Tl(u,e),n=Gl(t,a);u=n.dataSync()}))}let c=0,h=0,d=0;for(let p=0;p<=l;++p){let e=p<l?t[p]:-1;if(e!==d){if(h<d){const e=s.subarray(c*o);Yb(i.subarray(h*o),e,(d-h)*o)}if(p>=l){const t=n.length;e=Math.floor(t/o)}if(e>d)if(1===this.defaultValue.length)i.subarray(d*o,e*o).fill(this.defaultValue[0]),d=e;else for(;e>d;){Yb(i.slice(d*o),u,o),++d}e<0?(c=p+1,h=d):(c=p,h=d,d=h+1)}else++d}}}function Yb(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function Qb(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function Zb(e,t,n,r,s,i,a,o,l,u){return new Xb(e,t,n,r,s,i,a,o,l,u).compute()}function Jb(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return pe(0,r);const s=pe(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let i=1;i<s.length;i++)s[i]=s[i-1]+n;return s}const ev=Fy((e=>1/Math.sqrt(e))),tv=Py(qn,ev),nv={kernelName:qn,backendName:"cpu",kernelFunc:tv};function rv(e,t,n,r,s,i,a,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return _a(n,t.dtype);const p=l instanceof Is?l:_a(c,t.dtype);"string"===typeof l||"number"===typeof l?p.values.fill(l):"boolean"===typeof l&&p.values.fill(+l);for(let f=0;f<i;f++){const e=[];let i=0;for(let t=0;t<a;t++){const n=h[f*a+t];e.push(n),i+=n*o[t]}if(i<0||i>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[i*s+n]+=d[f*s+n]:p.values[i*s+n]=0===t.rank?d[0]:d[f*s+n]}return p}const sv=Fy((e=>1/(1+Math.exp(-e)))),iv=My(rr,(e=>1/(1+Math.exp(-e)))),av={kernelName:rr,backendName:"cpu",kernelFunc:iv};function ov(e,t,n,r,s){const i=Xo(r,t,n),a=U(n),o=le(r);if(i){const n=Yo(t,o);return"string"===s?e.slice(n,n+a):e.subarray(n,n+a)}const l=_a(r,s,"string"===s?Nf(e):e),u=_a(n,s);for(let c=0;c<u.size;++c){const e=u.indexToLoc(c),n=e.map(((e,n)=>e+t[n]));u.set(l.get(...n),...e)}return"string"===s?Ef(u.values):u.values}function lv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r;cy(s,"slice");const[o,l]=Qo(s,i,a);Po(s,o,l);const u=ov(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const uv={kernelName:Jn,backendName:"cpu",kernelFunc:lv};function cv(e,t,n,r,s,i,a){const o=t[0],l=i[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(pf(o));return[ee(n,0),[0,h],ee(s,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<o;++g){const t=e[g*h];if(t<0)throw new Error(ff(g,t));if(t>=l)throw new Error(mf(g,t,l));++f[t],d=d&&t>=p,p=t}let m=!0;for(let g=0;g<l;++g){const e=0===f[g];u[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],i=ee(n,t*h),d=ee(s,t),p=new Array(l).fill(0);for(let n=0;n<o;++n){const t=e[n*h],s=p[t],a=(0===t?0:f[t-1])+s;p[t]++;for(let r=0;r<h;++r)i[a*h+r]=e[n*h+r];d[a]=r[n],c[n]=a}for(let e=0;e<l;++e){if(0===p[e]){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=a}}return[i,[t,h],d,u,c]}}function hv(e,t,n,r,s){const i=U(r),a=t[0],o=s.length,l=[];let u=1,c=-1;for(let m=0;m<o;++m){const e=s[m];if(-1===e){if(-1!==c)throw new Error(gf(c,m));c=m,l.push(1)}else{if(e<0)throw new Error(yf(m,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/u);if(u*e!==i)throw new Error(vf(r,l));l[c]=e}if(U(l)!==i)throw new Error(xf(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=ee(n,a*o);for(let m=0;m<a;++m){let t=0;for(let n=0;n<h;++n)t+=e[m*h+n]*d[n];for(let e=0;e<o;++e)f[m*o+e]=Math.trunc(t/p[e]),t%=p[e]}return[f,[a,o],l]}function dv(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=ee(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(a),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let t=0;if(f<o){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Sf(g,c));g>m&&d.fill(a,m*u,g*u);for(let n=p;n<f;++n){const t=r[n];if(t<0||t>=l[0])throw new Error(Cf(n,r[n],l[0]));for(let n=0;n<u;n++)d[g*u+n]+=e[t*u+n]}if(i)for(let e=0;e<u;e++)d[g*u+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(a,m*u,c*u),[d,h]}const pv=Fy((e=>Math.sqrt(e))),fv=My(ir,(e=>Math.sqrt(e))),mv={kernelName:ir,backendName:"cpu",kernelFunc:fv},gv=Fy(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),yv=Py(yr,gv),bv={kernelName:yr,backendName:"cpu",kernelFunc:yv};function vv(e,t,n,r){const s=_a(e,t.dtype);for(let i=0;i<s.size;i++){const e=s.indexToLoc(i),a=new Array(e.length);for(let t=0;t<a.length;t++)a[t]=e[t]*n[t]+r[t];s.set(t.get(...a),...e)}return s}class xv{constructor(e,t,n,r,s,i){this.separator=ps(e),this.nGramWidths=t,this.leftPad=ps(n),this.rightPad=ps(r),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,i){for(let a=0;a<s;++a){const o=this.getPadWidth(i),l=Math.max(0,o-a),u=Math.max(0,o-(s-(a+1))),c=i-(l+u),h=t+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length;d+=(l+u+c-1)*this.separator.length,n[r+a]=new Uint8Array(d);const p=n[r+a];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,i=ee("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=s;++t)i[t]=0;return[e,i]}i[0]=0;for(let o=1;o<=s;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),i[o]=i[o-1]+n}const a=new Array(i[s]);for(let o=0;o<s;++o){const n=t[o];let r=i[o];if(this.nGramWidths.forEach((s=>{const i=t[o+1]-t[o],l=this.getNumNGrams(i,s);this.createNGrams(e,n,a,r,l,s),r+=l})),this.preserveShort&&r===i[o]){const s=t[o+1]-t[o];if(0===s)continue;const i=s+2*this.padWidth,l=1;this.createNGrams(e,n,a,r,l,i)}}return[a,i]}}function wv(e,t,n,r,s,i,a,o){return new xv(n,r,s,i,a,o).compute(e,t)}function kv(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let i=e.indexOf(s);for(;-1!==i;){const t=e.subarray(0,i);n&&0===t.length||r.push(t),i=(e=e.subarray(i+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(s,i);n&&0===t.length||r.push(t),s=i+1}}function Sv(e,t,n){const r=e.length,s=[];let i=0,a=0;const o=new Array(r);for(let d=0;d<r;++d){const r=s.length;kv(e[d],t,n,s);const l=s.length-r;o[d]=l,i+=l,a=Math.max(a,l)}const l=ee("int32",2*i),u=new Array(i),c=[r,a];let h=0;for(let d=0;d<r;++d)for(let e=0;e<o[d];++e)l[2*h]=d,l[2*h+1]=e,u[h]=s[h],++h;return[l,u,c]}function Cv(e,t){const n=ee("int32",e.length);for(let r=0;r<e.length;++r)n[r]=us(e[r]).modulo(t).getLowBitsUnsigned();return n}const Iv=py(((e,t)=>e-t)),_v=Iy(((e,t,n,r)=>({real:e-n,imag:t-r}))),Tv=Cy(kr,Iv,_v),Nv={kernelName:kr,backendName:"cpu",kernelFunc:Tv};function Ev(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=_a(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const i=e.locToIndex(n);r.values[s]=e.values[i]}return r}const $v=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Av(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;r>n;){if(r-n>600){const s=r-n+1,i=t-n+1,a=Math.log(s),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(s-o)/s)*Math.sign(i-s/2);Av(e,t,Math.max(n,Math.floor(t-i*o/s+l)),Math.min(r,Math.floor(t+(s-i)*o/s+l)))}const s=e[t];let i=n,a=r;for(z(e,n,t),$v(e[r],s)>0&&z(e,n,r);i<a;){for(z(e,i,a),i++,a--;$v(e[i],s)<0;)i+=1;for(;$v(e[a],s)>0;)a-=1}0===$v(e[n],s)?z(e,n,a):(a+=1,z(e,a,r)),a<=t&&(n=a+1),t<=a&&(r=a-1)}}function Rv(e,t,n,r,s){const i=t[t.length-1],[a,o]=[e.length/i,i],l=J(n,a*r),u=J("int32",a*r);for(let h=0;h<a;h++){const t=h*o,n=e.subarray(t,t+o);let i=new Array(n.length);n.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(Av(i,r),i=i.slice(0,r)),s&&i.sort($v);const a=h*r,c=l.subarray(a,a+r),d=u.subarray(a,a+r);for(let e=0;e<r;e++)c[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[_a(c,n,l),_a(c,"int32",u)]}function Ov(e,t,n,r){const s=Q(t,n)[0],i=[1,n[0],1];for(let f=0;f<s;f++)i[0]*=n[f];i[1]=n[s];for(let f=s+1;f<n.length;f++)i[2]*=n[f];const a=new Map,o=new Int32Array(n[s]),l=new Is(i,r,e),u=[],c=1===i[0]&&1===i[2];for(let f=0;f<n[s];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(l.get(t,f,n));t=e.join(",")}const n=a.get(t);if(null!=n)o[f]=n;else{const e=a.size;a.set(t,e),o[f]=e,u.push(f)}}const h=i.slice();h[1]=a.size;const d=new Is(h,r);u.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const{mx:Dv,ct:Fv,YG:Mv,hH:Pv,z3:zv,sG:Lv,uM:Bv,vS:Vv,C1:Wv,qB:Uv,GG:Gv,lg:jv,rq:Hv,cu:qv,WR:Kv,px:Xv,jC:Yv,He:Qv,hE:Zv,BF:Jv,Dk:ex,cl:tx,_B:nx,qy:rx,Zy:sx,bu:ix,dH:ax,HS:ox,eW:lx,GK:ux,dl:cx,Dw:hx,xT:dx,_X:px,wz:fx}=_,mx=ly({opType:Rg.ABS,cpuKernelImpl:ax}),gx={kernelName:Te,backendName:"webgpu",kernelFunc:mx},yx=ly({opType:Rg.ACOS}),bx={kernelName:Ne,backendName:"webgpu",kernelFunc:yx},vx=ly({opType:Rg.ACOSH}),xx={kernelName:Ee,backendName:"webgpu",kernelFunc:vx},wx=uy({opType:$g.ADD,cpuKernelImpl:Dv,supportsComplex:!0}),kx={kernelName:$e,backendName:"webgpu",kernelFunc:wx};class Sx{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach((t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)}));const t=this.variableNames.map((e=>`v${e}`)).join(" + ");return`\n      ${cg("index")} {\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputAtIndex(flatIndex, ${t});\n          }\n        }\n      }\n    `}}const Cx={kernelName:Ae,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;if(1===r.length)return ry({inputs:{x:r[0]},backend:n});const s=r.map((e=>e.dtype)).reduce(((e,t)=>zs(e,t))),i=r.map((e=>e.shape)),a=new Sx(i);return n.runWebGPUProgram(a,r,s)}};class Ix{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){B(this.workgroupSize[0]===this.workgroupSize[1],(()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`));const e=this.workgroupSize[0];return`\n      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;\n      ${cg()} {\n        var x = i32(workgroupId.x) * ${e} + i32(localId.x);\n        var y = i32(workgroupId.y) * ${e} + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = f32(A[y * width + x]);\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * ${e} + i32(localId.x);\n        y = i32(workgroupId.x) * ${e} + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}}class _x{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=lg(this.outputShape.length),t=Tx(this.newDim);return`\n      ${cg("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}}function Tx(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=new Array(t);for(let r=0;r<e.length;r++)n[e[r]]=`coords.${ug(r)}`;return n.join()}function Nx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:i}=r,a=n,o=s.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=s.shape[i[c]];if(n.shouldExecuteOnCPU([s])){const e=a.tensorMap.get(s.dataId).values,t=px(e,s.shape,s.dtype,i,l);return n.makeTensorInfo(l,s.dtype,t)}if(2===s.shape.length&&j(i,[1,0])){const e=new Ix(s.shape,i);return a.runWebGPUProgram(e,[s],s.dtype)}const u=new _x(s.shape,i);return a.runWebGPUProgram(u,[s],s.dtype)}const Ex={kernelName:Nr,backendName:"webgpu",kernelFunc:Nx};class $x{constructor(e,t,n){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[r]=Su(this.inputShape,[1]);this.outputShape=0===r.length?[1]:r,e.inSize>=32768&&n>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";const n=this.workgroupSize[0];"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType?(e=" bestValue = bestValue * candidate; ",t="1.0"):"all"===this.reduceType?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):"any"===this.reduceType&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const r="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       ${`\n         var<workgroup> xBestValues : array<f32, ${n}>;\n       `}\n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       ${cg("index")} {\n         let outputIndex = index / ${n};\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), ${n}u);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + ${n}) {\n           let candidate = f32(x[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), ${n}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${r}\n        }\n       }\n     `}}const Ax={mean:"float32",all:"bool",any:"bool"};function Rx(e,t,n,r,s){const i=e.shape.length,a=[],o=Q(t,e.shape);let l=o;const u=_u(l,i);let c=e;null!=u&&(c=Nx({inputs:{x:e},attrs:{perm:u},backend:s}),l=Nu(l.length,i),a.push(c)),Iu(r,l,i);const[h,d]=Su(c.shape,l);let p,f=h;if(n&&(f=Cu(h,o)),"max"!==r&&"prod"!==r||!s.shouldExecuteOnCPU([c])){const t=U(d),n={windowSize:t,inSize:t,batchSize:U(c.shape)/t,outSize:1},i=Ax[r]||Ls(e.dtype),o=[{type:"int32",data:[t]}],l=new $x(n,r,s.device.limits.maxComputeWorkgroupSizeX),u=s.runWebGPUProgram(l,[c],i,o);a.push(u),p=Qg({inputs:{x:u},attrs:{shape:f},backend:s})}else{const t=s.tensorMap.get(c.dataId).values;switch(r){case"max":const n=Yv(t,U(d),f,e.dtype);p=s.makeTensorInfo(f,e.dtype,n);break;case"prod":const{outVals:i,outShape:a,outDtype:o}=nx(c.shape,c.dtype,t,l);p=s.makeTensorInfo(a,o,i);break;default:throw new Error(`${r} CPU implementation is not yet supported.`)}}return a.forEach((e=>s.disposeData(e.dataId))),p}const Ox={kernelName:Re,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{keepDims:i,axis:a}=r;return Rx(s,a,i,"all",n)}};const Dx={kernelName:Oe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{keepDims:i,axis:a}=r;return Rx(s,a,i,"any",n)}};class Fx{constructor(e,t,n){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const r=[t];this.op="min"===n?"<":">";const[s,i]=Su(e,r);this.outputShape=0===s.length?[1]:s,this.dispatchLayout=Sg(this.outputShape),U(i)<32?(this.type="plain",this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=xg(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=()=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape.${ug(this.inputShape.length-1)}`,n=()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+=`outputCoords.${ug(t)},`;return e};if("shared"===this.type){return`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      ${`\n      var<workgroup> xBestIndices : array<i32, ${e}>;\n      var<workgroup> xBestValues : array<f32, ${e}>;\n    `}\n\n      ${cg("index")} {\n        let outputIndex = index / ${e};\n        let reduceLength = ${t()};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;\n            k = k + ${e}) {\n          let candidate = getX(${n()} k);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(reduceLength), ${e}u);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `}return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let outputCoords = getCoordsFromIndex(index);\n          var bestIndex = 0;\n          var bestValue = getX(${n()} 0);\n          let reduceLength = ${t()};\n          for (var i = 1; i < reduceLength; i++) {\n            let candidate = getX(${n()} i);\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              bestIndex = i;\n            }\n          }\n          setOutputAtIndexI32(index, bestIndex);\n        }\n      }\n      `}}const Mx={kernelName:De,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=Q(i,s.shape);const o=_u(a,s.shape.length);let l=s;const u=[];null!=o&&(l=Nx({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=Nu(a.length,l.shape.length)),Iu("argMax",[a[0]],l.shape.length);const c=new Fx(l.shape,a[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",h);return u.forEach((e=>n.disposeData(e.dataId))),d}};const Px={kernelName:Fe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=Q(i,s.shape);const o=_u(a,s.shape.length);let l=s;const u=[];null!=o&&(l=Nx({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=Nu(a.length,l.shape.length)),Iu("argMin",[a[0]],l.shape.length);const c=new Fx(l.shape,a[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",h);return u.forEach((e=>n.disposeData(e.dataId))),d}},zx=ly({opType:Rg.ASIN}),Lx={kernelName:Me,backendName:"webgpu",kernelFunc:zx},Bx=ly({opType:Rg.ASINH}),Vx={kernelName:Pe,backendName:"webgpu",kernelFunc:Bx},Wx=ly({opType:Rg.ATAN}),Ux={kernelName:ze,backendName:"webgpu",kernelFunc:Wx},Gx=uy({opType:$g.ATAN2}),jx={kernelName:Be,backendName:"webgpu",kernelFunc:Gx},Hx=ly({opType:Rg.ATANH}),qx={kernelName:Le,backendName:"webgpu",kernelFunc:Hx};class Kx{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.strides;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}}class Xx{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=r,this.includeBatchIndex=s,this.shaderKey=`pool2D_${t}_${n}_${r}_${s}`}getUserCode(){let e;if("avg"===this.poolType)e="resultValue = resultValue + value; count = count + 1.0;";else if(this.computePositions){e=`let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};\n      }`}else e="resultValue = max(value, resultValue);";let t="resultValue";"avg"===this.poolType&&(t="resultValue / max(count, 1.0)");return`\n      ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          ${this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}\n\n          var count = 0.0;\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, d);\n              ${e}\n            }\n          }\n\n          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}\n        }\n      }\n    `}}class Yx{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=r,this.includeBatchIndex=s,this.shaderKey=`pool3D_${t}_${n}_${r}_${s}`}getUserCode(){let e;if("avg"===this.poolType)e="resultValue += value; count += 1.0;";else if(this.computePositions){e=`let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};\n      }`}else e="resultValue = max(value, resultValue);";let t="resultValue";"avg"===this.poolType&&(t="resultValue / max(count, 1.0)");return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords.x;\n          let ch = coords.u;\n\n          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n          let xDCorner = xCorner.x;\n          let xRCorner = xCorner.y;\n          let xCCorner = xCorner.z;\n\n          ${this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}\n\n          var count = 0.0;\n          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {\n            let xD = xDCorner + wD;\n            if (xD < 0 || xD >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {\n              let xR = xRCorner + wR;\n              if (xR < 0 || xR >= uniforms.convDims.y) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {\n                let xC = xCCorner + wC;\n                if (xC < 0 || xC >= uniforms.convDims.z) {\n                  continue;\n                }\n\n                let value = getX(batch, xD, xR, xC, ch);\n                ${e}\n              }\n            }\n          }\n\n          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}\n        }\n      }\n    `}}function Qx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r;return Rx(s,i,a,"max",n)}const Zx={kernelName:an,backendName:"webgpu",kernelFunc:Qx};function Jx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{keepDims:i,axis:a}=r;return Rx(s,a,i,"mean",n)}const ew={kernelName:pn,backendName:"webgpu",kernelFunc:Jx};function tw(e,t,n,r){if(1===t.filterWidth&&1===t.filterHeight&&j(t.inShape,t.outShape))return ry({inputs:{x:e},backend:r});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&1===t.batchSize&&"VALID"===t.padInfo.type){const s=e.shape.length,i=Qg({inputs:{x:e},backend:r,attrs:{shape:[e.shape[s-3]*e.shape[s-2],e.shape[s-1]]}});let a;"avg"===n?a=Jx({inputs:{x:i},backend:r,attrs:{axis:0,keepDims:!1}}):(B("max"===n,(()=>`Invalid pool type ${n}`)),a=Qx({inputs:{x:i},backend:r,attrs:{reductionIndices:0,keepDims:!1}}));const o=Qg({inputs:{x:a},backend:r,attrs:{shape:t.outShape}});return r.disposeData(i.dataId),r.disposeData(a.dataId),o}let s;const i=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return 1===t.filterHeight&&1===t.filterWidth?s=new Kx(t):("avg"===n?s=new Xx(t,"avg"):(B("max"===n,(()=>`Invalid pool type ${n}`)),s=new Xx(t,"max")),i.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),r.runWebGPUProgram(s,[e],e.dtype,i)}const nw={kernelName:Ve,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;return tw(s,pl(s.shape,i,a,1,o,l),"avg",n)}};const rw={kernelName:Ue,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=fl(s.shape,i,a,[1,1,1],o,u,l),h=new Yx(c,"avg"),d=[{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.front,c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.inDepth,c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth]}];return n.runWebGPUProgram(h,[s],s.dtype,d)}};class sw{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`\n      ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n\n            dotProd = dotProd + dyValue * uniforms.avgMultiplier;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}class iw{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`\n      ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              dotProd += dyValue * uniforms.avgMultiplier;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}const aw={kernelName:Ge,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=fl(a.shape,o,l,1,u,c),d=new iw(h),p=1/(h.filterDepth*h.filterHeight*h.filterWidth),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[p]}];return n.runWebGPUProgram(d,[s],a.dtype,f)}};const ow={kernelName:We,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;_g([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=pl(a.shape,o,l,1,u),h=new sw(c),d=1/(c.filterHeight*c.filterWidth),p=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[d]}];return n.runWebGPUProgram(h,[s],a.dtype,p)}};const lw={kernelName:je,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;return Jg({a:s,b:i,transposeA:a,transposeB:o,backend:n})}};class uw{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${lg(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=lg(this.rank),t=function(e){if(1===e)return"sourceLoc";if(e<=6)return cw.slice(0,e).map((e=>`sourceLoc.${e}`)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let n;n=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>`sourceLoc.${cw[t]} = uniforms.start.${ug(t)} + coords.${cw[t]};`));return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          var sourceLoc : ${e};\n          let coords = getCoordsFromIndex(index);\n          ${n.join("\n")}\n          setOutputAtIndex(index, getSource(${t}));\n        }\n      }\n    `}}const cw=["x","y","z","w","u","v"];function hw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r,[o,l]=Qo(s,i,a);if(Po(s,o,l),n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.tensorMap.get(s.dataId),t=ox(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}if(0===U(l))return n.makeTensorInfo(l,s.dtype,[]);const u=new uw(o,l),c=[{type:"int32",data:o}];return n.runWebGPUProgram(u,[s],s.dtype,c)}const dw={kernelName:Jn,backendName:"webgpu",kernelFunc:hw},pw={kernelName:He,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;B(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=Op(s.shape,i,o),u=Dp(l.length,i.length),c=Fp(s.shape,i,o),h=Mp(a,i.length),d=Pp(c,a,i.length),p=[],f=Qg({inputs:{x:s},backend:n,attrs:{shape:l}}),m=Nx({inputs:{x:f},backend:n,attrs:{perm:u}}),g=Qg({inputs:{x:m},backend:n,attrs:{shape:c}}),y=hw({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeData(e.dataId))),y}},fw=`\n  fn bincount_write(index: i32, value: f32) {\n    ${sg("&result[index]","value","float32")}\n  }\n`;class mw{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`\n    ${this.binaryOutput?"\n  fn bincount_write(index: i32, value: f32) {\n    atomicStore(&result[index], bitcast<i32>(value));\n  }\n":fw}\n  ${cg("index")} {\n    ${1===this.rank?`if (index < uniforms.xShape) {\n      let indexVal = i32(getX(index));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};\n        bincount_write(indexVal, value);\n      }\n    }`:`let coord = getCoordsFromIndex(index);\n    if (coordsInBounds2D(coord, uniforms.xShape)) {\n      let indexVal = i32(getX(coord[0], coord[1]));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};\n        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);\n      }\n    }`}\n  }\n  `}}const gw={kernelName:qe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=U(s.shape),l=U(i.shape)>0,u=[a],c=i.dtype,h=Xg({backend:n,attrs:{shape:u,value:0,dtype:c}}),d=new mw([o],l),p=[{type:"int32",data:[a]}],f=l?[s,i]:[s];return n.runWebGPUProgram(d,f,c,p,h)}};class yw{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`\n  ${cg("index")} {\n    if (index < uniforms.size) {\n      var s0 = 1.0;\n      var s1 = 1.0;\n      let indexS0 = index - uniforms.size + uniforms.s0Size;\n      let indexS1 = index - uniforms.size + uniforms.s1Size;\n      if (indexS0 >= 0) {\n        s0 = getS0(indexS0);\n      }\n      if (indexS1 >= 0) {\n        s1 = getS1(indexS1);\n      }\n\n      if (s0 == 1.0) {\n        setOutputAtIndex(index, s1);\n      } else if (s1 == 1.0) {\n        setOutputAtIndex(index, s0);\n      } else if (s0 != s1) {\n        setOutputAtIndex(index, uniforms.NAN);\n      } else {\n        setOutputAtIndex(index, s0);\n      }\n    }\n  }\n  `}}const bw={kernelName:Xe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t;if(n.shouldExecuteOnCPU([r,s])){const e=n.tensorMap.get(r.dataId),t=n.tensorMap.get(s.dataId),i=e.values,a=t.values,o=eo(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const i=U(r.shape),a=U(s.shape),o=Math.max(i,a),l=new yw(o),u=[{type:"int32",data:[i]},{type:"int32",data:[a]}];return n.runWebGPUProgram(l,[r,s],"int32",u)}},vw=uy({opType:$g.NOT_EQUAL,dtype:"bool",cpuKernelImpl:tx}),xw={kernelName:wn,backendName:"webgpu",kernelFunc:vw};function ww(e){const{inputs:t,backend:n}=e,{input:r}=t;return ry({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.real},backend:n})}const kw={kernelName:Mn,backendName:"webgpu",kernelFunc:ww};const Sw={kernelName:Ye,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:i}=n,{dtype:a}=s;if("complex64"===a){if("complex64"===i.dtype)return ry({inputs:{x:i},backend:r});const t=yc(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=iy({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeData(n.dataId),s}if("complex64"===i.dtype){const t=ww({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:a}});return r.disposeData(t.dataId),n}if(!te(i.dtype,a)){const e=ry({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:a}}if(r.shouldExecuteOnCPU([i])){const e=r.tensorMap.get(i.dataId).values,[t,n,s]=Fv(e,i.shape,i.dtype,a);return r.makeTensorInfo(t,n,s)}if("int32"===a)return function(e,t){const n=new oy(e.shape,Rg.TO_INT),r=t.runWebGPUProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===a){const e=r.makeTensorInfo([],"bool",J("bool",1)),t=vw({inputs:{a:i,b:e},backend:r});return r.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}},Cw=ly({opType:Rg.CEIL,cpuKernelImpl:Mv}),Iw={kernelName:Qe,backendName:"webgpu",kernelFunc:Cw};class _w{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`\n      ${cg("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue = clamp(\n              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));\n          clampedValue = select(clampedValue, value, isnanVec4(value));\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    `}}class Tw{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`\n      ${cg("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    `}}const Nw={kernelName:Ze,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:i,clipValueMax:a}=r;let o;const l=[{type:"float32",data:[i]},{type:"float32",data:[a]}];return o=U(s.shape)%4===0?new _w(s.shape):new Tw(s.shape),n.runWebGPUProgram(o,[s],s.dtype,l)}};class Ew{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`\n    ${cg("index")} {\n      if (index < uniforms.size) {\n        let re = abs(getRealByOutputIndex(index));\n        let im = abs(getImagByOutputIndex(index));\n        let mx = max(re, im);\n\n        // The length function in wgsl may be not underflow-safe on some GPUs.\n        // So the safe solution is to ensure underflow-safety in all cases.\n        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));\n      }\n    }\n  `}}function $w(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Aw={kernelName:et,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.tensorMap.get(r.dataId),i=new Ew(r.shape),a=[$w(r,s.complexTensorInfos.real),$w(r,s.complexTensorInfos.imag)];return n.runWebGPUProgram(i,a,a[0].dtype)}};class Rw{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Cp(e,1),this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);const t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`\n      ${cg("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}}function Ow(e){const{inputs:t,backend:n}=e,{input:r}=t;return ry({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.imag},backend:n})}const Dw={kernelName:Gt,backendName:"webgpu",kernelFunc:Ow};function Fw(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>ww({inputs:{input:e},backend:n}))),s=e.map((e=>Ow({inputs:{input:e},backend:n}))),i=Fw(r,t,n),a=Fw(s,t,n),o=iy({inputs:{real:i,imag:a},backend:n});return r.forEach((e=>n.disposeData(e.dataId))),s.forEach((e=>n.disposeData(e.dataId))),n.disposeData(i.dataId),n.disposeData(a.dataId),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=U(e.shape.slice(t));return Qg({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),a=Cp(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=Pv(i,a,r,o),u=Cp(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeData(e.dataId))),c}const i=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>i){const r=[];for(let a=0;a<e.length;a+=i){const s=e.slice(a,a+i);r.push(Fw(s,t,n))}const s=Fw(r,t,n);for(const e of r)n.disposeData(e.dataId);return s}const{tensors2D:a,outShape:o}=function(e,t,n){const r=Cp(e.map((e=>e.shape)),t),s=e.map((e=>Qg({inputs:{x:e},backend:n,attrs:{shape:[U(e.shape.slice(0,t)),U(e.shape.slice(t))]}})));return{tensors2D:s,outShape:r}}(e,t,n),l=a.map((e=>e.shape)),u=new Rw(l),c=[],h=new Array(l.length-1);if(h.length>0){h[0]=l[0][1],c.push({type:"int32",data:[h[0]]});for(let e=1;e<h.length;e++)h[e]=h[e-1]+l[e][1],c.push({type:"int32",data:[h[e]]})}const d=n.runWebGPUProgram(u,a,a[0].dtype,c);a.forEach((e=>n.disposeData(e.dataId)));const p=Qg({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeData(d.dataId),p}function Mw(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=Q(s,t[0].shape)[0];Sp(t.map((e=>e.shape)),i);const a=Cp(t.map((e=>e.shape)),i);if(0===U(a))return n.makeTensorInfo(a,t[0].dtype,[]);const o=t.filter((e=>U(e.shape)>0));return 1===o.length?ry({inputs:{x:o[0]},backend:n}):Fw(o,i,n)}const Pw={kernelName:tt,backendName:"webgpu",kernelFunc:Mw};class zw{constructor(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=wg(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=kg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),s&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=o,this.addBias=s,this.activation=i,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=r%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?Bg(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Wg(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1],n=`\n    ${function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:4,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:4,u=arguments.length>9&&void 0!==arguments[9]?arguments[9]:4;const c=e?"\n      let coord = vec4<i32>(batch, xRow, xCol, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, xRow, xCol);\n      ",h=e?"\n      let coords = vec4<i32>(\n        batch,\n        row / outWidth,\n        row % outWidth,\n        col);\n      ":"\n      let coords = vec4<i32>(\n        batch,\n        row,\n        col / outWidth,\n        col % outWidth);\n      ",d=e?"uniforms.xShape[1]":"uniforms.xShape[2]",p=e?"uniforms.xShape[2]":"uniforms.xShape[3]",f=e?"row":"col",m=e?"col":"row",g=`\n      let inChannels = uniforms.wShape[2];\n      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n      let outRow = ${f} / outWidth;\n      let outCol = ${f} % outWidth;\n\n      let WRow = ${m} / (uniforms.filterDims[1] * inChannels);\n      let WCol = ${m} / inChannels % uniforms.filterDims[1];\n      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];\n      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];\n      let xCh = ${m} % inChannels;\n      var resData = ${og(o)}(0.0);\n      // The bounds checking is always needed since we use it to pad zero for\n      // the 'same' padding type.\n      if (xRow >= 0 && xRow < ${d} && xCol >= 0 && xCol < ${p}) {\n        ${c}\n        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);\n        ${(e=>{switch(e){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(o)}\n      }\n      return resData;`,y=e?t&&r?`\n      ${g}`:`\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${g}\n      }\n      return ${og(o)}(0.0);`:r&&n?`\n      ${g}`:`\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${g}\n      }\n      return ${og(o)}(0.0);`,b=`${(e=>{switch(e){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(l)}`,v=og(u),x=og(e?o:l),w=og(e?l:o);return`\n      ${Mg(i,a,4===u,4)}\n      fn mm_readA(batch: i32, row : i32, col : i32) -> ${x} {\n        ${e?y:b}\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> ${w} {\n        ${e?b:y}\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${v}) {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n        {\n        var value = valueIn;\n        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n        ${h}\n        ${Pg(s,i)}\n        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }`}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}\n    ${e}\n  `;return n}}class Lw{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`\n       ${Mg(this.activation,this.hasPreluActivationWeights,!1,4)}\n       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{\n         let coords = vec4<i32>(batch, row, col, chan);\n         if (coordsInBounds4D(coords, uniforms.xShape)) {\n           return  getX(batch, row, col, chan);\n         } else {\n          return 0.0;\n         }\n       }\n       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n         let coords = vec4<i32>(row, col, xChannel, outChannel);\n         if(coordsInBounds4D(coords, uniforms.wShape)) {\n           return getW(row, col, xChannel, outChannel);\n          } else {\n            return 0.0;\n          }\n       }\n       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {\n         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}\n         if (coordsInBounds4D(coords, uniforms.outShape)) {\n           var value = valueIn;\n           ${Pg(this.addBias,this.activation)}\n           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);\n         }\n       }\n       ${cg("index")} {\n         let coords = getOutputCoords();\n         let batch = coords[0];\n         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}\n         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}\n         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}\n         var acc : f32 = 0.0;\n         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];\n             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];\n             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {\n               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}\n               let f = readFilt(row, col, xChannel, outChannel);\n               acc = acc + v * f;\n             }\n           }\n         }\n         writeResult(batch, outRow, outCol, outChannel, acc);\n       }\n     `}}class Bw{constructor(e,t){this.variableNames=["x"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n       inChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",r=this.isChannelsLast?"coords[2]":"coords[1]",s=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`\n    ${cg("index")} {\n      let coords = getCoordsFromIndex(index);\n      if(index < uniforms.size) {\n        let batch = coords[0];\n        let row = ${n};\n        let col = ${r};\n        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];\n        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);\n        var value = 0.0;\n        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {\n          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -\n              uniforms.pads[1];\n          let xCol = offsetX + uniforms.dilations[1] * ((col %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n          let ch = col % uniforms.inChannels;\n          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {\n            value = ${s};\n          }\n        }\n        setOutputAtIndex(index, value);\n      }\n    }\n   `}}function Vw(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Ww(e){let{x:t,filter:n,convInfo:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}=e;const u=null!=i,c=null!=a,h="channelsLast"===r.dataFormat,d=h&&r.filterHeight===r.inHeight&&r.filterWidth===r.inWidth&&"VALID"===r.padInfo.type,p=ke().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!p&&(d||1===r.filterHeight&&1===r.filterWidth&&1===r.dilationHeight&&1===r.dilationWidth&&1===r.strideHeight&&1===r.strideWidth&&("SAME"===r.padInfo.type||"VALID"===r.padInfo.type)))return function(e){let{x:t,filter:n,convInfo:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}=e;const u="channelsLast"===r.dataFormat,c=!u,h=[];let d,p;if(u&&r.filterHeight===r.inHeight&&r.filterWidth===r.inWidth&&"VALID"===r.padInfo.type){const e=r.inHeight*r.inWidth*r.inChannels;d=Qg({inputs:{x:t},backend:s,attrs:{shape:[1,r.batchSize,e]}}),p=Qg({inputs:{x:n},backend:s,attrs:{shape:[1,e,r.outChannels]}})}else d=Qg({inputs:{x:t},backend:s,attrs:{shape:u?[r.batchSize,r.inHeight*r.inWidth,r.inChannels]:[r.batchSize,r.inChannels,r.inHeight*r.inWidth]}}),p=Qg({inputs:{x:n},backend:s,attrs:{shape:[1,r.inChannels,r.outChannels]}});if(h.push(d),h.push(p),null!=a){const e=Vw(a.shape,u);null!=e&&(a=Qg({inputs:{x:a},backend:s,attrs:{shape:e}}),h.push(a))}if(null!=i){const e=Vw(i.shape,u);null!=e&&(i=Qg({inputs:{x:i},backend:s,attrs:{shape:e}}),h.push(i))}const f=Jg({a:u?d:p,b:u?p:d,transposeA:c,transposeB:!1,backend:s,bias:i,activation:l,preluActivationWeights:a,leakyreluAlpha:o}),m=Qg({inputs:{x:f},backend:s,attrs:{shape:r.outShape}});h.push(f);for(const g of h)s.disposeData(g.dataId);return m}({x:t,filter:n,convInfo:r,backend:s,bias:i,activation:l,preluActivationWeights:a,leakyreluAlpha:o});const f=ke().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),m=f>-1?f:s.thresholdToIncreaseWorkgroups,g=r.batchSize*Math.ceil(r.outHeight*r.outWidth/32)*Math.ceil(r.outChannels/32);if(ke().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||g<=m)return function(e){let{x:t,filter:n,convInfo:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}=e;const{filterWidth:u,filterHeight:c,inChannels:h,strideWidth:d,strideHeight:p,padInfo:f,outWidth:m,outHeight:g,dilationWidth:y,dilationHeight:b,dataFormat:v}=r,x="channelsLast"===v,w=u*c*h,k=g*m,S=x?[r.batchSize,k,w]:[r.batchSize,w,k],C=new Bw(S,x),I=[{type:"int32",data:[f.top,f.left]},{type:"int32",data:[p,d]},{type:"int32",data:[b,y]},{type:"int32",data:[m]},{type:"int32",data:[h*u]},{type:"int32",data:[h]}],_=s.runWebGPUProgram(C,[t],t.dtype,I),T=[];T.push(_);const N=Qg({inputs:{x:n},backend:s,attrs:{shape:[1,w,-1]}});if(T.push(N),null!=a){const e=Vw(a.shape,x);null!=e&&(a=Qg({inputs:{x:a},backend:s,attrs:{shape:e}}),T.push(a))}if(null!=i){const e=Vw(i.shape,x);null!=e&&(i=Qg({inputs:{x:i},backend:s,attrs:{shape:e}}),T.push(i))}const E=Jg({a:x?_:N,b:x?N:_,transposeA:!x,transposeB:!1,backend:s,bias:i,activation:l,preluActivationWeights:a,leakyreluAlpha:o}),$=Qg({inputs:{x:E},backend:s,attrs:{shape:r.outShape}});T.push(E);for(const A of T)s.disposeData(A.dataId);return $}({x:t,filter:n,convInfo:r,backend:s,bias:i,preluActivationWeights:a,leakyreluAlpha:o,activation:l});let y;const b=[r.padInfo.top,r.padInfo.left],v=[{type:"int32",data:[r.filterHeight,r.filterWidth]},{type:"int32",data:[...b]},{type:"int32",data:[r.strideHeight,r.strideWidth]},{type:"int32",data:[r.dilationHeight,r.dilationWidth]}];if(p)y=new Lw(r,u,l,c);else{const e=h?r.outHeight*r.outWidth:r.outChannels,t=h?r.outChannels:r.outHeight*r.outWidth,n=r.filterHeight*r.filterWidth*r.inChannels;v.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[n]});const i=s.adapterInfo.isIntel();y=new zw(r,e,t,n,u,l,c,i)}const x=[],w=[t,n];u&&(h||1!==i.shape.length||(i=Qg({inputs:{x:i},backend:s,attrs:{shape:[i.shape[0],1,1]}}),x.push(i)),w.push(i)),c&&(h||1!==a.shape.length||(a=Qg({inputs:{x:a},backend:s,attrs:{shape:[a.shape[0],1,1]}}),x.push(a)),w.push(a)),"leakyrelu"===l&&(v.push({type:"float32",data:[o]}),y.uniforms+=" alpha : f32,");const k=s.runWebGPUProgram(y,w,t.dtype,v);for(const S of x)s.disposeData(S.dataId);return k}const Uw={kernelName:nt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=n,h=Il(l);return Ww({x:s,filter:i,convInfo:ml(s.shape,i.shape,a,u,o,c,!1,h),backend:r})}};class Gw{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1,r=`\n    ${cg()} {\n      let batch = i32(globalId.z) / uniforms.outShape[1];\n      let r = i32(globalId.z) % uniforms.outShape[1];\n      let c = i32(globalId.y) * ${this.workPerThread};\n      let d1 = i32(globalId.x) * 4;\n\n      let dyCorner = vec2<i32>(r, c) - uniforms.pads;\n\n      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n      // ? = to be determined. : = across all values in that axis.\n      var dotProd: array<vec4<f32>, ${this.workPerThread}>;\n      for (var i = 0; i < ${this.workPerThread}; i++) {\n        dotProd[i] = vec4<f32>(0.0);\n      }\n      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);\n        let wRPerm = uniforms.filterDims.x - 1 - wR;\n        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||\n            fract(dyR) > 0.0) {\n          continue;\n        }\n        let idyR = i32(dyR);\n\n        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);\n          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);\n          let wCPerm = uniforms.filterDims.y - 1 - wC;\n          var bDyCVal = true;\n          var bDyCVal2 = true;\n          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC) > 0.0) {\n            bDyCVal = false;\n          }\n          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC2) > 0.0) {\n            bDyCVal2 = false;\n          }\n\n          let idyC = i32(dyC);\n          let idyC2 = i32(dyC2);\n          if (bDyCVal && bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n              xValue = getDy(batch, idyR, idyC2, d2);\n              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),\n                                                  dot(xValue, wValue1),\n                                                  dot(xValue, wValue2),\n                                                  dot(xValue, wValue3));\n            }\n          } else if (bDyCVal) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n            }\n          } else if (bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC2, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[1] = dotProd[1] + tmpval;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n        let coords = vec4<i32>(batch, r, c + i, d1);\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n        }\n      }\n    }\n    `;return this.isVec4?`\n    ${r}\n    `:`\n    ${cg("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${n}];\n\n        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};\n              let wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd = dotProd + xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}class jw{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`\n    ${cg("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let d2 = coords[3];\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b = b + 1) {\n          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              if (${this.isChannelsLast}) {\n                let dyValue = getDy(b, yR, yC, d2);\n                let xValue = getX(b, xR, xC, d1);\n                dotProd = dotProd + xValue * dyValue;\n              } else {\n                let dyValue = getDy(b, d2, yR, yC);\n                let xValue = getX(b, d1, xR, xC);\n                dotProd = dotProd + xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}class Hw{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,\n       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`\n    ${cg("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wF = coords.x;\n        let wR = coords.y;\n        let wC = coords.z;\n        let d1 = coords.w;\n        let d2 = coords.u;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yF = 0; yF < uniforms.outDepth; yF++) {\n            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];\n            if (xF < 0 || xF >= uniforms.inDepth) {\n              continue;\n            }\n\n            for (var yR = 0; yR < uniforms.outHeight; yR++) {\n              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];\n              if (xR < 0 || xR >= uniforms.inHeight) {\n                continue;\n              }\n\n              for (var yC = 0; yC < uniforms.outWidth; yC++) {\n                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];\n                if (xC < 0 || xC >= uniforms.inWidth) {\n                  continue;\n                }\n\n                let dyValue = getDy(b, yF, yR, yC, d2);\n                let xValue = getX(b, xF, xR, xC, d1);\n                dotProd += xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}class qw{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`\n    ${cg("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let d1 = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyFCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);\n          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {\n            continue;\n          }\n          let idyF = i32(dyF);\n\n          let wFPerm = uniforms.filterDims[0] - 1 - wF;\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            let wRPerm = uniforms.filterDims[1] - 1 - wR;\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let wCPerm = uniforms.filterDims[2] - 1 - wC;\n\n              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {\n                let xValue = getDy(batch, idyF, idyR, idyC, d2);\n                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}const Kw={kernelName:rt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Il(l),d=ml(s.shape,c,a,1,o,u,!1,h),p=new jw(d),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return n.runWebGPUProgram(p,[s,i],s.dtype,f)}};class Xw{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,B("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=wg(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=kg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?Bg(this.elementsPerThread,this.workgroupSize):Wg(this.elementsPerThread,this.workgroupSize),t=`\n    ${function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:4;const t=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        \n      let outRow = row / uniforms.outShape[2];\n      let outCol = row % uniforms.outShape[2];\n\n      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n        return ${og(e)}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n        return ${og(e)}(0.0);\n      }\n      let coord = vec4<i32>(\n          batch,\n          i32(xR),\n          i32(xC),\n          col % uniforms.outBackprop[3]);\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];\n      }\n      return ${og(e)}(0.0);`;return`\n  fn mm_readA(batch: i32, row : i32, col : i32) -> ${og(e)} {\n    ${t}\n  }\n\n  fn mm_readB(batch: i32, row : i32, col : i32) -> ${og(e)} {\n    let coordX = uniforms.filterDims.x - 1 -\n        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let coordY = uniforms.filterDims.y - 1 -\n        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n        coordX >= 0 && coordY >= 0) {\n      let rowInner = row % uniforms.outBackprop[3];\n      let coord = vec4<i32>(coordX, coordY, col, rowInner);\n      ${(e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return"\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            ";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(e)}\n    }\n    return ${og(e)}(0.0);\n  }\n\n  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${og(e)}) {\n    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;\n    }\n  }`}(this.isVec4?4:1)}\n    ${e}\n    `;return t}}const Yw={kernelName:st,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Il(u),d=ml(a,i.shape,o,1,l,c,!1,h),p=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}];let f;if(ke().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||"channelsLast"!==d.dataFormat)f=new Gw(d);else{f=new Xw(d);const e=d.inHeight*d.inWidth,t=d.inChannels,n=d.filterHeight*d.filterWidth*d.outChannels;p.push({type:"uint32",data:[e]},{type:"uint32",data:[t]},{type:"uint32",data:[n]})}return n.runWebGPUProgram(f,[s,i],"float32",p)}};class Qw{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`\n    ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords.x;\n        let d2 = coords.u;\n\n        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n        let xFCorner = xFRCCorner.x;\n        let xRCorner = xFRCCorner.y;\n        let xCCorner = xFRCCorner.z;\n\n        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;\n        let inputDepthVec4Remainder = uniforms.xShape.u % 4;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let xF = xFCorner + wF * uniforms.dilations[0];\n          if (xF < 0 || xF >= uniforms.xShape.y) {\n            continue;\n          }\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let xR = xRCorner + wR * uniforms.dilations[1];\n            if (xR < 0 || xR >= uniforms.xShape.z) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let xC = xCCorner + wC * uniforms.dilations[2];\n              if (xC < 0 || xC >= uniforms.xShape.w) {\n                continue;\n              }\n\n              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {\n                let xValues = vec4<f32>(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                let wValues = vec4<f32>(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (inputDepthVec4Remainder == 1) {\n                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2);\n              } else if (inputDepthVec4Remainder == 2) {\n                let xValues = vec2<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)\n                );\n                let wValues = vec2<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (inputDepthVec4Remainder == 3) {\n                let xValues = vec3<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)\n                );\n                let wValues = vec3<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }`}}const Zw={kernelName:it,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r,u=gl(s.shape,i.shape,a,l,o),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],d=new Qw(u),p=zs(s.dtype,i.dtype);return n.runWebGPUProgram(d,[s,i],p,h)}};const Jw={kernelName:at,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:l}=r,u=gl(s.shape,l,a,1,o),c=new Hw(u),h=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return n.runWebGPUProgram(c,[s,i],i.dtype,h)}};const ek={kernelName:ot,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,pad:o,inputShape:l}=r,u=gl(l,i.shape,a,1,o),c=new qw(u),h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return n.runWebGPUProgram(c,[s,i],s.dtype,h)}},tk=ly({opType:Rg.COS}),nk={kernelName:lt,backendName:"webgpu",kernelFunc:tk},rk=ly({opType:Rg.COSH}),sk={kernelName:ut,backendName:"webgpu",kernelFunc:rk};class ik{constructor(e,t,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId="bilinear"===r?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,r,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,a,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`\n    ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${i});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${r};\n        let width_scale = ${a};\n        let in_y = ${s};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${o};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `}}const ak={kernelName:dt,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new ik(s.shape[3],i.shape,o,l),h=[{type:"float32",data:[u]}];return n.runWebGPUProgram(c,[s,i,a],"float32",h)}};var ok;!function(e){e.Prod="*",e.Sum="+"}(ok||(ok={}));class lk{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===ok.Prod?"1.0":"0.0",n=this.exclusive?t:`getX(${uk(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let s="",i="";return this.exclusive?(s=this.reverse?"end != "+(r-1):"end != 0",i=this.reverse?"end + 1":"end - 1"):(s=this.reverse?`end + pow2 < ${r}`:"end >= pow2",i=this.reverse?"end + pow2":"end - pow2"),`\n      ${cg("index")} {\n       if (index < uniforms.size) {\n         var coords = getCoordsFromIndex(index);\n\n         let end = ${ck(e,"coords",this.op)};\n         var val = ${n};\n         let pow2 = i32(pow(2.0, uniforms.index));\n         if (${s}) {\n           let idx = ${i};\n           ${ck(e,"coords",this.op)} = idx;\n           val ${this.op}= getX(${uk(e,"coords",this.op)});\n         }\n         setOutputAtIndex(index, val);\n       }\n      }\n    `}}function uk(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function ck(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function hk(e,t,n,r,s,i){const a=t.shape.length,o=_u([r],a);let l=t;null!=o&&(l=Nx({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Nu(1,a)[0];if(u!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=ry({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const t=new lk(e,l.shape,!1,i),r=h,s=[{type:"float32",data:[d]}];h=n.runWebGPUProgram(t,[h],h.dtype,s),n.disposeData(r.dataId)}if(s){const t=new lk(e,l.shape,s,i),r=h,a=[{type:"float32",data:[0]}];h=n.runWebGPUProgram(t,[h],h.dtype,a),n.disposeData(r.dataId)}if(null!=o){const e=Nx({inputs:{x:h},backend:n,attrs:{perm:Tu(o)}});return n.disposeData(h.dataId),n.disposeData(l.dataId),e}return h}const dk={kernelName:ct,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return hk(ok.Prod,s,n,i,a,o)}};const pk={kernelName:ht,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return hk(ok.Sum,s,n,i,a,o)}};const fk={kernelName:pt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r,l=1===s.shape.length,u=U(i.shape)>0,c=i.dtype,h=l?[s.shape[0]]:[s.shape[0],s.shape[1]],d=Xg({backend:n,attrs:{shape:l?[a]:[s.shape[0],a],value:0,dtype:c}}),p=new mw(h,u,o),f=[{type:"int32",data:[a]}],m=u?[s,i]:[s];return n.runWebGPUProgram(p,m,c,f,d)}};class mk{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const gk={kernelName:ft,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r,o=s.shape[0],l=("NHWC"===a?s.shape[1]:s.shape[2])*i,u=("NHWC"===a?s.shape[2]:s.shape[3])*i,c=("NHWC"===a?s.shape[3]:s.shape[1])/(i*i),h=[{type:"int32",data:[i]}],d=new mk("NHWC"===a?[o,l,u,c]:[o,c,l,u],a);return n.runWebGPUProgram(d,[s],s.dtype,h)}};class yk{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]&&arguments[5];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=s,this.hasPreluActivation=i,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,r=this.workgroupSize[0]+this.filterWidth-1;return`\n      ${Mg(this.activation,this.hasPreluActivation,!1,4)}\n\n      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;\n      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;\n      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {\n        var value = 0.0;\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, channel, row, col);\n        }\n        return value;\n      }\n\n      ${cg()} {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;\n        let channelMul = uniforms.wShape[3];\n        let d1 = coords[1] / channelMul;\n        let q = coords[1] % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n\n        let localRow = i32(localId.y);\n        let localCol = i32(localId.x);\n\n        // Load one tile of X into local memory.\n        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workgroupSize[1]}) {\n          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workgroupSize[0]}) {\n            let rowOffset = inputRow - localRow;\n            let colOffset = inputCol - localCol;\n            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);\n          }\n        }\n\n        // Load one tile of W into local memory.\n        var wIndex = i32(localIndex);\n        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}\n\n        {\n          let wRow = wIndex / ${this.filterWidth};\n          let wCol = wIndex % ${this.filterWidth};\n          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);\n        }\n\n        workgroupBarrier();\n\n        var value = 0.0;\n        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {\n          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {\n            let xVal = mm_Asub[localRow + wR][localCol + wC];\n            let wVal = mm_Bsub[wR][wC];\n            value = fma(xVal, wVal, value);\n          }\n        }\n        ${Pg(this.addBias,this.activation)}\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}}class bk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const s=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=Sg(s),this.dispatch=xg(this.dispatchLayout,s,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),B("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return`\n      ${Mg(this.activation,this.hasPreluActivation,!0,4)}\n      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {\n        var value = vec4<f32>(0.0);\n        if (col >=0 && col < uniforms.inDims[1]) {\n          value = getX(batch, row, col, channel);\n        }\n        return value;\n      }\n\n      ${cg("index")} {\n        let width0 = uniforms.outShape[3] / ${this.outputComponent};\n        let d1 = (index % width0) * ${this.outputComponent};\n        var index1 = index / width0;\n        let width1 = uniforms.virtualWidth / ${this.workPerThread};\n        let c = (index1 % width1) * ${this.workPerThread};\n        index1 = index1 / width1;\n        let r = index1 % uniforms.outShape[1];\n        let batch = index1 / uniforms.outShape[1];\n\n        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${n}) - uniforms.pads;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n        var xVals : array<vec4<f32>, ${e}>;\n        var dotProd : array<vec4<f32>, ${this.workPerThread}>;\n        for (var i = 0; i < ${this.workPerThread}; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n\n        // Use constant instead of uniform can give better performance.\n        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {\n          let xR = xRCorner + wR;\n          if (xR >=0 && xR < uniforms.inDims[0]) {\n            for (var i = 0; i < ${e}; i++) {\n              xVals[i] = readX(batch, xR, xCCorner + i, d1);\n            }\n            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {\n              let wValue = getW(wR, wC, d1, 0);\n              for (var i = 0; i < ${this.workPerThread}; i++) {\n                dotProd[i] = fma(xVals[i * ${n} + wC], wValue, dotProd[i]);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d1);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            var value = dotProd[i];\n            ${Pg(this.addBias,this.activation)}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n          }\n        }\n      }\n    `}}class vk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,\n      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`\n      ${Mg(this.activation,this.hasPreluActivation,!1,4)}\n\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;\n          let d2 = coords[${this.isChannelsLast?3:1}];\n          let channelMul = uniforms.wShape[3];\n          let d1 = d2 / channelMul;\n          let q = d2 % channelMul;\n\n          let inputRowStart = xRCCorner.x;\n          let inputColStart = xRCCorner.y;\n          let inputRowEnd = inputRowStart + uniforms.filterHeight *\n              uniforms.dilations[0];\n          let inputColEnd = inputColStart + uniforms.filterWidth *\n              uniforms.dilations[1];\n\n          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get\n          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all\n          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.\n          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.\n          var value = 0.0;\n\n          // Extract if checking out of for loop for performance.\n          if (inputRowStart >= 0 && inputColStart >= 0 &&\n            inputRowEnd < uniforms.inDims[0] &&\n                inputColEnd < uniforms.inDims[1]) {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            } else {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                if (xR < 0 || xR >= uniforms.inDims[0]) {\n                  continue;\n                }\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  if (xC < 0 || xC >= uniforms.inDims[1]) {\n                    continue;\n                  }\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            }\n            ${Pg(this.addBias,this.activation)}\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}}const xk={kernelName:mt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Il(l);let d=u;null==d&&(d=[1,1]);const p=ml(s.shape,i.shape,a,d,o,c,!0,h),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inHeight,p.inWidth]}],m="channelsLast"===p.dataFormat;let g;return!m&&p.inHeight>16&&p.inWidth>16&&1===p.strideHeight&&1===p.strideWidth&&1===p.dilationWidth&&1===p.dilationHeight&&p.inChannels===p.outChannels?g=new yk(p.outShape,p.filterHeight,p.filterWidth):m&&p.outHeight>4&&p.outWidth>4&&p.strideWidth<=2&&p.inChannels===p.outChannels&&1===p.dilationHeight&&1===p.dilationWidth&&p.inChannels%4===0?(g=new bk(p),f.push({type:"int32",data:[g.virtualWidth]})):(g=new vk(p),f.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]})),n.runWebGPUProgram(g,[s,i],s.dtype,f)}};class wk{constructor(e){this.variableNames=["x","dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,\n      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`\n      ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let dm = coords[3];\n        let d2 = d1 * uniforms.channelMul + dm;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yR = 0; yR < uniforms.outHeight; yR++) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC++) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              let dyValue = getDy(b, yR, yC, d2);\n              let xValue = getX(b, xR, xC, d1);\n              dotProd += xValue * dyValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}class kk{constructor(e){this.variableNames=["dy","W"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`\n      ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[3];\n        let dyCorner = coords.yz - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n\n          let idyR = i32(dyR);\n          let wRPerm = uniforms.filterDims[0] - 1 - wR;\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n\n            let idyC = i32(dyC);\n            let wCPerm = uniforms.filterDims[1] - 1 - wC;\n\n            for (var dm = 0; dm < uniforms.channelMul; dm++) {\n              let d2 = d1 * uniforms.channelMul + dm;\n              let xValue = getDy(batch, idyR, idyC, d2);\n              let wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}const Sk={kernelName:gt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=ml(s.shape,c,a,o,l,u,!0),d=new wk(h),p=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return n.runWebGPUProgram(d,[s,i],"float32",p)}};const Ck={kernelName:yt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=ml(c,i.shape,a,o,l,u,!0),d=new kk(h),p=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return n.runWebGPUProgram(d,[s,i],s.dtype,p)}};class Ik{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}}const _k={kernelName:bt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],i=U(r.shape),a=Qg({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new Ik(i),l=n.runWebGPUProgram(o,[a],a.dtype),u=Qg({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeData(a.dataId),n.disposeData(l.dataId),u}};class Tk{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`\n       ${cg("index")} {\n         if (index < uniforms.size) {\n           let neg_infinity = -3.4e38;\n           let coords = getOutputCoords();\n           let batch = coords.x;\n           let d1 = coords.w;\n           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;\n           let hBeg = outTopLeftCorner.x;\n           let wBeg = outTopLeftCorner.y;\n\n           var curVal = neg_infinity;\n           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {\n             let hIn = hBeg + h * uniforms.dilations[0];\n\n             if (hIn >= 0 && hIn < uniforms.xShape[1]) {\n               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {\n                 let wIn = wBeg + w * uniforms.dilations[1];\n\n                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {\n                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);\n                   if (val > curVal) {\n                     curVal = val;\n                   }\n                 }\n               }\n             }\n           }\n\n           setOutputAtIndex(index, curVal);\n         }\n       }\n     `}}const Nk={kernelName:vt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r,u=dl(s.shape,i.shape,a,o,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],d=new Tk(u);return n.runWebGPUProgram(d,[s,i],s.dtype,h)}};class Ek{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=Sg(e.outShape),this.dispatch=xg(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==t&&"int32"!==t)throw new Error(`Dilation2DBackpropInput only supports float32 and int32\n          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`\n       ${cg("index")} {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var xRMax = 0;\n           var xCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     xRMax = xR;\n                     xCMax = xC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.xShape[3] *\n               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));\n           let value = getDy(b, r, c, d);\n           ${sg("&result[flatIndexIn]","value",this.type)}\n         }\n       }\n     `}}class $k{constructor(e,t,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=Sg(e.outShape),this.dispatch=xg(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error(`Dilation2DBackpropFilter only supports float32 and int32\n          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`\n       ${cg("index")} {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var wRMax = 0;\n           var wCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     wRMax = wR;\n                     wCMax = wC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);\n           let value = getDy(b, r, c, d);\n           ${sg("&result[flatIndexIn]","value",this.type)}\n         }\n       }\n     `}}const Ak={kernelName:wt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,dy:a}=t,{strides:o,pad:l,dilations:u}=r,c=dl(s.shape,i.shape,o,l,"NHWC",u),h=i.dtype,d=new $k(c,i.shape,h),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[U(c.outShape)]}],f=Xg({backend:n,attrs:{shape:i.shape,value:0,dtype:h}});return n.runWebGPUProgram(d,[s,i,a],h,p,f)}};const Rk={kernelName:xt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,dy:a}=t,{strides:o,pad:l,dilations:u}=r,c=dl(s.shape,i.shape,o,l,"NHWC",u),h=s.dtype,d=new Ek(c,h),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[U(c.outShape)]}],f=Xg({backend:n,attrs:{shape:c.inShape,value:0,dtype:h}});return n.runWebGPUProgram(d,[s,i,a],h,p,f)}};class Ok{constructor(e,t,n){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=ig.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=n,this.shaderKey=`draw_${t}_${n}`}getUserCode(){let e;const t="float32"===this.type?"value":"value / 255.0";e=`\n      if (uniforms.numChannels == 1) {\n        rgba[0] = ${t};\n        rgba[1] = ${t};\n        rgba[2] = ${t};\n      } else {\n        rgba[d] = ${t};\n      }`;return`\n       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;\n       ${cg("index")} {\n         if (index < uniforms.size) {\n           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);\n           for (var d = 0; d < uniforms.numChannels; d = d + 1) {\n             let value = f32(inBuf[index * uniforms.numChannels + d]);\n             ${e}\n           }\n           rgba.x = rgba.x * rgba.w;\n           rgba.y = rgba.y * rgba.w;\n           rgba.z = rgba.z * rgba.w;\n           let coords = getCoordsFromIndex(index);\n           textureStore(outImage, vec2<i32>(coords.yx), rgba);\n         }\n       }\n      `}}const Dk={kernelName:kt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:i,options:a}=r,[o,l]=s.shape.slice(0,2),{imageOptions:u}=a||{},c=(null===u||void 0===u?void 0:u.alpha)||1,h=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[o,l],p=new Ok(d,s.dtype,h);i.width=l,i.height=o;const f="webgpu";let m,g=i.getContext(f);g||(m=new OffscreenCanvas(l,o),g=m.getContext(f));const y=3===s.shape.length?s.shape[2]:1;g.configure({device:n.device,format:h,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const b="int32",v=n.makeTensorInfo(d,b),x=n.tensorMap.get(v.dataId);x.resource=g.getCurrentTexture(),x.external=!0;const w=[{type:"uint32",data:[y]},{type:"float32",data:[c]}];if(n.runWebGPUProgram(p,[s],b,w,v),m){const e=i.getContext("2d");if(!e)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");e.drawImage(m,0,0)}return n.disposeData(v.dataId),s}},Fk=uy({opType:$g.MUL,cpuKernelImpl:Jv,supportsComplex:!0}),Mk={kernelName:vn,backendName:"webgpu",kernelFunc:Fk};function Pk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;return Rx(s,i,a,"sum",n)}const zk={kernelName:ar,backendName:"webgpu",kernelFunc:Pk};const Lk={kernelName:Ct,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:a,summedDims:o,idDims:l}=af(s,i.length);lf(a.length,l,i);const{path:u,steps:c}=uf(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=of(p,l[e]);let s;cf(t)?s=i[e]:(s=Nx({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);j(s.shape,a)||(s=Qg({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=Fk({inputs:{a:s,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=Pk({inputs:{x:d},backend:n,attrs:{axis:u[m]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeData(m.dataId);return d}},Bk=ly({opType:Rg.ELU}),Vk={kernelName:It,backendName:"webgpu",kernelFunc:Bk},Wk={kernelName:_t,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,i=new ny($g.ELU_DER,r.shape,s.shape);return n.runWebGPUProgram(i,[r,s],r.dtype)}},Uk=uy({opType:$g.EQUAL,dtype:"bool",cpuKernelImpl:zv}),Gk={kernelName:Nt,backendName:"webgpu",kernelFunc:Uk},jk=ly({opType:Rg.ERF}),Hk={kernelName:Tt,backendName:"webgpu",kernelFunc:jk},qk=ly({opType:Rg.EXP,cpuKernelImpl:Lv,dtype:"float32"}),Kk={kernelName:Et,backendName:"webgpu",kernelFunc:qk};function Xk(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:i}=t,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(B(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+s+1),o.splice(l,0,1),Qg({inputs:{x:i},backend:r,attrs:{shape:o}})}const Yk={kernelName:$t,backendName:"webgpu",kernelFunc:Xk},Qk=ly({opType:Rg.EXPM1,cpuKernelImpl:Bv}),Zk={kernelName:At,backendName:"webgpu",kernelFunc:Qk};class Jk{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`\n    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {\n      ${"real"===this.component?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}\n    }\n\n    fn mulMatDFT(batch: i32, index: i32) -> f32 {\n      let indexRatio = f32(index) / f32(uniforms.realShape[1]);\n      let exponentMultiplierTimesIndexRatio =\n          uniforms.exponentMultiplier * indexRatio;\n\n      var result = 0.0;\n\n      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {\n        // x = (-2|2 * PI / N) * index * i;\n        let x = exponentMultiplierTimesIndexRatio * f32(i);\n        let expR = cos(x);\n        let expI = sin(x);\n        let real = getReal(batch, i);\n        let imag = getImag(batch, i);\n\n        result = result +\n            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;\n      }\n\n      return result;\n    }\n\n    ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));\n      }\n    }\n  `}}function eS(e,t,n){const r=n.tensorMap.get(e.dataId),s=U(e.shape),i=e.shape[e.shape.length-1],a=[],o=Qg({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}});a.push(o);const l=o.shape,u=new Jk("real",l),c=new Jk("imag",l),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],d=[{type:"float32",data:[t?2*Math.PI:-2*Math.PI]},{type:"float32",data:[t?l[1]:1]}],p=n.runWebGPUProgram(u,h,"float32",d);a.push(p);const f=n.runWebGPUProgram(c,h,"float32",d);a.push(f);const m=iy({inputs:{real:p,imag:f},backend:n});a.push(m);const g=Qg({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return a.forEach((e=>n.disposeData(e.dataId))),g}const tS={kernelName:Rt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return eS(r,!1,n)}};class nS{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    `}}const rS={kernelName:Dt,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:r}=t,s=n,i=new nS(r.shape);return s.runWebGPUProgram(i,[r],r.dtype)}},sS=ly({opType:Rg.FLOOR,cpuKernelImpl:Vv}),iS={kernelName:Ft,backendName:"webgpu",kernelFunc:sS},aS=uy({opType:$g.FLOOR_DIV,cpuKernelImpl:Wv,dtype:"int32"}),oS={kernelName:Mt,backendName:"webgpu",kernelFunc:aS};class lS{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.pixelsOpType=ig.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};\n      ${cg("index")} {\n        let flatIndex = index * uniforms.numChannels;\n        if (flatIndex < uniforms.size) {\n          let coords = getCoordsFromIndex(flatIndex);\n          let values = ${e};\n          for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n            result[flatIndex + i] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}}const uS={kernelName:Dr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:i}=r;if(null==s)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const a="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,l="undefined"!==typeof HTMLCanvasElement&&s instanceof HTMLCanvasElement||"undefined"!==typeof OffscreenCanvas&&s instanceof OffscreenCanvas,u="undefined"!==typeof ImageBitmap&&s instanceof ImageBitmap,[c,h]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],d=[h,c,i],p=ke().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&a,f=a||o;if(u||l||f){let e;if(p)e=n.device.importExternalTexture({source:s});else{if(f){const e=ke().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=cS&&e===hS||(hS=e,cS=document.createElement("canvas").getContext("2d",{willReadFrequently:hS})),cS.canvas.width=c,cS.canvas.height=h,cS.drawImage(s,0,0,c,h),s=cS.canvas}const t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,r="rgba8unorm",i=n.textureManager.acquireTexture(d[1],d[0],r,t);n.queue.copyExternalImageToTexture({source:s},{texture:i},[d[1],d[0]]),e=i}const t=U(d),r=le(d),a=new lS(d,i,p),o=[{type:"uint32",data:[t]},{type:"uint32",data:[i]},{type:"uint32",data:[...r]}],l=n.makeTensorInfo([h,c],"int32");n.tensorMap.get(l.dataId).resource=e;const u=n.runWebGPUProgram(a,[l],"int32",o);return n.disposeData(l.dataId),u}const m=s.data;let g=m;if(null!=i&&4!==i){g=new Uint8Array(s.width*s.height*i);const e=m.length;let t=0;for(let n=0;n<e;n++)n%4<i&&(g[t++]=m[n])}const y=n.makeTensorInfo(d,"int32",new Int32Array(g));return n.uploadToGPU(y.dataId),y}};let cS,hS=ke().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");class dS{constructor(e,t,n,r,s){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],eo(e,t),eo(e,n),this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),null!=r&&(eo(e,r),this.variableNames.push("offset")),null!=s&&(eo(e,s),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";null!=this.scaleShape&&(t="getScaleByOutputIndex(index)");return`\n      ${cg("index")} {\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}}const pS={kernelName:Pt,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s,scale:i,offset:a,mean:o,variance:l}=t,{varianceEpsilon:u}=n,c=r,h=[s,o,l];let d=null;null!=a&&(d=a.shape,h.push(a));let p=null;null!=i&&(p=i.shape,h.push(i));const f=new dS(s.shape,o.shape,l.shape,d,p),m=[{type:"float32",data:[u]}];return c.runWebGPUProgram(f,h,s.dtype,m)}};const fS={kernelName:Pr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Il(c);return Ww({x:s,filter:i,convInfo:ml(s.shape,i.shape,l,h,u,d,!1,m),backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:f,activation:p})}};const mS={kernelName:zr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r;let f=c;null==f&&(f=[1,1]),B(Sl(l,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`));const m=ml(s.shape,i.shape,l,f,u,h,!0),g=[s,i],y=null!=a,b=null!=o;y&&g.push(a),b&&g.push(o);const v=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];let x;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&1===m.dilationHeight&&1===m.dilationWidth&&m.inChannels%4===0?(x=new bk(m,y,d,b),v.push({type:"int32",data:[x.virtualWidth]})):(x=new vk(m,y,d,b),v.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),"leakyrelu"===d&&(v.push({type:"float32",data:[p]}),x.uniforms+=" alpha : f32,"),n.runWebGPUProgram(x,g,"float32",v)}};class gS{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${lg(e)},`}getUserCode(){let e;e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides";return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}}const yS={kernelName:Lt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=s.shape,a=i[i.length-1],o=U(r.shape),[l,u,c,h]=zp(r,s),d=Qg({inputs:{x:s},backend:n,attrs:{shape:[u,a]}}),p=Qg({inputs:{x:r},backend:n,attrs:{shape:[U(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),i=Uv(e,t,r.dtype,u,a,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,i.values)}const f=new gS(a,[u,c]),m=[{type:"int32",data:[a]},{type:"int32",data:h}],g=n.runWebGPUProgram(f,[p,d],p.dtype,m),y=Qg({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(g.dataId),y}};class bS{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("indexZ"):n.push(`${t[r]}`);return n.join()}(this.aShape);return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(${e}));\n        }\n      }\n    `}}function vS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r,l=Tf(s,i,Q(a,s.shape)[0],o),u=U(i.shape),c=[],h=Qg({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=Qg({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(d);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,i])){const e=n.tensorMap.get(d.dataId).values,t=_a(d.shape,d.dtype,e),r=n.tensorMap.get(h.dataId).values,s=_a(h.shape,h.dtype,r),i=Gv(s,t,p);return c.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(l.outputShape,i.dtype,i.values)}const f=new bS(h.shape,p),m=n.runWebGPUProgram(f,[h,d],h.dtype);c.push(m);const g=Qg({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((e=>n.disposeData(e.dataId))),g}const xS={kernelName:zt,backendName:"webgpu",kernelFunc:vS},wS=uy({opType:$g.GREATER,cpuKernelImpl:Hv,dtype:"bool"}),kS={kernelName:Bt,backendName:"webgpu",kernelFunc:wS},SS=uy({opType:$g.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:jv}),CS={kernelName:Vt,backendName:"webgpu",kernelFunc:SS};const IS={kernelName:Ut,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return eS(r,!0,n)}},_S=ly({opType:Rg.IS_FINITE,dtype:"bool"}),TS={kernelName:jt,backendName:"webgpu",kernelFunc:_S},NS=ly({opType:Rg.IS_INF,dtype:"bool"}),ES={kernelName:Ht,backendName:"webgpu",kernelFunc:NS},$S=ly({opType:Rg.IS_NAN,dtype:"bool"}),AS={kernelName:qt,backendName:"webgpu",kernelFunc:$S};const RS={kernelName:Kt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r,a=[{type:"float32",data:[i]}],o=new oy(s.shape,Rg.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(o,[s],"float32",a)}},OS=uy({opType:$g.LESS,dtype:"bool",cpuKernelImpl:Kv}),DS={kernelName:Xt,backendName:"webgpu",kernelFunc:OS},FS=uy({opType:$g.LESS_EQUAL,dtype:"bool",cpuKernelImpl:qv}),MS={kernelName:Yt,backendName:"webgpu",kernelFunc:FS};class PS{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);\n        }\n      }\n    `}}const zS={kernelName:Qt,backendName:"webgpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=(s-r)/(i-1),o=new PS(i),l=[{type:"float32",data:[r]},{type:"float32",data:[a]}];return t.runWebGPUProgram(o,[],"float32",l)}},LS=ly({opType:Rg.LOG,cpuKernelImpl:Xv}),BS={kernelName:Zt,backendName:"webgpu",kernelFunc:LS},VS=ly({opType:Rg.LOG1P}),WS={kernelName:Jt,backendName:"webgpu",kernelFunc:VS},US=uy({opType:$g.LOGICAL_AND,dtype:"bool"}),GS={kernelName:en,backendName:"webgpu",kernelFunc:US},jS=ly({opType:Rg.LOGICAL_NOT}),HS={kernelName:tn,backendName:"webgpu",kernelFunc:jS},qS=uy({opType:$g.LOGICAL_OR}),KS={kernelName:nn,backendName:"webgpu",kernelFunc:qS},XS="\n  var powValue = 0.0;\n  let basis = uniforms.bias + uniforms.alpha * sum;\n  if (uniforms.beta == 0.5) {\n    powValue = inverseSqrt(basis);\n  } else if (uniforms.beta == 1.0) {\n    powValue = 1.0 / basis;\n  } else {\n    powValue = exp(log(basis) * (-uniforms.beta));\n  }\n";class YS{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`\n    ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n        let d = coords[3];\n\n        let x = getX(b, r, c, d);\n        var sum = 0.0;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let idx = d + i;\n          if (idx >= 0 && idx < uniforms.xShape[3]) {\n            let z = getX(b, r, c, idx);\n            sum = sum + z * z;\n          }\n        }\n        ${XS}\n\n        setOutputAtIndex(index, x * powValue);\n      }\n    }\n  `}}class QS{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,B(t<=this.maxAllowRadius,(()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`)),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=xg(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`\n    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;\n    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};\n    const maxAllowRadius = ${this.maxAllowRadius};\n\n    ${cg()} {\n      let localDepth = i32(localId.x);\n      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;\n      let xDepth = workgroupDepth + localDepth - maxAllowRadius;\n      let b = i32(globalId.z) / uniforms.xShape[1];\n      let r = i32(globalId.z) - b * uniforms.xShape[1];\n      let c = i32(globalId.y);\n      let d = workgroupDepth + localDepth;\n\n      var x = 0.0;\n      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {\n        x = getX(b, r, c, xDepth);\n      }\n      lrnSub[localDepth] = x;\n      workgroupBarrier();\n\n      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {\n        var sum = 0.0;\n        let index = localDepth + maxAllowRadius;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let z = lrnSub[index + i];\n          sum = sum + z * z;\n        }\n        ${XS}\n\n        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);\n      }\n    } `}}const ZS={kernelName:rn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=r;let u;u=i>16?new YS(s.shape):new QS(s.shape,i);const c=[{type:"int32",data:[i]},{type:"float32",data:[a]},{type:"float32",data:[o]},{type:"float32",data:[l]}];return n.runWebGPUProgram(u,[s],s.dtype,c)}};class JS{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`\n    ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n\n        let MIN_DEPTH_BEGIN = 0;\n        let MAX_DEPTH_END = uniforms.outShape[3];\n        var result = 0.0;\n        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {\n          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);\n          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);\n\n          var norm = 0.0;\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            } else {\n              break;\n            }\n          }\n\n          norm = uniforms.alpha * norm + uniforms.bias;\n\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              var dyi = -2.0 * uniforms.alpha * uniforms.beta\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * uniforms.beta);\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, result);\n      }\n    }\n  `}}const eC={kernelName:sn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new JS(s.shape),d=[{type:"int32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return n.runWebGPUProgram(h,[s,i,a],s.dtype,d)}},tC=uy({opType:$g.MAX,cpuKernelImpl:Qv}),nC={kernelName:on,backendName:"webgpu",kernelFunc:tC};const rC={kernelName:ln,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;return tw(s,pl(s.shape,i,a,1,o,l),"max",n)}};const sC={kernelName:cn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=fl(s.shape,i,a,[1,1,1],o,u,l),h=new Yx(c,"max"),d=[{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.front,c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.inDepth,c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth]}];return n.runWebGPUProgram(h,[s],s.dtype,d)}};class iC{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`\n      ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            let curPosValue = wR * uniforms.filterDims[1] + wC;\n            let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}class aC{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`\n      ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;\n\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;\n              let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}const oC={kernelName:hn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=fl(a.shape,o,l,[1,1,1],u,c),d=new Yx(h,"max",!0);let p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];const f=n.runWebGPUProgram(d,[a],"int32",p),m=new aC(h);p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];const g=n.runWebGPUProgram(m,[s,f],a.dtype,p);return n.disposeData(f.dataId),g}};const lC={kernelName:un,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;_g([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=pl(o.shape,l,u,1,c,h),p=new Xx(d,"max",!0);let f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];const m=n.runWebGPUProgram(p,[o],"int32",f),g=new iC(d);f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const y=n.runWebGPUProgram(g,[s,m],o.dtype,f);return n.disposeData(m.dataId),y}};const uC={kernelName:dn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=r,{x:l}=t;B(4===l.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`));const u=[1,1];B(Sl(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=pl(l.shape,s,i,u,a),h=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}];let d=new Xx(c,"max",!1);const p=n.runWebGPUProgram(d,[l],l.dtype,h);return d=new Xx(c,"max",!0,!0,o),[p,n.runWebGPUProgram(d,[l],"int32",h)]}};const cC={kernelName:fn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;return Rx(s,i,a,"min",n)}},hC=uy({opType:$g.MIN,cpuKernelImpl:Zv}),dC={kernelName:mn,backendName:"webgpu",kernelFunc:hC};class pC{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.offset="reflect"===n?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),n=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),r=1===e?"start":"start[i]",s=1===e?"end":"end[i]",i=1===e?"outC":"outC[i]",a=lg(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let start = ${a}(${t});\n          let end = ${a}(${n});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${i} < ${r}) {\n              ${i} = ${r} * 2 - ${i} - ${this.offset};\n            } else if(${i} >= ${s}) {\n              ${i} = (${s} - 1) * 2 - ${i} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${o}));\n        }\n      }\n    `}}const fC={kernelName:gn,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{paddings:i,mode:a}=n,o=r,l=i.map((e=>({type:"int32",data:[e[0],e[1]]}))),u=new pC(s.shape,i,a);return o.runWebGPUProgram(u,[s],s.dtype,l)}},mC=uy({opType:$g.MOD}),gC={kernelName:yn,backendName:"webgpu",kernelFunc:mC};class yC{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {\n      let HASHSCALE1 = 443.8975;\n      let p = resultUV * seed;\n      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);\n      p3 = p3 + dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${cg("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n\n        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),\n            f32(coords[0]) / f32(uniforms.outShape[0]));\n        let r = random(uniforms.seed, resUV);\n        var cdf = 0.0;\n        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {\n          cdf = cdf + getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutputAtIndexI32(index, i);\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);\n      }\n    }\n  `}}class bC{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`\n    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;\n    var<workgroup> rowMaxShared : f32;\n    var<workgroup> rowSumShared : f32;\n    const blockSize = ${this.workgroupSize[0]};\n    ${cg("index")} {\n      let row = index / blockSize;\n      let tid = i32(localId.x);\n      let cols = uniforms.outShape[1];\n\n      var threadMax = -3.402823e+38f;\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = getLogits(row, col);\n        threadMax = max(threadMax, value);\n      }\n      if (tid < cols) {\n        buf[tid] = threadMax;\n      }\n      workgroupBarrier();\n\n      var reduceSize = min(cols, blockSize);\n      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n        reduceSize = currSize + (reduceSize & 1);\n        if (tid < currSize) {\n          buf[tid] = max(buf[tid], buf[tid + reduceSize]);\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowMaxShared = buf[0];\n      }\n      workgroupBarrier();\n\n      var threadSum = 0.0;\n      for (var col = tid; col < cols; col += blockSize) {\n        let subExp = exp(getLogits(row, col) - rowMaxShared);\n        threadSum += subExp;\n      }\n      buf[tid] = threadSum;\n      workgroupBarrier();\n\n      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n        if (tid < currSize) {\n          buf[tid] = buf[tid] + buf[tid + currSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowSumShared = buf[0];\n      }\n      workgroupBarrier();\n\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;\n        setOutputAtCoords(row, col, value);\n      }\n  }\n    `}}function vC(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=Qg({inputs:{x:s},backend:n,attrs:{shape:[U(s.shape)/s.shape[i],s.shape[i]]}}),o=new bC(a.shape),l=n.runWebGPUProgram(o,[a],s.dtype),u=Qg({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeData(a.dataId),n.disposeData(l.dataId),u}const xC={kernelName:ur,backendName:"webgpu",kernelFunc:vC};const wC={kernelName:bn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r,l=o?s:vC({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new yC(u,i),d=[{type:"float32",data:[a]},{type:"int32",data:[c]}],p=n.runWebGPUProgram(h,[l],"int32",d);return o||n.disposeData(l.dataId),p}};const kC={kernelName:xn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.tensorMap.get(r.dataId),[t,s]=ex(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}const s=new oy(r.shape,Rg.NEG);return n.runWebGPUProgram(s,[r],r.dtype)}};const SC={kernelName:kn,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=Ed(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}};const CC={kernelName:Cn,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Ad(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class IC{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`\n      ${cg("index")} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,\n                                      f32(i32(round(getX(coords.x))) == coords.y)));\n        }\n      }\n    `}}const _C={kernelName:_n,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:a,onValue:o,offValue:l}=r,u=U(s.shape),c=new IC(u,a),h=Qg({inputs:{x:s},backend:n,attrs:{shape:[u]}}),d=[{type:"float32",data:[o]},{type:"float32",data:[l]}],p=n.runWebGPUProgram(c,[h],i,d);n.disposeData(h.dataId);const f=Qg({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeData(p.dataId),f}};function TC(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=ww({inputs:{input:r},backend:n}),t=TC({inputs:{x:e},backend:n}),s=Ow({inputs:{input:r},backend:n}),i=TC({inputs:{x:s},backend:n}),a=iy({inputs:{real:t,imag:i},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(s.dataId),n.disposeData(i.dataId),a}return Xg({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const NC={kernelName:Rr,backendName:"webgpu",kernelFunc:TC};const EC={kernelName:In,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=ww({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),i=Ow({inputs:{input:s},backend:r}),a=TC({inputs:{x:i},backend:r}),o=iy({inputs:{real:n,imag:a},backend:r});return r.disposeData(t.dataId),r.disposeData(n.dataId),r.disposeData(i.dataId),r.disposeData(a.dataId),o}return Xg({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const $C={kernelName:Tn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Xk({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{V(i,e.shape,"All tensors passed to stack must have matching shapes"),B(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=Mw({inputs:t.map((e=>{const t=Xk({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeData(e.dataId))),l}};function AC(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.length,r=lg(n),s=e.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),i=e.map(((e,t)=>`uniforms.pad${t}[0] + uniforms.xShape${n>1?`[${t}]`:""}`)).join(",");return`\n        let start = ${n>1?`${r}(${s})`:`${s}`};\n        let end = ${n>1?`${r}(${i})`:`${i}`};\n        if (${n>1?"any(paddedCoords < start)":"paddedCoords < start"} || ${n>1?"any(paddedCoords >= end)":"paddedCoords >= end"}) {\n          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});\n        } else {\n          let coords = paddedCoords - start;\n          setOutputAtIndex(index, getX(${n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords"}));\n        }\n  `}class RC{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let paddedCoords = getCoordsFromIndex(index);\n          ${AC(this.xShape)}\n        }\n      }\n    `}}const OC={kernelName:Nn,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;if(i.every((e=>j(e,[0,0]))))return ry({inputs:{x:s},backend:n});if(0===U(s.shape)){const e=i.map(((e,t)=>e[0]+s.shape[t]+e[1]));return Xg({backend:n,attrs:{shape:e,value:a,dtype:s.dtype}})}const o=[{type:"float32",data:[a]}];i.map((e=>o.push({type:"int32",data:[e[0],e[1]]})));const l=new RC(s.shape,i);return n.runWebGPUProgram(l,[s],s.dtype,o)}},DC=uy({opType:$g.POW}),FC={kernelName:En,backendName:"webgpu",kernelFunc:DC};const MC={kernelName:$n,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,i=new ny($g.PRELU,r.shape,s.shape);return n.runWebGPUProgram(i,[r,s],"float32")}};const PC={kernelName:An,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;return Rx(s,i,a,"prod",n)}},zC={kernelName:Fn,backendName:"webgpu",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:i,dtype:a}=n,o=rx(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},LC=uy({opType:$g.DIV}),BC={kernelName:St,backendName:"webgpu",kernelFunc:LC},VC=ly({opType:Rg.RECIPROCAL}),WC={kernelName:Pn,backendName:"webgpu",kernelFunc:VC},UC=ly({opType:Rg.RELU}),GC={kernelName:zn,backendName:"webgpu",kernelFunc:UC},jC=ly({opType:Rg.RELU6}),HC={kernelName:Gn,backendName:"webgpu",kernelFunc:jC};class qC{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}const KC={kernelName:Wn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,size:a,halfPixelCenters:o}=r,[l,u]=a,c=[{type:"float32",data:[i&&l>1?1:0,i&&u>1?1:0]},{type:"float32",data:[o?.5:0]}],h=new qC(s.shape,l,u);return n.runWebGPUProgram(h,[s],"float32",c)}};class XC{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,\n       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let dxR = f32(dyR) * uniforms.heightScale;\n              let topDxRIndex = i32(floor(dxR));\n              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));\n              let dxRLerp = dxR - f32(topDxRIndex);\n              let inverseDxRLerp = 1.0 - dxRLerp;\n\n              let dxC = f32(dyC) * uniforms.widthScale;\n              let leftDxCIndex = i32(floor(dxC));\n              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));\n              let dxCLerp = dxC - f32(leftDxCIndex);\n              let inverseDxCLerp = 1.0 - dxCLerp;\n\n              if (r == topDxRIndex && c == leftDxCIndex) {\n                // topLeft\n                accumulator +=\n                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n              }\n\n              if (r == topDxRIndex && c == rightDxCIndex) {\n                // topRight\n                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == leftDxCIndex) {\n                // bottomLeft\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == rightDxCIndex) {\n                // bottomRight\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    `}}const YC={kernelName:Un,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,[,o,l]=s.shape,[,u,c]=i.shape,h=[a&&u>1?o-1:o,a&&c>1?l-1:l],d=[a&&u>1?u-1:u,a&&c>1?c-1:c],p=h[0]/d[0],f=h[1]/d[1],m=1/p,g=1/f,y=2*Math.ceil(m)+2,b=2*Math.ceil(g)+2,v=new XC(s.shape,a),x=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[b]}];return n.runWebGPUProgram(v,[i],i.dtype,x)}};class QC{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC";return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}const ZC={kernelName:Bn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=[{type:"float32",data:[i&&l>1?1:0,i&&u>1?1:0]},{type:"float32",data:[i?.5:0]}],h=new QC(s.shape,l,u,a);return n.runWebGPUProgram(h,[s],s.dtype,c)}};class JC{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,\n       winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *\n                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));\n\n              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *\n                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));\n\n              let sourceNearestRow =\n                  i32(min(f32(uniforms.outShape[1] - 1),\n                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));\n\n              let sourceNearestCol =\n                  i32(min(f32(uniforms.outShape[2] - 1),\n                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));\n\n              if (r == sourceNearestRow && c == sourceNearestCol) {\n                accumulator += getDy(b, dyR, dyC, d);\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    `}}const eI={kernelName:Vn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,[,o,l]=s.shape,[,u,c]=i.shape,h=[a&&u>1?o-1:o,a&&c>1?l-1:l],d=[a&&u>1?u-1:u,a&&c>1?c-1:c],p=1/(h[0]/d[0]),f=1/(h[1]/d[1]),m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2,y=new JC(s.shape,a),b=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[g]}];return n.runWebGPUProgram(y,[i],i.dtype,b)}};class tI{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`\n      \n      // Using uniform variables as judging conditions, so the function has\n      // coherent execution within all threads.\n      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {\n        var reverseCoords = coords;\n        if (uniforms.axis[0] == 1) {\n          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;\n        }\n        if (uniforms.axis[1] == 1) {\n          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;\n        }\n        if (uniforms.axis[2] == 1) {\n          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;\n        }\n        if (uniforms.axis[3] == 1) {\n          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;\n        }\n\n        return reverseCoords;\n      }\n    \n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let reverseCoords = getReverseCoords(coords);\n          setOutputAtIndex(index, getX(reverseCoords[0],\n              reverseCoords[1], reverseCoords[2], reverseCoords[3]));\n        }\n      }\n    `}}const nI={kernelName:jn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r,a=s.shape.length;if(0===a)return ry({inputs:{x:s},backend:n});const o=s.shape,l=[1,1,1,1];o.forEach(((e,t)=>{l[t+4-a]=e}));const u=Q(i,s.shape),c=[0,0,0,0];u.forEach((e=>{c[e+4-a]=1}));const h=[{type:"int32",data:c}],d=Qg({inputs:{x:s},backend:n,attrs:{shape:l}}),p=new tI(l),f=n.runWebGPUProgram(p,[d],d.dtype,h);n.disposeData(d.dataId);const m=Qg({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeData(f.dataId),m}};class rI{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"===typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        ${cg("index")} {\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `}}const sI={kernelName:Fr,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,{radians:i,fillValue:a,center:o}=n,l=r,u=new rI(s.shape,a),[c,h]=Rp(o,s.shape[1],s.shape[2]),d=[{type:"float32",data:[c]},{type:"float32",data:[h]},{type:"float32",data:[Math.sin(i)]},{type:"float32",data:[Math.cos(i)]}];"number"===typeof a?d.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):d.push({type:"float32",data:a});return l.runWebGPUProgram(u,[s],s.dtype,d)}},iI=ly({opType:Rg.ROUND}),aI={kernelName:Hn,backendName:"webgpu",kernelFunc:iI},oI=ly({opType:Rg.RSQRT,cpuKernelImpl:sx}),lI={kernelName:qn,backendName:"webgpu",kernelFunc:oI};class uI{constructor(e,t,n,r,s,i,a){let o=!(arguments.length>7&&void 0!==arguments[7])||arguments[7];this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=a,this.sumDupeIndices=o,this.dispatchLayout=Sg(e),this.dispatch=xg(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${r}_${this.sliceDimGreaterThanOne}_${a}_${o}_${s.length}`;const l=lg(s.length);this.uniforms=`sliceDim : i32, strides: ${l}, updatesSize: i32,`,this.updatesRank=r,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");const t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",s="";1===this.dispatchLayout.x.length?(r="flattenedIndex",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.dispatchLayout.x.length&&(r="vec2<i32>(flattenedIndex, coords[1])",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        // N.B. |updates| could be a scalar tensor, conceptually representing a\n        // 2D tensor with all values equal to that. By design, its size must be\n        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|\n        // gives the other.\n        let sliceSize = uniforms.outShape[1];\n        let d0 = index / sliceSize;\n        let d1 = index - d0 * sliceSize;\n        return vec2<i32>(d0, d1);\n      }\n      ");const i=`getUpdates(${Array.from({length:this.updatesRank},((e,t)=>`coords[${t}]`)).join(", ")})`;return`\n    ${s}\n      ${cg("index")} {\n        if (index < uniforms.updatesSize) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue =\n              ${yg(this.type)}(${i});\n          let flatIndex = getOutputIndexFromCoords(${r});\n\n          ${this.sumDupeIndices?sg("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}\n        }\n      }`}}const cI={kernelName:Kn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Lh(0,s,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,s.dtype);const p=Qg({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=Qg({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,g=Xg({backend:n,attrs:{shape:d,value:0,dtype:m}}),y=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[U(f.shape)]}],b=new uI(f.shape,o,p.shape.length,f.shape.length,c,d,m),v=n.runWebGPUProgram(b,[f,p],m,y,g),x=Qg({inputs:{x:v},backend:n,attrs:{shape:a}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(v.dataId),x}};class hI{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`\n      fn findBound(batch: i32, value: f32) -> i32 {\n        var left = i32(0);\n        var right = uniforms.numInputs;\n        while (left < right) {\n          var mid = (left + right) / 2;\n          if (getSortedSequence(batch, mid) ${"left"===this.side?"<":"<="} value) {\n            left = mid + 1;\n          } else {\n            right = mid;\n          }\n        }\n        return right;\n      }\n\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let value = getValuesByOutputIndex(index);\n          setOutputAtIndexI32(index, findBound(coords[0], value));\n        }\n      }\n    `}}const dI={kernelName:Yn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:a}=r,o=new hI([i.shape[0],i.shape[1]],a),l=[{type:"int32",data:[s.shape[1]]}];return n.runWebGPUProgram(o,[s,i],"int32",l)}};class pI{constructor(e,t,n){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],s=[];for(let e=0;e<this.outputShape.length;e++)s.push(`${n[e]}`),e<this.cRank&&r.push(`${n[e]}`);e=r.join(),t=s.join()}return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${t}));\n          } else {\n            setOutputAtIndex(index, getB(${t}));\n          }\n        }\n      }\n    `}}const fI={kernelName:Qn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t,a=new pI(r.shape.length,s.shape,s.shape.length);return n.runWebGPUProgram(a,[r,s,i],zs(s.dtype,i.dtype))}},mI=ly({opType:Rg.SELU}),gI={kernelName:Zn,backendName:"webgpu",kernelFunc:mI},yI=ly({opType:Rg.SIGMOID}),bI={kernelName:rr,backendName:"webgpu",kernelFunc:yI},vI=ly({opType:Rg.SIGN}),xI={kernelName:nr,backendName:"webgpu",kernelFunc:vI},wI=ly({opType:Rg.SIN}),kI={kernelName:er,backendName:"webgpu",kernelFunc:wI},SI=ly({opType:Rg.SINH}),CI={kernelName:tr,backendName:"webgpu",kernelFunc:SI},II=ly({opType:Rg.SOFTPLUS}),_I={kernelName:sr,backendName:"webgpu",kernelFunc:II};class TI{constructor(e,t,n,r,s,i){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const a=new Array(r.length);for(let o=0;o<a.length;o++)a[o]=r[s[o]];this.outputShape=a,this.newDim=s,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${lg(r.length)}, paddedXShapeStrides : ${lg(i)}, `,n.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.shaderKey=`spaceToBatchND_${s}`}getUserCode(){const e=lg(this.outputShape.length),t=Tx(this.newDim);return`\n      ${fg(this.paddedXShape,"PaddedX")}\n      ${cg("index")} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);\n          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);\n          ${AC(this.xShape,!0)}\n        }\n      }\n    `}}const NI={kernelName:or,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;B(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...a);for(let b=1+i.length;b<s.shape.length;++b)l.push([0,0]);const u=l.map(((e,t)=>e[0]+s.shape[t]+e[1])),c=Op(u,i,o,!1),h=Dp(c.length,i.length,!1),d=Fp(u,i,o,!1),p=le(u),f=new TI(s.shape,u,l,c,h,p.length),m=[{type:"int32",data:c},{type:"int32",data:p}];l.map((e=>m.push({type:"int32",data:[e[0],e[1]]})));const g=n.runWebGPUProgram(f,[s],s.dtype,m),y=Qg({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeData(g.dataId),y}};class EI{constructor(e,t,n){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=n,this.dispatchLayout=Sg([t]),this.dispatch=xg(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`\n    ${cg("index")} {\n      if (index < uniforms.sparseSize) {\n        let indexInSegmentIds = index / uniforms.segmentSize;\n        let indexInSegment = index % uniforms.segmentSize;\n        let indexInInput = indices[indexInSegmentIds];\n        let segmentId = segmentIds[indexInSegmentIds];\n\n        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];\n        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;\n        ${sg("&result[outIndex]","value",this.type)}\n      }\n    }\n  `}}class $I{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=Sg(t),this.dispatch=xg(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`\n    ${cg("index")} {\n      if (index < uniforms.segmentIdsShape) {\n        let segmentId = segmentIds[index];\n        ${sg("&result[segmentId]","1","int32")}\n      }\n    }\n  `}}class AI{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=Sg(e),this.dispatch=xg(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`\n    ${cg("index")} {\n      if (index < uniforms.size) {\n        let segmentId = index / uniforms.segmentSize;\n        let count = sameSegmentIdCount[segmentId];\n        if (count != 0) {\n          ${"float32"===this.type?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}\n        }\n      }\n    }\n  `}}function RI(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4?arguments[4]:void 0;const i=U(e.shape)/e.shape[0],a=e.dtype,o=U(t.shape),l=s.readSync(n.dataId),u=o>0?l[o-1]+1:0;let c;const h=e.shape.slice();h[0]=u;const d=o*i,p=Xg({backend:s,attrs:{shape:h,value:0,dtype:a}});c=new EI(h,d,a);let f=[{type:"int32",data:[i]},{type:"int32",data:[d]}];const m=s.runWebGPUProgram(c,[e,t,n],a,f,p);if(r)return m;const g=Xg({backend:s,attrs:{shape:[u],value:0,dtype:"int32"}});c=new $I(u,n.shape);const y=s.runWebGPUProgram(c,[n],"int32",null,g),b=Xg({backend:s,attrs:{shape:h,value:0,dtype:a}});c=new AI(h,a),f=[{type:"int32",data:[i]}];const v=s.runWebGPUProgram(c,[m,y],a,f,b);return s.disposeData(m.dataId),s.disposeData(y.dataId),v}const OI={kernelName:dr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;return RI(r,s,i,!1,n)}};const DI={kernelName:pr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;return RI(r,s,i,!0,n)}};class FI{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e;s++)r.push(`(${n[s]} % ${t}aShape[${s}])`);return r.join()}(this.rank,"uniforms.");return`\n      ${cg("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${e}));\n        }\n      }\n    `}}function MI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;if(n.shouldExecuteOnCPU([s])||"string"===s.dtype||s.shape.length>=5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>fs(e))):e,r=_a(s.shape,s.dtype,t),a=hx(r,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new FI(s.shape,i);return n.runWebGPUProgram(a,[s],s.dtype)}const PI={kernelName:Ir,backendName:"webgpu",kernelFunc:MI};const zI={kernelName:fr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Lh(0,s,o),p=!1;if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),r=fs(n.readSync(a.dataId)[0]),f=ix(e,t,o,d,c,u,l,h,r,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=[d/c,c],m=Qg({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),g=i.shape.length?Qg({inputs:{x:i},backend:n,attrs:{shape:[u,c]}}):ry({inputs:{x:i},backend:n}),y=g.dtype,b=n.makeTensorInfo([],y,pe(1,y)),v=Qg({inputs:{x:a},backend:n,attrs:{shape:Array(f.length).fill(1)}}),x=MI({inputs:{x:v},backend:n,attrs:{reps:f}}),w=[{type:"int32",data:[l]},{type:"int32",data:h},{type:"int32",data:[U([u,c])]}];switch(u){case 0:break;case 1:{const e=new uI([u,c],l,m.shape.length,g.shape.length,h,f,y,p);n.runWebGPUProgram(e,[g,m],y,w,x)}break;default:{const e=new uI([u,c],l,m.shape.length,b.shape.length,h,f,y,p);n.runWebGPUProgram(e,[b,m],y,w,x)}{const e=new uI([u,c],l,m.shape.length,g.shape.length,h,f,y);n.runWebGPUProgram(e,[g,m],y,w,x)}}const k=Qg({inputs:{x:x},backend:n,attrs:{shape:o}});return n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(v.dataId),n.disposeData(b.dataId),n.disposeData(x.dataId),k}};const LI={kernelName:lr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=Q(a,s.shape)[0],l=df(s,i,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=hw({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},BI=ly({opType:Rg.SQRT}),VI={kernelName:ir,backendName:"webgpu",kernelFunc:BI},WI={kernelName:gr,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:r}=t,s=n,i=new oy(r.shape,Rg.SQUARE);return s.runWebGPUProgram(i,[r],r.dtype)}},UI=uy({opType:$g.SQUARED_DIFFERENCE}),GI={kernelName:mr,backendName:"webgpu",kernelFunc:UI};const jI={kernelName:Or,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,i=new oy(s.shape,Rg.STEP,"stepAlpha : f32,"),a=[{type:"float32",data:[n.alpha]}];return r.runWebGPUProgram(i,[s],s.dtype,a)}};class HI{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=lg(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`))).join(",")}return`\n       ${cg("index")} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${e}));\n         }\n       }\n     `}}const qI={kernelName:br,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:x}=Zo(s.shape,i,a,o,l,u,c,h,d);let w;if(m)w=Qg({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){B(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Lo(b,v,x),t=hw({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=Qg({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeData(t.dataId)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=_a(s.shape,s.dtype,e),r=lx(p,t,x,b);w=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new HI(p),t=[{type:"int32",data:b},{type:"int32",data:x}],r=n.runWebGPUProgram(e,[s],s.dtype,t);w=Qg({inputs:{x:r},backend:n,attrs:{shape:f}}),n.disposeData(r.dataId)}}return w}};const KI={kernelName:vr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=ux(d,p,s,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},XI=uy({opType:$g.SUB,cpuKernelImpl:cx,supportsComplex:!0}),YI={kernelName:kr,backendName:"webgpu",kernelFunc:XI},QI=ly({opType:Rg.TAN}),ZI={kernelName:Sr,backendName:"webgpu",kernelFunc:QI},JI=ly({opType:Rg.TANH}),e_={kernelName:Cr,backendName:"webgpu",kernelFunc:JI};const t_={kernelName:Xn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:i,updates:a}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Lh(0,i,s.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(s.shape,i.dtype);const p=[],f=Qg({inputs:{x:i},backend:n,attrs:{shape:[l,o]}});p.push(f);const m=Qg({inputs:{x:a},backend:n,attrs:{shape:[l,u]}});p.push(m);const g=Qg({inputs:{x:s},backend:n,attrs:{shape:d}});p.push(g);const y=MI({inputs:{x:g},backend:n,attrs:{reps:Array(d.length).fill(1)}}),b=new uI([l,u],o,f.shape.length,m.shape.length,c,d,s.dtype,!1),v=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[U([l,u])]}],x=n.runWebGPUProgram(b,[m,f],g.dtype,v,y);p.push(x);const w=Qg({inputs:{x:x},backend:n,attrs:{shape:s.shape}});return p.forEach((e=>n.disposeData(e.dataId))),w}};class n_{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return`\n        ${cg("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}}class r_{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`\n        ${cg("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}}function s_(e,t){null!==t&&e.disposeData(t.dataId)}function i_(e){let t=1;for(;t<e;)t*=2;return t}const a_={kernelName:_r,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r,o=s.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),[t,r]=dx(e,o,s.dtype,i,a);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return o[o.length-1]=0,[n.makeTensorInfo(o,s.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(1===l)return[s,Xg({attrs:{shape:o,dtype:"int32",value:0},backend:n})];const u=U(o)/l,c=Qg({inputs:{x:s},attrs:{shape:[u,l]},backend:n}),h=i_(i),d=i_(l);let p=null;const f=()=>null===p?[c,c]:[c,p],m=(e,t,r)=>{const s=f(),i=new n_(r),a=[{type:"int32",data:[l]},{type:"int32",data:[null===p?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],o=p;p=n.runWebGPUProgram(i,s,"int32",a),s_(n,o)};for(let x=1;x<h;x*=2){const e=2*x;for(let t=x;t>=1;t/=2)m(e,t,[u,d])}for(let x=d;x>h;x/=2){const e=f(),t=new r_([u,x/2]),r=[{type:"int32",data:[l]},{type:"int32",data:[null===p?1:0]},{type:"int32",data:[h]}],s=p;p=n.runWebGPUProgram(t,e,"int32",r),s_(n,s);const i=h/2,a=2*i;for(let n=i;n>=1;n/=2)m(a,n,p.shape)}let g=p;p=hw({inputs:{x:p},backend:n,attrs:{begin:0,size:[u,i]}}),s_(n,g);let y=vS({inputs:{x:c,indices:p},backend:n,attrs:{axis:1,batchDims:1}});s_(n,c);const b=o.slice(0,-1);b.push(i),g=p,p=Qg({inputs:{x:p},attrs:{shape:b},backend:n}),s_(n,g);const v=y;return y=Qg({inputs:{x:y},attrs:{shape:b},backend:n}),s_(n,v),[y,p]}};class o_{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          ${cg("index")} {\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        `}}const l_={kernelName:Tr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=new o_([c,f,m,p]),y="nearest"===a?1:2;let b;switch(o){case"constant":default:b=1;break;case"reflect":b=2;break;case"wrap":b=3;break;case"nearest":b=4}const v=[{type:"int32",data:[y]},{type:"int32",data:[b]},{type:"float32",data:[l]}];return n.runWebGPUProgram(g,[s,i],"float32",v)}};const u_={kernelName:$r,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,l=s.shape[i],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==i&&(u[c++]=a.shape[m]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[i]=m;const e=hw({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),t=Qg({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeData(e.dataId))),f}};class c_{constructor(e,t,n){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=Sg(e),this.dispatch=xg(this.dispatchLayout,e,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error(`UnsortedSegmentSum only supports float32 and int32\n              types, does not support ${n} type.`);this.type=n,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`\n    ${cg("index")} {\n      if (index < uniforms.xSize) {\n        let coords = getXCoordsFromIndex(index);\n        let b = coords[0];\n        let inCol = coords[1];\n\n        let segmentId = i32(getSegmentIds(inCol));\n        if (segmentId >= 0) {\n          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;\n          let value = getX(b, inCol);\n\n          ${sg("&result[flatIndex]","value",this.type)}\n        }\n      }\n    }\n  `}}const h_={kernelName:Ar,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r,o=s.shape.length,l=[];let u=0;const c=_u([u],o);let h=s;null!=c&&(h=Nx({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Nu(1,o)[0]);const d=_f(h.shape,u,a),p=U([h.shape[u]]),f=Qg({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=s.dtype,g=[f.shape[0],a],y=Xg({backend:n,attrs:{shape:g,value:0,dtype:m}}),b=new c_(f.shape,g,m),v=[{type:"int32",data:[a]},{type:"int32",data:[U(f.shape)]}],x=n.runWebGPUProgram(b,[f,i],m,v,y),w=Qg({inputs:{x:x},backend:n,attrs:{shape:d}});l.push(x);let k=w;if(null!=c){l.push(w);const e=Tu(c);k=Nx({inputs:{x:k},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeData(e.dataId))),k}},d_=[ey,gx,bx,xx,kx,Cx,Ox,Dx,Mx,Px,Lx,Vx,Ux,jx,qx,nw,rw,aw,ow,lw,pw,gw,bw,Sw,Iw,Nw,ay,Aw,Pw,Uw,Kw,Yw,Zw,Jw,ek,nk,sk,ak,dk,pk,fk,gk,Sk,Ck,xk,_k,Nk,Ak,Rk,Dk,Lk,Vk,Wk,Gk,Hk,Kk,Yk,Zk,tS,Yg,rS,uS,iS,oS,pS,fS,mS,yS,xS,kS,CS,sy,IS,Dw,TS,ES,AS,RS,DS,MS,zS,WS,BS,GS,HS,KS,ZS,eC,Zx,nC,rC,lC,sC,oC,uC,ew,cC,dC,fC,gC,wC,Mk,kC,SC,CC,xw,_C,EC,$C,OC,FC,MC,PC,zC,kw,BC,WC,GC,HC,Zg,KC,YC,ZC,eI,nI,sI,aI,lI,cI,dI,fI,gI,bI,xI,kI,CI,dw,jI,qI,KI,xC,_I,NI,OI,DI,zI,LI,VI,WI,GI,YI,zk,ZI,e_,t_,PI,a_,l_,Ex,u_,h_,NC];for(const n of d_)Hr(n);var p_=function(e,t){return(p_=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)};function f_(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}p_(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var m_=function(){return(m_=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};function g_(e,t,n,r){return new(n||(n=Promise))((function(s,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,o)}l((r=r.apply(e,t||[])).next())}))}function y_(e,t){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}function b_(e,t,n){if(n||2===arguments.length)for(var r,s=0,i=t.length;s<i;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))}var v_=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],x_=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],w_={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},k_={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},S_=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],C_=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function I_(e){return e instanceof SVGAnimatedLength?e.baseVal.value:e}function __(e){return g_(this,void 0,void 0,(function(){var t,n;return y_(this,(function(r){switch(r.label){case 0:return t=document.createElement("canvas"),e instanceof Es?[4,Oo(e,t)]:[3,2];case 1:return r.sent(),[3,3];case 2:t.width=I_(e.width),t.height=I_(e.height),n=t.getContext("2d"),e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0),r.label=3;case 3:return[2,t]}}))}))}function T_(e){return g_(this,void 0,void 0,(function(){var t,n,r,s,i,a;return y_(this,(function(o){switch(o.label){case 0:return e instanceof Es?(t=e.shape.slice(0,2),n=t[0],r=t[1],s=ImageData.bind,[4,Oo(e)]):[3,2];case 1:return[2,new(s.apply(ImageData,[void 0,o.sent(),r,n]))];case 2:return i=document.createElement("canvas"),a=i.getContext("2d"),i.width=I_(e.width),i.height=I_(e.height),a.drawImage(e,0,0),[2,a.getImageData(0,0,i.width,i.height)]}}))}))}function N_(e){return g_(this,void 0,void 0,(function(){var t;return y_(this,(function(n){switch(n.label){case 0:return e instanceof SVGImageElement||e instanceof OffscreenCanvas?[4,__(e)]:[3,2];case 1:return t=n.sent(),[3,3];case 2:t=e,n.label=3;case 3:return[2,Do(t,4)]}}))}))}function E_(e){if(e<0||e>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(e));if(!Number.isInteger(e))throw new Error("Mask value must be an integer but got ".concat(e))}var $_={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},A_=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return g_(this,void 0,void 0,(function(){return y_(this,(function(e){return[2,this.mask]}))}))},e.prototype.toImageData=function(){return g_(this,void 0,void 0,(function(){return y_(this,(function(e){return[2,T_(this.mask)]}))}))},e.prototype.toTensor=function(){return g_(this,void 0,void 0,(function(){return y_(this,(function(e){return[2,N_(this.mask)]}))}))},e.prototype.getUnderlyingType=function(){return"canvasimagesource"},e}();function R_(e){return E_(e),"person"}var O_=function(){function e(e){var t,n=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new A.Pose({locateFile:function(t,n){if(e.solutionPath){var r=e.solutionPath.replace(/\/+$/,"");return"".concat(r,"/").concat(t)}return"".concat(n,"/").concat(t)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults((function(e){if(n.height=e.image.height,n.width=e.image.width,null==e.poseLandmarks)n.poses=[];else{var t=n.translateOutput(e.poseLandmarks,e.poseWorldLandmarks);e.segmentationMask&&(t.segmentation={maskValueToLabel:R_,mask:new A_(e.segmentationMask)}),n.poses=[t]}}))}return e.prototype.translateOutput=function(e,t){var n=this,r={keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,z:e.z,score:e.visibility,name:x_[t]}}))};return null!=t&&(r.keypoints3D=t.map((function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:x_[t]}}))),r},e.prototype.estimatePoses=function(e,t,n){return g_(this,void 0,void 0,(function(){var r,s;return y_(this,(function(i){switch(i.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Es?(s=ImageData.bind,[4,Oo(e)]):[3,2];case 1:return r=new(s.apply(ImageData,[void 0,i.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,i.label=3;case 3:return e=r,[4,this.poseSolution.send({image:e},n)];case 4:return i.sent(),[2,this.poses]}}))}))},e.prototype.dispose=function(){this.poseSolution.close()},e.prototype.reset=function(){this.poseSolution.reset()},e.prototype.initialize=function(){return this.poseSolution.initialize()},e}();function D_(e){return g_(this,void 0,void 0,(function(){var t,n;return y_(this,(function(r){switch(r.label){case 0:return t=function(e){if(null==e)return m_({},$_);var t=m_({},e);return t.runtime="mediapipe",null==t.enableSegmentation&&(t.enableSegmentation=$_.enableSegmentation),null==t.enableSmoothing&&(t.enableSmoothing=$_.enableSmoothing),null==t.smoothSegmentation&&(t.smoothSegmentation=$_.smoothSegmentation),null==t.modelType&&(t.modelType=$_.modelType),t}(e),[4,(n=new O_(t)).initialize()];case 1:return r.sent(),[2,n]}}))}))}function F_(e){return e instanceof Es?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function M_(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function P_(e){return e instanceof Es?e:Do(e)}function z_(e,t,n){return L_(n,"inputResolution"),[1/n.width*e[0][0]*t.width,1/n.height*e[0][1]*t.width,e[0][3]*t.width,1/n.width*e[1][0]*t.height,1/n.height*e[1][1]*t.height,e[1][3]*t.height,0,0]}function L_(e,t){B(0!==e.width,(function(){return"".concat(t," width cannot be 0.")})),B(0!==e.height,(function(){return"".concat(t," height cannot be 0.")}))}function B_(e,t,n){var r=n.rotationVectorStartKeypointIndex,s=n.rotationVectorEndKeypointIndex,i=e.locationData,a=i.relativeKeypoints[r].x*t.width,o=i.relativeKeypoints[r].y*t.height,l=i.relativeKeypoints[s].x*t.width,u=i.relativeKeypoints[s].y*t.height,c=2*Math.sqrt((l-a)*(l-a)+(u-o)*(u-o)),h=function(e,t,n){var r,s=e.locationData,i=n.rotationVectorStartKeypointIndex,a=n.rotationVectorEndKeypointIndex;r=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var o=s.relativeKeypoints[i].x*t.width,l=s.relativeKeypoints[i].y*t.height,u=s.relativeKeypoints[a].x*t.width,c=s.relativeKeypoints[a].y*t.height;return M_(r-Math.atan2(-(c-l),u-o))}(e,t,n);return{xCenter:a/t.width,yCenter:o/t.height,width:c/t.width,height:c/t.height,rotation:h}}function V_(e){if(16!==e.length)throw new Error("Array length must be 16 but got ".concat(e.length));return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}function W_(e,t,n,r,s,i,a){return e[t][s]*(e[n][i]*e[r][a]-e[n][a]*e[r][i])}function U_(e,t,n){var r=(t+1)%4,s=(t+2)%4,i=(t+3)%4,a=(n+1)%4,o=(n+2)%4,l=(n+3)%4;return W_(e,r,s,i,a,o,l)+W_(e,s,i,r,a,o,l)+W_(e,i,r,s,a,o,l)}function G_(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var r=[],s=0,i=e;s<i.length;s++){var a=i[s],o=a.x-.5,l=a.y-.5,u=n.ignoreRotation?0:t.rotation,c=Math.cos(u)*o-Math.sin(u)*l,h=Math.sin(u)*o+Math.cos(u)*l;c=c*t.width+t.xCenter,h=h*t.height+t.yCenter;var d=a.z*t.width,p=m_({},a);p.x=c,p.y=h,p.z=d,r.push(p)}return r}function j_(e,t){var n=function(e,t,n,r){var s=(r-n)/255;return{scale:s,offset:n-0*s}}(0,0,t[0],t[1]);return gi((function(){return $a(Oa(e,n.scale),n.offset)}))}function H_(e,t,n){var r,s,i,a,o,l,u,c,h,d,p,f,m=t.outputTensorSize,g=t.keepAspectRatio,y=t.borderMode,b=t.outputTensorFloatRange,v=F_(e),x=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(v,n),w=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=t.height,s=t.width;L_(t,"targetSize"),L_(e,"roi");var i,a,o=r/s,l=e.height/e.width,u=0,c=0;return o>l?(i=e.width,a=e.width*o,c=(1-l/o)/2):(i=e.height/o,a=e.height,u=(1-o/l)/2),e.width=i,e.height=a,{top:c,left:u,right:u,bottom:c}}(x,m,g),k=(r=x,s=v.width,i=v.height,a=r.width,o=r.height,l=Math.cos(r.rotation),u=Math.sin(r.rotation),c=r.xCenter,h=r.yCenter,d=1/s,p=1/i,(f=new Array(16))[0]=a*l*1*d,f[1]=-o*u*d,f[2]=0,f[3]=(-.5*a*l*1+.5*o*u+c)*d,f[4]=a*u*1*p,f[5]=o*l*p,f[6]=0,f[7]=(-.5*o*l-.5*a*u*1+h)*p,f[8]=0,f[9]=0,f[10]=a*d,f[11]=0,f[12]=0,f[13]=0,f[14]=0,f[15]=1,V_(f));return{imageTensor:gi((function(){var t=P_(e),n=Oh(z_(k,v,m),[1,8]),r="zero"===y?"constant":"nearest",s=mp.transform(Mu(Ta(t,"float32")),n,"bilinear",r,0,[m.height,m.width]);return null!=b?j_(s,b):s})),padding:w,transformationMatrix:k}}function q_(e,t,n,r){return 1===r?.5*(e+t):e+(t-e)*n/(r-1)}function K_(e){return null!=e&&null!=e.currentTime}function X_(e){for(var t={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,s=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,a=0;a<e.length;++a){var o=e[a];n=Math.min(n,o.x),r=Math.max(r,o.x),s=Math.min(s,o.y),i=Math.max(i,o.y),t.locationData.relativeKeypoints.push({x:o.x,y:o.y})}return t.locationData.relativeBoundingBox={xMin:n,yMin:s,xMax:r,yMax:i,width:r-n,height:i-s},t}function Y_(e,t,n,r){return g_(this,void 0,void 0,(function(){var r,s,i,a,o;return y_(this,(function(l){switch(l.label){case 0:return e.sort((function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)})),r=Oh(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),s=Rh(e.map((function(e){return e.score[0]}))),[4,mp.nonMaxSuppressionAsync(r,s,t,n)];case 1:return[4,(i=l.sent()).array()];case 2:return a=l.sent(),o=e.filter((function(e,t){return a.indexOf(t)>-1})),yi([r,s,i]),[2,o]}}))}))}function Q_(e,t){return e.map((function(e){var n=m_(m_({},e),{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n}))}function Z_(e,t,n){return g_(this,void 0,void 0,(function(){var r,s,i,a,o,l,u,c,h,d,p,f,m,g,y,b,v,x,w,k,S,C,I,_;return y_(this,(function(T){switch(T.label){case 0:if(r=Th(t,[0]),s=r.shape,i=s[0],a=s[1],o=s[2],e.length!==o)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(e.length,", heatmap length: ").concat(o));return l=[],[4,r.buffer()];case 1:for(u=T.sent(),c=0;c<e.length;c++)if(h=e[c],d=m_({},h),l.push(d),p=Math.trunc(d.x*a),f=Math.trunc(d.y*i),!(p<0||p>=a||f<0||p>=i)){for(m=Math.trunc((n.kernelSize-1)/2),g=Math.max(0,p-m),y=Math.min(a,p+m+1),b=Math.max(0,f-m),v=Math.min(i,f+m+1),x=0,w=0,k=0,S=0,C=b;C<v;++C)for(I=g;I<y;++I)_=u.get(C,I,c),x+=_,S=Math.max(S,_),w+=I*_,k+=C*_;S>=n.minConfidenceToRefine&&x>0&&(d.x=w/a/x,d.y=k/i/x)}return r.dispose(),[2,l]}}))}))}function J_(e,t){var n=t.left,r=t.top,s=t.left+t.right,i=t.top+t.bottom;return e.map((function(e){return m_(m_({},e),{x:(e.x-n)/(1-s),y:(e.y-r)/(1-i),z:e.z/(1-s)})}))}function eT(e,t,n){return g_(this,void 0,void 0,(function(){var r,s,i,a,o;return y_(this,(function(l){switch(l.label){case 0:return r=e[0],s=e[1],i=function(e,t,n){return gi((function(){var r,s,i,a;n.reverseOutputOrder?(s=Th(Ol(e,[0,n.boxCoordOffset+0],[-1,1])),r=Th(Ol(e,[0,n.boxCoordOffset+1],[-1,1])),a=Th(Ol(e,[0,n.boxCoordOffset+2],[-1,1])),i=Th(Ol(e,[0,n.boxCoordOffset+3],[-1,1]))):(r=Th(Ol(e,[0,n.boxCoordOffset+0],[-1,1])),s=Th(Ol(e,[0,n.boxCoordOffset+1],[-1,1])),i=Th(Ol(e,[0,n.boxCoordOffset+2],[-1,1])),a=Th(Ol(e,[0,n.boxCoordOffset+3],[-1,1]))),s=$a(Oa(Ra(s,n.xScale),t.w),t.x),r=$a(Oa(Ra(r,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(i=Oa(Fu(Ra(i,n.hScale)),t.h),a=Oa(Fu(Ra(a,n.wScale)),t.w)):(i=Oa(Ra(i,n.hScale),t.h),a=Oa(Ra(a,n.wScale),t.h));var o=Xa(r,Ra(i,2)),l=Xa(s,Ra(a,2)),u=$a(r,Ra(i,2)),c=$a(s,Ra(a,2)),h=$l([Tl(o,[n.numBoxes,1]),Tl(l,[n.numBoxes,1]),Tl(u,[n.numBoxes,1]),Tl(c,[n.numBoxes,1])],1);if(n.numKeypoints)for(var d=0;d<n.numKeypoints;++d){var p=n.keypointCoordOffset+d*n.numValuesPerKeypoint,f=void 0,m=void 0;n.reverseOutputOrder?(f=Th(Ol(e,[0,p],[-1,1])),m=Th(Ol(e,[0,p+1],[-1,1]))):(m=Th(Ol(e,[0,p],[-1,1])),f=Th(Ol(e,[0,p+1],[-1,1])));var g=$a(Oa(Ra(f,n.xScale),t.w),t.x),y=$a(Oa(Ra(m,n.yScale),t.h),t.y);h=$l([h,Tl(g,[n.numBoxes,1]),Tl(y,[n.numBoxes,1])],1)}return h}))}(s,t,n),a=gi((function(){var e=r;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=Hl(r,-n.scoreClippingThresh,n.scoreClippingThresh)),e=Rl(e)):e})),[4,tT(i,a,n)];case 1:return o=l.sent(),yi([i,a]),[2,o]}}))}))}function tT(e,t,n){return g_(this,void 0,void 0,(function(){var r,s,i,a,o,l,u,c,h,d,p,f;return y_(this,(function(m){switch(m.label){case 0:return r=[],[4,e.data()];case 1:return s=m.sent(),[4,t.data()];case 2:for(i=m.sent(),a=0;a<n.numBoxes;++a)if(!(null!=n.minScoreThresh&&i[a]<n.minScoreThresh||(o=a*n.numCoords,l=nT(s[o+0],s[o+1],s[o+2],s[o+3],i[a],n.flipVertically,a),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(n.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],h=n.numKeypoints*n.numValuesPerKeypoint,d=0;d<h;d+=n.numValuesPerKeypoint)p=o+n.keypointCoordOffset+d,f={x:s[p+0],y:n.flipVertically?1-s[p+1]:s[p+1]},c.relativeKeypoints.push(f);r.push(l)}return[2,r]}}))}))}function nT(e,t,n,r,s,i,a){return{score:[s],ind:a,locationData:{relativeBoundingBox:{xMin:t,yMin:i?1-n:e,xMax:r,yMax:i?1-e:n,width:r-t,height:n-e}}}}function rT(e,t){return"none"===e?t:function(e){return 1/(1+Math.exp(-e))}(t)}function sT(e,t,n,r){return g_(this,void 0,void 0,(function(){var s,i,a,o,l,u,c,h;return y_(this,(function(d){switch(d.label){case 0:return n=n||t.flipHorizontally||!1,r=r||t.flipVertically||!1,s=e.size,i=s/t.numLandmarks,[4,e.data()];case 1:for(a=d.sent(),o=[],l=0;l<t.numLandmarks;++l)u=l*i,(h={x:0,y:0}).x=n?t.inputImageWidth-a[u]:a[u],i>1&&(h.y=r?t.inputImageHeight-a[u+1]:a[u+1]),i>2&&(h.z=a[u+2]),i>3&&(h.score=rT(t.visibilityActivation,a[u+3])),o.push(h);for(c=0;c<o.length;++c)(h=o[c]).x=h.x/t.inputImageWidth,h.y=h.y/t.inputImageHeight,h.z=h.z/t.inputImageWidth/(t.normalizeZ||1);return[2,o]}}))}))}function iT(e,t,n){var r=e.width,s=e.height,i=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(i=function(e,t){return null!=t.rotation?e+=t.rotation:null!=t.rotationDegree&&(e+=Math.PI*t.rotationDegree/180),M_(e)}(i,n)),0===i)e.xCenter=e.xCenter+r*n.shiftX,e.yCenter=e.yCenter+s*n.shiftY;else{var a=(t.width*r*n.shiftX*Math.cos(i)-t.height*s*n.shiftY*Math.sin(i))/t.width,o=(t.width*r*n.shiftX*Math.sin(i)+t.height*s*n.shiftY*Math.cos(i))/t.height;e.xCenter=e.xCenter+a,e.yCenter=e.yCenter+o}if(n.squareLong){var l=Math.max(r*t.width,s*t.height);r=l/t.width,s=l/t.height}else if(n.squareShort){var u=Math.min(r*t.width,s*t.height);r=u/t.width,s=u/t.height}return e.width=r*n.scaleX,e.height=s*n.scaleY,e}function aT(e,t){return e.map((function(e){var n=m_(m_({},e),{x:e.x/t.width,y:e.y/t.height});return null!=e.z&&(e.z=e.z/t.width),n}))}var oT=function(){function e(e){this.alpha=e,this.initialized=!1}return e.prototype.apply=function(e,t){var n;return this.initialized?n=null==t?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(n=e,this.initialized=!0),this.rawValue=e,this.storedValue=n,n},e.prototype.applyWithAlpha=function(e,t,n){return this.alpha=t,this.apply(e,n)},e.prototype.hasLastRawValue=function(){return this.initialized},e.prototype.lastRawValue=function(){return this.rawValue},e.prototype.reset=function(){this.initialized=!1},e}(),lT=function(){function e(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new oT(this.getAlpha(this.minCutOff)),this.dx=new oT(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;0!==this.lastTimestamp&&0!==r&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var s=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*n*this.frequency:0,i=this.dx.applyWithAlpha(s,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(i),o=null!=this.thresholdCutOff?this.thresholdCutOff+this.thresholdBeta*Math.abs(i):null;return this.x.applyWithAlpha(e,this.getAlpha(a),o)},e.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},e}(),uT=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;this.initializeFiltersIfEmpty(e);var s=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return b_([],e,!0);s=1/n}return e.map((function(e,n){var i=m_(m_({},e),{x:r.xFilters[n].apply(e.x,t,s),y:r.yFilters[n].apply(e.y,t,s)});return null!=e.z&&(i.z=r.zFilters[n].apply(e.z,t,s)),i}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new lT(t.config)})),this.yFilters=e.map((function(e){return new lT(t.config)})),this.zFilters=e.map((function(e){return new lT(t.config)})))},e}(),cT=function(){function e(e){this.config=e,this.window=[],this.lowPassFilter=new oT(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r,s=Math.trunc(t);if(this.lastTimestamp>=s)return e;if(-1===this.lastTimestamp)r=1;else{for(var i=e*n-this.lastValue*this.lastValueScale,a=s-this.lastTimestamp,o=i,l=a,u=(1+this.window.length)*(1e6/30),c=0,h=this.window;c<h.length;c++){var d=h[c];if(l+d.duration>u)break;o+=d.distance,l+=d.duration}var p=o/(1e-6*l);r=1-1/(1+this.config.velocityScale*Math.abs(p)),this.window.unshift({distance:i,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=n,this.lastTimestamp=s,this.lowPassFilter.applyWithAlpha(e,r)},e}(),hT=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;var s=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return b_([],e,!0);s=1/n}return this.initializeFiltersIfEmpty(e),e.map((function(e,n){var i=m_(m_({},e),{x:r.xFilters[n].apply(e.x,t,s),y:r.yFilters[n].apply(e.y,t,s)});return null!=e.z&&(i.z=r.zFilters[n].apply(e.z,t,s)),i}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new cT(t.config)})),this.yFilters=e.map((function(e){return new cT(t.config)})),this.zFilters=e.map((function(e){return new cT(t.config)})))},e}(),dT=function(){function e(e){if(null!=e.velocityFilter)this.keypointsFilter=new hT(e.velocityFilter);else{if(null==e.oneEuroFilter)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new uT(e.oneEuroFilter)}}return e.prototype.apply=function(e,t,n,r,s){if(void 0===r&&(r=!1),null==e)return this.keypointsFilter.reset(),null;var i=null!=s?function(e,t){return(e.width*t.width+e.height*t.height)/2}(s,n):1,a=r?Q_(e,n):e,o=this.keypointsFilter.apply(a,t,i);return r?aT(o,n):o},e}(),pT=function(){function e(e){this.alpha=e.alpha}return e.prototype.apply=function(e){var t=this;if(null==e)return this.visibilityFilters=null,null;null!=this.visibilityFilters&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map((function(e){return new oT(t.alpha)})));for(var n=[],r=0;r<e.length;++r){var s=e[r],i=m_({},s);i.score=this.visibilityFilters[r].apply(s.score),n.push(i)}return n},e}(),fT={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},mT={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},gT={maxPoses:1,flipHorizontal:!1},yT={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},bT={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},vT={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},xT={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},wT={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},kT={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},ST={kernelSize:7,minConfidenceToRefine:.5},CT={alpha:.1},IT={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},_T={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},TT={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},NT={activation:"none"},ET={combineWithPreviousRatio:.7},$T=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return g_(this,void 0,void 0,(function(){return y_(this,(function(e){return[2,__(this.mask)]}))}))},e.prototype.toImageData=function(){return g_(this,void 0,void 0,(function(){return y_(this,(function(e){return[2,T_(this.mask)]}))}))},e.prototype.toTensor=function(){return g_(this,void 0,void 0,(function(){return y_(this,(function(e){return[2,this.mask]}))}))},e.prototype.getUnderlyingType=function(){return"tensor"},e}();function AT(e){return E_(e),"person"}var RT=function(){function e(e,t,n,r,s,i){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=n,this.enableSegmentation=r,this.smoothSegmentation=s,this.modelType=i,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],n=0;n<e.numLayers;){for(var r=[],s=[],i=[],a=[],o=n;o<e.strides.length&&e.strides[o]===e.strides[n];){var l=q_(e.minScale,e.maxScale,o,e.strides.length);if(0===o&&e.reduceBoxesInLowestLayer)i.push(1),i.push(2),i.push(.5),a.push(.1),a.push(l),a.push(l);else{for(var u=0;u<e.aspectRatios.length;++u)i.push(e.aspectRatios[u]),a.push(l);if(e.interpolatedScaleAspectRatio>0){var c=o===e.strides.length-1?1:q_(e.minScale,e.maxScale,o+1,e.strides.length);a.push(Math.sqrt(l*c)),i.push(e.interpolatedScaleAspectRatio)}}o++}for(var h=0;h<i.length;++h){var d=Math.sqrt(i[h]);r.push(a[h]/d),s.push(a[h]*d)}var p=0,f=0;if(e.featureMapHeight.length>0)p=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];p=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<p;++g)for(var y=0;y<f;++y)for(var b=0;b<r.length;++b){var v={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/p,width:0,height:0};e.fixedAnchorSize?(v.width=1,v.height=1):(v.width=s[b],v.height=r[b]),t.push(v)}n=o}return t}(fT);var a=Rh(this.anchors.map((function(e){return e.width}))),o=Rh(this.anchors.map((function(e){return e.height}))),l=Rh(this.anchors.map((function(e){return e.xCenter}))),u=Rh(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:l,y:u,w:a,h:o},this.prevFilteredSegmentationMask=this.enableSegmentation?Oh([],[0,0]):null}return e.prototype.estimatePoses=function(e,t,n){return g_(this,void 0,void 0,(function(){var r,s,i,a,o,l,u,c,h,d,p,f,m,g,y,b,v,x,w,k,S,C,I;return y_(this,(function(_){switch(_.label){case 0:return r=function(e){var t;if(null==(t=null==e?gT:m_({},e)).maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return t}(t),null==e?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=null!=n?1e3*n:K_(e)?1e6*e.currentTime:null,s=F_(e),i=gi((function(){return Ta(P_(e),"float32")})),null!=(a=this.regionOfInterest)?[3,2]:[4,this.detectPose(i)]);case 1:if(0===(o=_.sent()).length)return this.reset(),i.dispose(),[2,[]];l=o[0],a=this.poseDetectionToRoi(l,s),_.label=2;case 2:return[4,this.poseLandmarksByRoi(a,i)];case 3:return u=_.sent(),i.dispose(),null==u?(this.reset(),[2,[]]):(c=u.landmarks,h=u.auxiliaryLandmarks,d=u.poseScore,p=u.worldLandmarks,f=u.segmentationMask,m=this.poseLandmarkFiltering(c,h,p,s),g=m.actualLandmarksFiltered,y=m.auxiliaryLandmarksFiltered,b=m.actualWorldLandmarksFiltered,v=this.poseLandmarksToRoi(y,s),this.regionOfInterest=v,x=this.smoothSegmentation&&null!=f?this.poseSegmentationFiltering(f):f,null!=(w=null!=g?Q_(g,s):null)&&w.forEach((function(e,t){e.name=x_[t]})),null!=(k=b)&&k.forEach((function(e,t){e.name=x_[t]})),S={score:d,keypoints:w,keypoints3D:k},null!==x&&(C=gi((function(){var e=Mu(x,2),t=$c(e,[[0,0],[0,0],[0,1]]);return wc(t,[[0,0],[0,0],[0,2]],"symmetric")})),this.smoothSegmentation||yi(x),I={maskValueToLabel:AT,mask:new $T(C)},S.segmentation=I),[2,[S]])}}))}))},e.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return 0===t.size?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=function(e,t,n){return"webgl"===wi()?function(e,t,n){var r=n.combineWithPreviousRatio.toFixed(2),s={variableNames:["prevMask","newMask"],outputShape:e.shape,userCode:"\n  void main() {\n      ivec2 coords = getOutputCoords();\n      int height = coords[0];\n      int width = coords[1];\n\n      float prevMaskValue = getPrevMask(height, width);\n      float newMaskValue = getNewMask(height, width);\n\n      /*\n      * Assume p := newMaskValue\n      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)\n      * uncertainty alpha(p) =\n      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the\n      * uncertainty]\n      *\n      * The following polynomial approximates uncertainty alpha as a\n      * function of (p + 0.5):\n      */\n      const float c1 = 5.68842;\n      const float c2 = -0.748699;\n      const float c3 = -57.8051;\n      const float c4 = 291.309;\n      const float c5 = -624.717;\n      float t = newMaskValue - 0.5;\n      float x = t * t;\n\n      float uncertainty =\n        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));\n\n      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *\n                             (uncertainty * ".concat(r,");\n\n      setOutput(outputValue);\n    }\n")},i=Si();return gi((function(){var n=i.compileAndRun(s,[e,t]);return fi().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}))}(e,t,n):gi((function(){var r=Xa(t,.5),s=Fa(r),i=Xa(1,xc(1,Oa(s,$a(5.68842,Oa(s,$a(-.748699,Oa(s,$a(-57.8051,Oa(s,$a(291.309,Oa(s,-624.717)))))))))));return $a(t,Oa(Xa(e,t),Oa(i,n.combineWithPreviousRatio)))}))}(t,e,ET),yi(e)),yi(t),this.prevFilteredSegmentationMask},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),yi([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},e.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(yi(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=Oh([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},e.prototype.detectPose=function(e){return g_(this,void 0,void 0,(function(){var t,n,r,s,i,a,o,l,u,c;return y_(this,(function(h){switch(h.label){case 0:return t=H_(e,vT),n=t.imageTensor,r=t.padding,s=this.detectorModel.predict(n),i=function(e){return gi((function(){var t=function(e){return gi((function(){return[Ol(e,[0,0,0],[1,-1,1]),Ol(e,[0,0,1],[1,-1,-1])]}))}(e),n=t[0],r=t[1];return{boxes:Th(r),logits:Th(n)}}))}(s),a=i.boxes,[4,eT([o=i.logits,a],this.anchorTensor,yT)];case 1:return 0===(l=h.sent()).length?(yi([n,s,o,a]),[2,l]):[4,Y_(l,this.maxPoses,.3)];case 2:return u=h.sent(),c=function(e,t){void 0===e&&(e=[]);for(var n=t.left,r=t.top,s=t.left+t.right,i=t.top+t.bottom,a=0;a<e.length;a++){var o=e[a],l=o.locationData.relativeBoundingBox,u=(l.xMin-n)/(1-s),c=(l.yMin-r)/(1-i),h=l.width/(1-s),d=l.height/(1-i);l.xMin=u,l.yMin=c,l.width=h,l.height=d,l.xMax=u+h,l.yMax=c+d;var p=o.locationData.relativeKeypoints;p&&p.forEach((function(e){var t=(e.x-n)/(1-s),a=(e.y-r)/(1-i);e.x=t,e.y=a}))}return e}(u,r),yi([n,s,o,a]),[2,c]}}))}))},e.prototype.poseDetectionToRoi=function(e,t){return iT(B_(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,bT)},e.prototype.poseLandmarksByRoi=function(e,t){return g_(this,void 0,void 0,(function(){var n,r,s,i,a,o,l,u,c,h,d,p,f,m;return y_(this,(function(g){switch(g.label){case 0:if(n=F_(t),r=H_(t,xT,e),s=r.imageTensor,i=r.padding,a=r.transformationMatrix,"lite"!==this.modelType&&"full"!==this.modelType&&"heavy"!==this.modelType)throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return o=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&o.push("activation_segmentation"),l=this.landmarkModel.execute(s,o),[4,this.tensorsToPoseLandmarksAndSegmentation(l)];case 1:return null==(u=g.sent())?(yi(l),yi(s),[2,null]):(c=u.landmarks,h=u.auxiliaryLandmarks,d=u.poseScore,p=u.worldLandmarks,f=u.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(n,e,i,a,c,h,p,f)]);case 2:return m=g.sent(),yi(l),yi(s),[2,m_({poseScore:d},m)]}}))}))},e.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,n,r,s,i,a,o){return g_(this,void 0,void 0,(function(){var l,u,c,h,d,p;return y_(this,(function(f){return l=J_(s,n),u=J_(i,n),c=G_(l,t),h=G_(u,t),d=function(e,t){for(var n=[],r=0,s=e;r<s.length;r++){var i=s[r],a=i.x,o=i.y,l=t.rotation,u=Math.cos(l)*a-Math.sin(l)*o,c=Math.sin(l)*a+Math.cos(l)*o,h=m_({},i);h.x=u,h.y=c,n.push(h)}return n}(a,t),p=null,this.enableSegmentation&&(p=gi((function(){var t=o.shape,n=t[0],s=t[1],i=function(e){var t=V_(new Array(16).fill(0));t[0][0]=U_(e,0,0),t[1][0]=-U_(e,0,1),t[2][0]=U_(e,0,2),t[3][0]=-U_(e,0,3),t[0][2]=U_(e,2,0),t[1][2]=-U_(e,2,1),t[2][2]=U_(e,2,2),t[3][2]=-U_(e,2,3),t[0][1]=-U_(e,1,0),t[1][1]=U_(e,1,1),t[2][1]=-U_(e,1,2),t[3][1]=U_(e,1,3),t[0][3]=-U_(e,3,0),t[1][3]=U_(e,3,1),t[2][3]=-U_(e,3,2),t[3][3]=U_(e,3,3);for(var n=e[0][0]*t[0][0]+e[1][0]*t[0][1]+e[2][0]*t[0][2]+e[3][0]*t[0][3],r=0;r<t.length;r++)for(var s=0;s<t.length;s++)t[r][s]/=n;return t}(r),a=Oh(z_(i,{width:s,height:n},e),[1,8]),l=[1,n,s,1];return Th(mp.transform(Tl(o,l),a,"bilinear","constant",0,[e.height,e.width]),[0,3])})),yi(o)),[2,{landmarks:c,auxiliaryLandmarks:h,worldLandmarks:d,segmentationMask:p}]}))}))},e.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return g_(this,void 0,void 0,(function(){var t,n,r,s,i,a,o,l,u,c,h,d,p;return y_(this,(function(f){switch(f.label){case 0:return t=e[0],n=e[1],r=e[2],s=e[3],i=this.enableSegmentation?e[4]:null,[4,n.data()];case 1:return(a=f.sent()[0])<.5?[2,null]:[4,sT(t,wT)];case 2:return[4,Z_(f.sent(),r,ST)];case 3:return o=f.sent(),l=o.slice(0,33),u=o.slice(33,35),[4,sT(s,kT)];case 4:return c=f.sent(),h=c.slice(0,33),d=function(e,t,n){void 0===n&&(n=!0);for(var r=[],s=0;s<e.length;s++){var i=m_({},t[s]);n&&(i.score=e[s].score),r.push(i)}return r}(l,h,!0),p=this.enableSegmentation?function(e,t){return gi((function(){var n=Th(e,[0]),r=n.shape[2];if(1===r){var s=n;switch(t.activation){case"none":break;case"sigmoid":s=Rl(s);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(t.activation,")"))}return Th(s,[2])}throw new Error("Unsupported number of tensor channels ".concat(r))}))}(i,NT):null,[2,{landmarks:l,auxiliaryLandmarks:u,poseScore:a,worldLandmarks:d,segmentationMask:p}]}}))}))},e.prototype.poseLandmarksToRoi=function(e,t){return iT(B_(X_(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,bT)},e.prototype.poseLandmarkFiltering=function(e,t,n,r){var s,i,a;if(null!=this.timestamp&&this.enableSmoothing){var o=B_(X_(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});null==this.visibilitySmoothingFilterActual&&(this.visibilitySmoothingFilterActual=new pT(CT)),s=this.visibilitySmoothingFilterActual.apply(e),null==this.visibilitySmoothingFilterAuxiliary&&(this.visibilitySmoothingFilterAuxiliary=new pT(CT)),i=this.visibilitySmoothingFilterAuxiliary.apply(t),a=this.visibilitySmoothingFilterActual.apply(n),null==this.landmarksSmoothingFilterActual&&(this.landmarksSmoothingFilterActual=new dT(IT)),s=this.landmarksSmoothingFilterActual.apply(s,this.timestamp,r,!0,o),null==this.landmarksSmoothingFilterAuxiliary&&(this.landmarksSmoothingFilterAuxiliary=new dT(_T)),i=this.landmarksSmoothingFilterAuxiliary.apply(i,this.timestamp,r,!0,o),null==this.worldLandmarksSmoothingFilterActual&&(this.worldLandmarksSmoothingFilterActual=new dT(TT)),a=this.worldLandmarksSmoothingFilterActual.apply(n,this.timestamp)}else s=e,i=t,a=n;return{actualLandmarksFiltered:s,auxiliaryLandmarksFiltered:i,actualWorldLandmarksFiltered:a}},e}();function OT(e){return g_(this,void 0,void 0,(function(){var t,n,r,s,i,a;return y_(this,(function(o){switch(o.label){case 0:return t=function(e){var t=m_({},null==e?mT:e);if(null==t.enableSmoothing&&(t.enableSmoothing=mT.enableSmoothing),null==t.enableSegmentation&&(t.enableSegmentation=mT.enableSegmentation),null==t.smoothSegmentation&&(t.smoothSegmentation=mT.smoothSegmentation),null==t.modelType&&(t.modelType=mT.modelType),null==t.detectorModelUrl&&(t.detectorModelUrl=mT.detectorModelUrl),null==t.landmarkModelUrl)switch(t.modelType){case"lite":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;default:t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return t}(e),n="string"==typeof t.detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,r="string"==typeof t.landmarkModelUrl&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([Xm(t.detectorModelUrl,{fromTFHub:n}),Xm(t.landmarkModelUrl,{fromTFHub:r})])];case 1:return s=o.sent(),i=s[0],a=s[1],[2,new RT(i,a,t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}}))}))}var DT,FT,MT,PT=function(){function e(e){!function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(e.maxTracks));if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(e.maxAge));if(void 0!==e.keypointTrackerParams){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(e.keypointTrackerParams.keypointConfidenceThreshold));if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(e.keypointTrackerParams.minNumberOfKeypoints));for(var t=0,n=e.keypointTrackerParams.keypointFalloff;t<n.length;t++){var r=n[t];if(r<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(r))}}}(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return e.prototype.apply=function(e,t){this.filterOldTracks(t);var n=this.computeSimilarity(e);return this.assignTracks(e,n,t),this.updateTracks(t),e},e.prototype.getTracks=function(){return this.tracks.slice()},e.prototype.getTrackIDs=function(){return new Set(this.tracks.map((function(e){return e.id})))},e.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter((function(n){return e-n.lastTimestamp<=t.maxAge}))},e.prototype.assignTracks=function(e,t,n){for(var r=Array.from(Array(t[0].length).keys()),s=[],i=0,a=Array.from(Array(e.length).keys());i<a.length;i++){var o=a[i];if(0!==r.length){for(var l=-1,u=-1,c=0,h=r;c<h.length;c++){var d=h[c],p=t[o][d];p>=this.minSimilarity&&p>u&&(l=d,u=p)}if(l>=0){var f=this.tracks[l];f=Object.assign(f,this.createTrack(e[o],n,f.id)),e[o].id=f.id;var m=r.indexOf(l);r.splice(m,1)}else s.push(o)}else s.push(o)}for(var g=0,y=s;g<y.length;g++){o=y[g];var b=this.createTrack(e[o],n);this.tracks.push(b),e[o].id=b.id}},e.prototype.updateTracks=function(e){this.tracks.sort((function(e,t){return t.lastTimestamp-e.lastTimestamp})),this.tracks=this.tracks.slice(0,this.maxTracks)},e.prototype.createTrack=function(e,t,n){var r={id:n||this.nextTrackID(),lastTimestamp:t,keypoints:b_([],e.keypoints,!0).map((function(e){return m_({},e)}))};return void 0!==e.box&&(r.box=m_({},e.box)),r},e.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},e.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter((function(t){return!e.includes(t.id)}))},e.prototype.reset=function(){this.tracks=[]},e}(),zT=function(e){function t(t){return e.call(this,t)||this}return f_(t,e),t.prototype.computeSimilarity=function(e){var t=this;return 0===e.length||0===this.tracks.length?[[]]:e.map((function(e){return t.tracks.map((function(n){return t.iou(e,n)}))}))},t.prototype.iou=function(e,t){var n=Math.max(e.box.xMin,t.box.xMin),r=Math.max(e.box.yMin,t.box.yMin),s=Math.min(e.box.xMax,t.box.xMax),i=Math.min(e.box.yMax,t.box.yMax);if(n>=s||r>=i)return 0;var a=(s-n)*(i-r);return a/(e.box.width*e.box.height+t.box.width*t.box.height-a)},t}(PT),LT=function(e){function t(t){var n=e.call(this,t)||this;return n.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,n.keypointFalloff=t.keypointTrackerParams.keypointFalloff,n.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,n}return f_(t,e),t.prototype.computeSimilarity=function(e){if(0===e.length||0===this.tracks.length)return[[]];for(var t=[],n=0,r=e;n<r.length;n++){for(var s=r[n],i=[],a=0,o=this.tracks;a<o.length;a++){var l=o[a];i.push(this.oks(s,l))}t.push(i)}return t},t.prototype.oks=function(e,t){for(var n=this.area(t.keypoints)+1e-6,r=0,s=0,i=0;i<e.keypoints.length;++i){var a=e.keypoints[i],o=t.keypoints[i];if(!(a.score<this.keypointThreshold||o.score<this.keypointThreshold)){s+=1;var l=Math.pow(a.x-o.x,2)+Math.pow(a.y-o.y,2),u=2*this.keypointFalloff[i];r+=Math.exp(-1*l/(2*n*Math.pow(u,2)))}}return s<this.minNumKeyoints?0:r/s},t.prototype.area=function(e){var t=this,n=e.filter((function(e){return e.score>t.keypointThreshold})),r=Math.min.apply(Math,b_([1],n.map((function(e){return e.x})),!1)),s=Math.max.apply(Math,b_([0],n.map((function(e){return e.x})),!1)),i=Math.min.apply(Math,b_([1],n.map((function(e){return e.y})),!1));return(s-r)*(Math.max.apply(Math,b_([0],n.map((function(e){return e.y})),!1))-i)},t}(PT);function BT(e){switch(e){case FT.BlazePose:return x_.reduce((function(e,t,n){return e[t]=n,e}),{});case FT.PoseNet:case FT.MoveNet:return v_.reduce((function(e,t,n){return e[t]=n,e}),{});default:throw new Error("Model ".concat(e," is not supported."))}}(MT=DT||(DT={})).Keypoint="keypoint",MT.BoundingBox="boundingBox",function(e){e.MoveNet="MoveNet",e.BlazePose="BlazePose",e.PoseNet="PoseNet"}(FT||(FT={}));Object.freeze({__proto__:null,getKeypointIndexBySide:function(e){switch(e){case FT.BlazePose:return w_;case FT.PoseNet:case FT.MoveNet:return k_;default:throw new Error("Model ".concat(e," is not supported."))}},getAdjacentPairs:function(e){switch(e){case FT.BlazePose:return C_;case FT.PoseNet:case FT.MoveNet:return S_;default:throw new Error("Model ".concat(e," is not supported."))}},getKeypointIndexByName:BT});var VT=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],WT={modelType:"SinglePose.Lightning",enableSmoothing:!0},UT={},GT={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},jT={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},HT={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function qT(e,t){var n,r,s,i;return e?t.width>t.height?(n=1,r=t.height/t.width,s=0,i=(t.width/2-t.height/2)/t.width):(n=t.width/t.height,r=1,s=(t.height/2-t.width/2)/t.height,i=0):t.width>t.height?(n=t.width/t.height,r=1,s=(t.height/2-t.width/2)/t.height,i=0):(n=1,r=t.height/t.width,s=0,i=(t.width/2-t.height/2)/t.width),{yMin:s,xMin:i,yMax:s+n,xMax:i+r,height:n,width:r}}function KT(e,t){var n={maxTracks:e.maxTracks,maxAge:e.maxAge,minSimilarity:e.minSimilarity};return null!=t.maxTracks&&(n.maxTracks=t.maxTracks),null!=t.maxAge&&(n.maxAge=t.maxAge),null!=t.minSimilarity&&(n.minSimilarity=t.minSimilarity),n}var XT=function(){function e(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=BT(FT.MoveNet),"SinglePose.Lightning"===t.modelType?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):"SinglePose.Thunder"===t.modelType&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel="MultiPose.Lightning"===t.modelType,this.multiPoseModel||(this.keypointFilter=new uT(GT),this.cropRegionFilterYMin=new oT(.9),this.cropRegionFilterXMin=new oT(.9),this.cropRegionFilterYMax=new oT(.9),this.cropRegionFilterXMax=new oT(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===DT.Keypoint?this.tracker=new LT(t.trackerConfig):t.trackerType===DT.BoundingBox&&(this.tracker=new zT(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return e.prototype.runSinglePersonPoseModel=function(e){return g_(this,void 0,void 0,(function(){var t,n,r,s,i;return y_(this,(function(a){switch(a.label){case 0:if(4!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||1!==t.shape[1]||17!==t.shape[2]||3!==t.shape[3])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===wi()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=a.sent(),a.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},s=0,i=0;i<17;++i)r.keypoints[i]={y:n[3*i],x:n[3*i+1],score:n[3*i+2]},r.keypoints[i].score>.2&&(++s,r.score+=r.keypoints[i].score);return s>0&&(r.score/=s),[2,r]}}))}))},e.prototype.runMultiPersonPoseModel=function(e){return g_(this,void 0,void 0,(function(){var t,n,r,s,i,a,o,l;return y_(this,(function(u){switch(u.label){case 0:if(3!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||56!==t.shape[2])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===wi()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=u.sent(),u.label=3;case 3:for(t.dispose(),r=[],s=n.length/56,i=0;i<s;++i)for(r[i]={keypoints:[]},a=56*i+51,r[i].box={yMin:n[a],xMin:n[a+1],yMax:n[a+2],xMax:n[a+3],width:n[a+3]-n[a+1],height:n[a+2]-n[a]},o=56*i+55,r[i].score=n[o],r[i].keypoints=[],l=0;l<17;++l)r[i].keypoints[l]={y:n[56*i+3*l],x:n[56*i+3*l+1],score:n[56*i+3*l+2]};return[2,r]}}))}))},e.prototype.estimatePoses=function(e,t,n){return void 0===t&&(t=UT),g_(this,void 0,void 0,(function(){var r,s,i,a,o,l;return y_(this,(function(u){switch(u.label){case 0:return t=function(e){return null==e?UT:m_({},e)}(t),null==e?(this.reset(),[2,[]]):(null==n?K_(e)&&(n=1e6*e.currentTime):n*=1e3,r=P_(e),s=F_(r),i=Mu(r,0),e instanceof Es||r.dispose(),a=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(i,s,n)]);case 1:return a=u.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(i,s,n)];case 3:a=u.sent(),u.label=4;case 4:for(o=0;o<a.length;++o)for(l=0;l<a[o].keypoints.length;++l)a[o].keypoints[l].name=v_[l],a[o].keypoints[l].y*=s.height,a[o].keypoints[l].x*=s.width;return[2,a]}}))}))},e.prototype.estimateSinglePose=function(e,t,n){return g_(this,void 0,void 0,(function(){var r,s,i,a,o=this;return y_(this,(function(l){switch(l.label){case 0:return this.cropRegion||(this.cropRegion=qT(null==this.cropRegion,t)),r=gi((function(){var t=Oh([[o.cropRegion.yMin,o.cropRegion.xMin,o.cropRegion.yMax,o.cropRegion.xMax]]),n=yc([1],"int32"),r=[o.modelInputResolution.height,o.modelInputResolution.width];return Ta(mp.cropAndResize(e,t,n,r,"bilinear",0),"int32")})),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(s=l.sent(),r.dispose(),s.score<this.minPoseScore)return this.reset(),[2,[]];for(i=0;i<s.keypoints.length;++i)s.keypoints[i].y=this.cropRegion.yMin+s.keypoints[i].y*this.cropRegion.height,s.keypoints[i].x=this.cropRegion.xMin+s.keypoints[i].x*this.cropRegion.width;return null!=n&&this.enableSmoothing&&(s.keypoints=this.keypointFilter.apply(s.keypoints,n,1)),a=function(e,t,n,r){for(var s={},i=0,a=v_;i<a.length;i++){var o=a[i];s[o]=[t[n[o]].y*r.height,t[n[o]].x*r.width]}if(function(e,t){return(e[t.left_hip].score>.2||e[t.right_hip].score>.2)&&(e[t.left_shoulder].score>.2||e[t.right_shoulder].score>.2)}(t,n)){var l=(s.left_hip[0]+s.right_hip[0])/2,u=(s.left_hip[1]+s.right_hip[1])/2,c=function(e,t,n,r,s){for(var i=["left_shoulder","right_shoulder","left_hip","right_hip"],a=0,o=0,l=0;l<i.length;l++)(p=Math.abs(r-n[i[l]][0]))>a&&(a=p),(f=Math.abs(s-n[i[l]][1]))>o&&(o=f);for(var u=0,c=0,h=0,d=Object.keys(n);h<d.length;h++){var p,f,m=d[h];e[t[m]].score<.2||((p=Math.abs(r-n[m][0]))>u&&(u=p),(f=Math.abs(s-n[m][1]))>c&&(c=f))}return[a,o,u,c]}(t,n,s,l,u),h=c[0],d=c[1],p=c[2],f=c[3],m=Math.max(1.9*d,1.9*h,1.2*p,1.2*f),g=[l-(m=Math.min(m,Math.max(u,r.width-u,l,r.height-l))),u-m];if(m>Math.max(r.width,r.height)/2)return qT(null==e,r);var y=2*m;return{yMin:g[0]/r.height,xMin:g[1]/r.width,yMax:(g[0]+y)/r.height,xMax:(g[1]+y)/r.width,height:(g[0]+y)/r.height-g[0]/r.height,width:(g[1]+y)/r.width-g[1]/r.width}}return qT(null==e,r)}(this.cropRegion,s.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(a),[2,[s]]}}))}))},e.prototype.estimateMultiplePoses=function(e,t,n){return g_(this,void 0,void 0,(function(){var r,s,i,a,o,l,u,c,h,d,p,f=this;return y_(this,(function(m){switch(m.label){case 0:return t.width>t.height?(s=this.multiPoseMaxDimension,i=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=mp.resizeBilinear(e,[i,s]),o=s,l=32*Math.ceil(i/32),a=$c(r,[[0,0],[0,l-i],[0,0],[0,0]])):(s=Math.round(this.multiPoseMaxDimension*t.width/t.height),i=this.multiPoseMaxDimension,r=mp.resizeBilinear(e,[i,s]),o=32*Math.ceil(s/32),l=i,a=$c(r,[[0,0],[0,0],[0,o-s],[0,0]])),r.dispose(),e.dispose(),u=Ta(a,"int32"),a.dispose(),[4,this.runMultiPersonPoseModel(u)];case 1:for(c=m.sent(),u.dispose(),c=c.filter((function(e){return e.score>=f.minPoseScore})),d=0;d<c.length;++d)for(h=0;h<c[d].keypoints.length;++h)c[d].keypoints[h].y*=l/i,c[d].keypoints[h].x*=o/s;if(this.enableTracking&&(this.tracker.apply(c,n),this.enableSmoothing)){for(d=0;d<c.length;++d)this.keypointFilterMap.has(c[d].id)||this.keypointFilterMap.set(c[d].id,new uT(GT)),c[d].keypoints=this.keypointFilterMap.get(c[d].id).apply(c[d].keypoints,n,1);p=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach((function(e,t){p.has(t)||f.keypointFilterMap.delete(t)}))}return[2,c]}}))}))},e.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),n=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),s=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:n,yMax:r,xMax:s,height:r-t,width:s-n}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},e.prototype.dispose=function(){this.moveNetModel.dispose()},e.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},e.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},e}();function YT(e){return void 0===e&&(e=WT),g_(this,void 0,void 0,(function(){var t,n,r,s;return y_(this,(function(i){switch(i.label){case 0:return t=function(e){var t,n=null==e?WT:m_({},e);if(null==n.modelType)n.modelType="SinglePose.Lightning";else if(VT.indexOf(n.modelType)<0)throw new Error("Invalid architecture ".concat(n.modelType,". ")+"Should be one of ".concat(VT));if(null==n.enableSmoothing&&(n.enableSmoothing=!0),null!=n.minPoseScore&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(null!=n.multiPoseMaxDimension&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if("MultiPose.Lightning"===n.modelType&&null==n.enableTracking&&(n.enableTracking=!0),"MultiPose.Lightning"===n.modelType&&!0===n.enableTracking)if(null==n.trackerType&&(n.trackerType=DT.BoundingBox),n.trackerType===DT.Keypoint)null!=n.trackerConfig?n.trackerConfig=function(e){var t=KT(jT,e);return t.keypointTrackerParams=m_({},jT.keypointTrackerParams),null!=e.keypointTrackerParams&&(null!=e.keypointTrackerParams.keypointConfidenceThreshold&&(t.keypointTrackerParams.keypointConfidenceThreshold=e.keypointTrackerParams.keypointConfidenceThreshold),null!=e.keypointTrackerParams.keypointFalloff&&(t.keypointTrackerParams.keypointFalloff=e.keypointTrackerParams.keypointFalloff),null!=e.keypointTrackerParams.minNumberOfKeypoints&&(t.keypointTrackerParams.minNumberOfKeypoints=e.keypointTrackerParams.minNumberOfKeypoints)),t}(n.trackerConfig):n.trackerConfig=jT;else{if(n.trackerType!==DT.BoundingBox)throw new Error("Tracker type not supported by MoveNet");null!=n.trackerConfig?n.trackerConfig=(t=n.trackerConfig,KT(HT,t)):n.trackerConfig=HT}return n}(e),r=!0,t.modelUrl?(r="string"==typeof t.modelUrl&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Xm(t.modelUrl,{fromTFHub:r})]):[3,2];case 1:return n=i.sent(),[3,4];case 2:return s=void 0,"SinglePose.Lightning"===t.modelType?s="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":"SinglePose.Thunder"===t.modelType?s="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":"MultiPose.Lightning"===t.modelType&&(s="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,Xm(s,{fromTFHub:r})];case 3:n=i.sent(),i.label=4;case 4:return"webgl"===wi()&&ke().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new XT(n,t)]}}))}))}var QT={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},ZT=["MobileNetV1","ResNet50"],JT={MobileNetV1:[8,16],ResNet50:[16]},eN=[8,16,32],tN={MobileNetV1:[.5,.75,1],ResNet50:[1]},nN=[1,2,4],rN={maxPoses:1,flipHorizontal:!1},sN={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},iN=[-123.15,-115.9,-103.06];function aN(e){return Math.floor(e/2)}var oN=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(aN(e),e);)this.exchange(e,aN(e)),e=aN(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function lN(e,t,n,r,s,i){for(var a=i.shape,o=a[0],l=a[1],u=!0,c=Math.max(n-s,0),h=Math.min(n+s+1,o),d=c;d<h;++d){for(var p=Math.max(r-s,0),f=Math.min(r+s+1,l),m=p;m<f;++m)if(i.get(d,m,e)>t){u=!1;break}if(!u)break}return u}function uN(e){return g_(this,void 0,void 0,(function(){return y_(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function cN(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+17)}}function hN(e,t,n){var r=cN(e.heatmapY,e.heatmapX,e.id,n),s=r.y,i=r.x;return{x:e.heatmapX*t+i,y:e.heatmapY*t+s}}function dN(e,t,n,r){var s=n.x,i=n.y;return e.some((function(e){var n,a,o,l,u=e.keypoints;return n=i,a=s,(o=u[r].y-n)*o+(l=u[r].x-a)*l<=t}))}var pN=v_.reduce((function(e,t,n){return e[t]=n,e}),{}),fN=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map((function(e){var t=e[0],n=e[1];return[pN[t],pN[n]]})),mN=fN.map((function(e){return e[1]})),gN=fN.map((function(e){return e[0]}));function yN(e,t,n){return e<t?t:e>n?n:e}function bN(e,t,n,r){return{y:yN(Math.round(e.y/t),0,n-1),x:yN(Math.round(e.x/t),0,r-1)}}function vN(e,t){return{x:e.x+t.x,y:e.y+t.y}}function xN(e,t,n,r,s,i,a,o){void 0===o&&(o=2);for(var l=r.shape,u=l[0],c=l[1],h={y:t.y,x:t.x},d=vN(h,function(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}(e,bN(h,i,u,c),a)),p=0;p<o;p++){var f=bN(d,i,u,c),m=cN(f.y,f.x,n,s);d=vN({x:f.x*i,y:f.y*i},{x:m.x,y:m.y})}var g=bN(d,i,u,c),y=r.get(g.y,g.x,n);return{y:d.y,x:d.x,name:v_[n],score:y}}function wN(e,t,n,r,s,i){var a=t.shape[2],o=mN.length,l=new Array(a),u=e.part,c=e.score,h=hN(u,r,n);l[u.id]={score:c,name:v_[u.id],y:h.y,x:h.x};for(var d=o-1;d>=0;--d){var p=mN[d],f=gN[d];l[p]&&!l[f]&&(l[f]=xN(d,l[p],f,t,n,r,i))}for(d=0;d<o;++d)p=gN[d],f=mN[d],l[p]&&!l[f]&&(l[f]=xN(d,l[p],f,t,n,r,s));return l}function kN(e,t,n){return n.reduce((function(n,r,s){var i=r.y,a=r.x,o=r.score;return dN(e,t,{y:i,x:a},s)||(n+=o),n}),0)/n.length}function SN(e,t,n,r,s,i,a,o){return void 0===a&&(a=.5),void 0===o&&(o=20),g_(this,void 0,void 0,(function(){var l,u,c,h,d,p,f,m,g,y,b,v;return y_(this,(function(x){switch(x.label){case 0:return[4,uN([e,t,n,r])];case 1:for(l=x.sent(),u=l[0],c=l[1],h=l[2],d=l[3],p=[],f=function(e,t,n){for(var r=n.shape,s=r[0],i=r[1],a=r[2],o=new oN(s*i*a,(function(e){return e.score})),l=0;l<s;++l)for(var u=0;u<i;++u)for(var c=0;c<a;++c){var h=n.get(l,u,c);h<e||lN(c,h,l,u,1,n)&&o.enqueue({score:h,part:{heatmapY:l,heatmapX:u,id:c}})}return o}(a,0,u),m=o*o;p.length<i&&!f.empty();)g=f.dequeue(),y=hN(g.part,s,c),dN(p,m,y,g.part.id)||(b=wN(g,u,c,s,h,d),v=kN(p,m,b),p.push({keypoints:b,score:v}));return[2,p]}}))}))}function CN(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];switch(t.length){case 0:e="fn main() ";break;case 1:e="fn main(".concat(t[0]," : i32)");break;default:throw Error("Unreachable")}return e}var IN=function(){function e(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=Sg(this.outputShape),this.dispatch=xg(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return e.prototype.getUserCode=function(){return"\n        ".concat(CN("index")," {\n          if (index < uniforms.size) {\n            let y = B[index * 2];\n            let x = B[index * 2 + 1];\n            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;\n            result[index] = A[outIndex];\n          }\n        }\n        ")},e}();var _N=function(){function e(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,2!==e.length||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=Sg(t),this.dispatch=xg(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return e.prototype.getUserCode=function(){return"\n    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {\n      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;\n      let outIndexX = outIndexY + uniforms.bShape.z;\n      let outY = i32(B[outIndexY]);\n      let outX = i32(B[outIndexX]);\n      return vec2<i32>(outY, outX);\n    }\n\n    ".concat(CN("index")," {\n      if (index < uniforms.size) {\n        let indexY = index * ").concat(this.supportedLastDimension,";\n        let indexX = indexY + 1;\n        let heatmapY = A[indexY];\n        let heatmapX = A[indexX];\n        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);\n        result[indexY] = f32(out[0]);\n        result[indexX] = f32(out[1]);\n      }\n    }\n    ")},e}();function TN(e){var t=e.shape,n=t[0],r=t[1],s=t[2];return gi((function(){var t,i,a=Tl(e,[n*r,s]),o=il(a,0),l=Mu(Ra(o,za(r,"int32")),1),u=Mu((t=o,i=r,gi((function(){var e=Ra(t,za(i,"int32"));return Xa(t,Oa(e,za(i,"int32")))}))),1);return $l([l,u],1)}))}function NN(e,t,n){return gi((function(){var r=function(e,t){for(var n=[],r=0;r<v_.length;r++){var s=EN(e.get(r,0).valueOf(),e.get(r,1).valueOf(),r,t),i=s.x,a=s.y;n.push(a),n.push(i)}return Oh(n,[v_.length,2])}(e,n);return $a(Ta(Oa(e.toTensor(),za(t,"int32")),"float32"),r)}))}function EN(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+v_.length)}}function $N(e,t,n){return g_(this,void 0,void 0,(function(){var r,s,i,a,o,l,u,c,h,d;return y_(this,(function(p){switch(p.label){case 0:return r=0,s=TN(e),[4,Promise.all([e.buffer(),t.buffer(),s.buffer()])];case 1:return i=p.sent(),a=i[0],o=i[1],l=i[2],[4,(u=NN(l,n,o)).buffer()];case 2:return c=p.sent(),h=Array.from(function(e,t){for(var n=t.shape[0],r=new Float32Array(n),s=0;s<n;s++){var i=t.get(s,0),a=t.get(s,1);r[s]=e.get(i,a,s)}return r}(a,l)),d=h.map((function(e,t){return r+=e,{y:c.get(t,0),x:c.get(t,1),score:e,name:v_[t]}})),s.dispose(),u.dispose(),[2,{keypoints:d,score:r/d.length}]}}))}))}function AN(e,t,n){return g_(this,void 0,void 0,(function(){var r,s,i;return y_(this,(function(a){return r=TN(e),s=function(e,t,n){return gi((function(){var r=function(e,t){if(Si()instanceof Eg)return function(e,t){var n=Si(),r=new _N(e.shape),s=n.runWebGPUProgram(r,[e,t],"float32");return fi().makeTensorFromTensorInfo(s)}(e,t);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}(e,n);return $a(Ta(Oa(e,za(t,"int32")),"float32"),r)}))}(r,n,t),i=function(e,t){if(Si()instanceof Eg)return function(e,t){var n=Si(),r=new IN(t.shape),s=n.runWebGPUProgram(r,[e,t],"float32");return fi().makeTensorFromTensorInfo(s)}(e,t);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}(e,r),[2,[s,i]]}))}))}function RN(e,t){return(e-1)%t==0}var ON="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",DN="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function FN(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var MN=function(){function e(e,t){this.posenetModel=e;var n=this.posenetModel.inputs[0].shape;B(-1===n[1]&&-1===n[2],(function(){return"Input shape [".concat(n[1],", ").concat(n[2],"] ")+"must both be equal to or -1"}));var r,s,i=(r=t.inputResolution,s=t.outputStride,{height:FN(r.height,s),width:FN(r.width,s)});!function(e){B(eN.indexOf(e)>=0,(function(){return"outputStride of ".concat(e," is invalid. ")+"It must be either 8 or 16."}))}(t.outputStride),function(e,t){B(RN(e.height,t),(function(){return"height of ".concat(e.height," is invalid for output stride ")+"".concat(t,".")})),B(RN(e.width,t),(function(){return"width of ".concat(e.width," is invalid for output stride ")+"".concat(t,".")}))}(i,t.outputStride),this.inputResolution=i,this.outputStride=t.outputStride,this.architecture=t.architecture}return e.prototype.estimatePoses=function(e,t){return void 0===t&&(t=rN),g_(this,void 0,void 0,(function(){return y_(this,(function(n){return[2,this.estimatePosesGPU(e,t,!1)]}))}))},e.prototype.estimatePosesGPU=function(e,t,n){return void 0===t&&(t=rN),void 0===n&&(n=!1),g_(this,void 0,void 0,(function(){var r,s,i,a,o,l,u,c,h,d,p,f,m,g,y,b,v,x;return y_(this,(function(w){switch(w.label){case 0:return r=function(e){var t=e;if(null==t.maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1){if((t=m_(m_({},sN),t)).scoreThreshold<0||t.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(t.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(t.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(t.nmsRadius,"."))}return t}(t),null==e?[2,n?[[],[]]:[]]:(this.maxPoses=r.maxPoses,s=H_(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),i=s.imageTensor,a=s.padding,o="ResNet50"===this.architecture?$a(i,iN):j_(i,[-1,1]),l=this.posenetModel.predict(o),"ResNet50"===this.architecture?(u=Th(l[2],[0]),c=Th(l[3],[0]),h=Th(l[0],[0]),d=Th(l[1],[0])):(u=Th(l[0],[0]),c=Th(l[1],[0]),h=Th(l[2],[0]),d=Th(l[3],[0])),p=Rl(c),1!==this.maxPoses?[3,5]:n?[4,AN(p,u,this.outputStride)]:[3,2]);case 1:return m=w.sent(),y=m[0],g=m[1],f=[y,g],[3,4];case 2:return[4,$N(p,u,this.outputStride)];case 3:y=w.sent(),f=[y],w.label=4;case 4:return[3,7];case 5:if(n)throw new Error("GPU renderer only supports single pose!");return[4,SN(p,u,h,d,this.outputStride,this.maxPoses,r.scoreThreshold,r.nmsRadius)];case 6:f=w.sent(),w.label=7;case 7:if(n){if(!0===r.flipHorizontal)throw new Error("flipHorizontal is not supported!");b=this.getCanvasInfo(F_(e),this.inputResolution,a)}else x=F_(e),v=function(e,t,n,r){var s=t.height,i=t.width,a=s/(n.height*(1-r.top-r.bottom)),o=i/(n.width*(1-r.left-r.right)),l=-r.top*n.height,u=-r.left*n.width;if(1===o&&1===a&&0===l&&0===u)return e;for(var c=0,h=e;c<h.length;c++)for(var d=0,p=h[c].keypoints;d<p.length;d++){var f=p[d];f.x=(f.x+u)*o,f.y=(f.y+l)*a}return e}(f,x,this.inputResolution,a),r.flipHorizontal&&(v=function(e,t){for(var n=0,r=e;n<r.length;n++)for(var s=0,i=r[n].keypoints;s<i.length;s++){var a=i[s];a.x=t.width-1-a.x}return e}(v,x));return i.dispose(),o.dispose(),yi(l),u.dispose(),c.dispose(),h.dispose(),d.dispose(),p.dispose(),[2,n?[f,b]:v]}}))}))},e.prototype.getCanvasInfo=function(e,t,n){var r=e.height,s=e.width,i=r/(t.height*(1-n.top-n.bottom)),a=s/(t.width*(1-n.left-n.right)),o=-n.top*t.height;return[-n.left*t.width,o,a,i,e.width,e.height]},e.prototype.dispose=function(){this.posenetModel.dispose()},e.prototype.reset=function(){},e}();function PN(e){return void 0===e&&(e=QT),g_(this,void 0,void 0,(function(){var t,n,r,s,i;return y_(this,(function(a){switch(a.label){case 0:return"ResNet50"!==(t=function(e){var t=e||QT;if(null==t.architecture&&(t.architecture="MobileNetV1"),ZT.indexOf(t.architecture)<0)throw new Error("Invalid architecture ".concat(t.architecture,". ")+"Should be one of ".concat(ZT));if(null==t.inputResolution&&(t.inputResolution={height:257,width:257}),null==t.outputStride&&(t.outputStride=16),JT[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride ".concat(t.outputStride,". ")+"Should be one of ".concat(JT[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.multiplier&&(t.multiplier=1),tN[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier ".concat(t.multiplier,". ")+"Should be one of ".concat(tN[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.quantBytes&&(t.quantBytes=4),nN.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(t.quantBytes,". ")+"Should be one of ".concat(nN," ")+"for architecture ".concat(t.architecture,"."));if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(e)).architecture?[3,2]:(o=t.outputStride,l=t.quantBytes,u="model-stride".concat(o,".json"),n=4===l?DN+"float/"+u:DN+"quant".concat(l,"/")+u,[4,Xm(t.modelUrl||n)]);case 1:return r=a.sent(),[2,new MN(r,t)];case 2:return s=function(e,t,n){var r={1:"100",.75:"075",.5:"050"},s="model-stride".concat(e,".json");return 4===n?ON+"float/".concat(r[t],"/")+s:ON+"quant".concat(n,"/").concat(r[t],"/")+s}(t.outputStride,t.multiplier,t.quantBytes),[4,Xm(t.modelUrl||s)];case 3:return i=a.sent(),[2,new MN(i,t)]}var o,l,u}))}))}function zN(e,t){return g_(this,void 0,void 0,(function(){var n,r;return y_(this,(function(s){switch(e){case FT.PoseNet:return[2,PN(t)];case FT.BlazePose:if(r=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,OT(t)];if("mediapipe"===n.runtime)return[2,D_(t)];r=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(r));case FT.MoveNet:return[2,YT(t)];default:throw new Error("".concat(e," is not a supported model name."))}}))}))}var LN={SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"};const BN={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(e,Eh(Ta(n,"float32"),-1))}}},VN={kernelName:Ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Fa(Ta(n,"float32")),r=Da(Xa(za(1),t));return tc(Ra(e,r))}}}},WN={kernelName:Ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Da(Xa(Fa(Ta(n,"float32")),1));return Ra(e,t)}}}},UN={kernelName:$e,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=eo(n.shape,r.shape);return{a:()=>{let t=e;const r=Ja(n.shape,s);return r.length>0&&(t=Au(t,r)),Tl(t,n.shape)},b:()=>{let t=e;const n=Ja(r.shape,s);return n.length>0&&(t=Au(t,n)),Tl(t,r.shape)}}}},GN={kernelName:Ae,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},jN={kernelName:De,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ma(n)}}},HN={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ma(n)}}},qN={kernelName:Me,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,Da(Xa(za(1),Fa(Ta(n,"float32")))))}}},KN={kernelName:Pe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Da($a(za(1),Fa(Ta(n,"float32"))));return Ra(e,t)}}}},XN={kernelName:Be,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=eo(n.shape,r.shape);return{a:()=>{const t=$a(Fa(n),Fa(r));let i=Oa(e,Ra(r,t));const a=Ja(n.shape,s);return a.length>0&&(i=Au(i,a)),Tl(i,n.shape)},b:()=>{const t=$a(Fa(n),Fa(r));let i=tc(Oa(e,Ra(n,t)));const a=Ja(r.shape,s);return a.length>0&&(i=Au(i,a)),Tl(i,r.shape)}}}},YN={kernelName:ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,$a(Fa(Ta(n,"float32")),1))}}},QN={kernelName:Le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,Xa(za(1),Fa(Ta(n,"float32"))))}}};const ZN=li({avgPool3dGrad_:function(e,t,n,r,s,i){const a=ii(e,"dy","avgPool3dGrad"),o=ii(t,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=Tl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=Tl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),B(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),B(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),_l("avgPool3dGrad",s,i);const h={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:i},p=Ys.runKernel(Ge,h,d);return c?Tl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),JN={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>ZN(e,r,s,i,a,o)}}};const eE=li({avgPoolGrad_:function(e,t,n,r,s){const i=ii(e,"dy","avgPoolGrad"),a=ii(t,"input","avgPoolGrad");B(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=Tl(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=Tl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),B(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),B(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=Ys.runKernel(We,c,h);return u?Tl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),tE={kernelName:Ve,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,pad:a}=n;return{x:()=>eE(e,r,s,i,a)}}},nE={kernelName:je,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>Al(e,s,!1,!1),b:()=>Al(e,r,!0,!1)}:i&&!a?{a:()=>Al(s,e,!1,!0),b:()=>Al(r,e,!1,!1)}:{a:()=>Al(s,e,!0,!0),b:()=>Al(e,r,!0,!0)}:{a:()=>Al(e,s,!1,!0),b:()=>Al(r,e,!0,!1)}}},rE={kernelName:He,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Fc(e,r,s)}}},sE={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,i=r.shape,a=Array.from(i);for(let l=s.length-1;l>=0;l--)if(s[l]===i[l])a[l]=1;else if(1!==s[l])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let l=0;l<a.length;l++)a[l]>1&&o.push(l);return{x:()=>Au(e,o,!0)}}},iE={kernelName:Ye,gradFunc:e=>({x:()=>e.clone()})},aE={kernelName:Qe,gradFunc:e=>({x:()=>Ma(e)})},oE={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>fu(ac(Uu(r,s),Yu(r,i)),e,Ma(e))}}},lE={kernelName:et,inputsToSave:["x"],gradFunc:BN.gradFunc},uE={kernelName:tt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,i=Q(s,t[0].shape)[0],a=r.map((e=>e[i]));return Ch(e,a,i).map((e=>()=>e))}},cE={kernelName:nt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return B(kl(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Jl(r.shape,e,s,a,o,l),filter:()=>ad(r,e,s.shape,a,o,l)}}},hE={kernelName:st,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Ql(e,s,i,a,o,1,l),filter:()=>ad(e,r,s.shape,i,a,o,l)}}};const dE=li({conv3DBackpropFilter_:function(e,t,n,r,s){let i=e;4===e.rank&&(i=Tl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let a=t;4===a.rank&&(a=Tl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),B(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),B(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),B(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),B(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),B(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:r,pad:s,filterShape:n};return Ys.runKernel(at,o,l)}}),pE={kernelName:it,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i}=n;B(kl(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=t;return{x:()=>nu(a.shape,e,o,s,i),filter:()=>dE(a,e,o.shape,s,i)}}},fE={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(tc(fh(Ta(n,"float32"))),e)}}},mE={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(mh(Ta(n,"float32")),e)}}},gE={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const t=_u([s],r.rank);let n=ou(e,s,i,!a);return null!=t&&(n=Qh(n,t)),n}}}},yE={kernelName:mt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;B(kl(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return B(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),B(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),B(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),B(Sl(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),_l("depthwiseConv2d",i,a),{x:()=>pd(l.shape,e,u,s,i,o,a),filter:()=>dd(l,e,u.shape,s,i,o,a)}}},bE={kernelName:vt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,i={x:r,filter:s,dy:e},a={x:r,filter:s,dy:e};return{x:()=>Ys.runKernel(xt,i,n),filter:()=>Ys.runKernel(wt,a,n)}}},vE={kernelName:It,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Ys.runKernel(_t,r)}}},xE={kernelName:Tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Oa(Fu(tc(Fa(n))),2/Math.sqrt(Math.PI));return{x:()=>Oa(e,r)}}},wE={kernelName:Et,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(e,n)}}},kE={kernelName:$t,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Tl(e,n.shape)}}},SE={kernelName:At,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(e,Fu(n))}}},CE={kernelName:Ft,gradFunc:e=>({x:()=>Ma(e)})},IE={kernelName:Mt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=eo(n.shape,r.shape);return{a:()=>{const t=Ra(e,Ta(r,"float32")),i=Ja(n.shape,s);return i.length>0?Tl(Au(t,i),n.shape):t},b:()=>{let t=Oa(e,Ta(n,"float32"));const i=Ja(r.shape,s);i.length>0&&(t=Tl(Au(t,i),r.shape));const a=Fa(r);return tc(Ra(t,Ta(a,"float32")))}}}},_E={kernelName:Pt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=t,l=null==o?za(1):o,u=Ja(i.shape,s.shape),c=[];if(1===i.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Xa(s,i),d=Oa(e,l),p=uh($a(a,za(r))),f=Oa(Oa(Oa(p,p),p),za(-.5));return{x:()=>1===i.rank?Tl(Oa(Oa(e,zu(Tl(p,[1,1,1,i.shape[0]]),c)),l),s.shape):Tl(Oa(Oa(e,p),l),s.shape),mean:()=>{let e=Oa(Oa(p,za(-1)),d);return 1===i.rank&&(e=Au(e,u)),Tl(e,i.shape)},variance:()=>{let e=Oa(Oa(f,h),d);return 1===i.rank&&(e=Au(e,u)),Tl(e,i.shape)},scale:()=>{const t=Oa(h,p);let n=Oa(e,t);return 1===i.rank&&(n=Au(n,u)),Tl(n,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=Au(t,u)),Tl(t,i.shape)}}}},TE={kernelName:zt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:i,batchDims:a}=n,o=Q(i,r.shape)[0],l=(e,t,n)=>()=>{const r=e.shape,s=t.size,a=r.slice(0,o),l=a.length,u=r.slice(i,r.length).slice(1),c=u.length,h=NE(0,l),d=NE(l+1,l+1+c),p=EE([a,[s],u]),f=Tl(n,p),m=Tl(t,[s]),g=EE([[l],h,d]),y=Qh(f,g);let b=Gh(y,m,e.shape[o]);const v=Tu(g);return b=Qh(b,v),b};if(1===a){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=Nh(n.map(((t,n)=>l(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>s}}return{x:l(r,s,e),indices:()=>s}}};function NE(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function EE(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const $E={kernelName:Vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ma(n),b:()=>Ma(r)}}},AE={kernelName:Wt,gradFunc:e=>({x:()=>Ta(e,"float32")})},RE={kernelName:jt,gradFunc:e=>({x:()=>Ma(e)})},OE={kernelName:Ht,gradFunc:e=>({x:()=>Ma(e)})},DE={kernelName:qt,gradFunc:e=>({x:()=>Ma(e)})},FE={kernelName:Kt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,i=Wu(r,0);return{x:()=>fu(i,e,Oa(e,s))}}},ME={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,$a(n,1))}}},PE={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,Ta(n,"float32"))}}},zE={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Fu(r);return Xa(e,Oa(Au(e,s,!0),t))}}}};const LE=li({localResponseNormalizationBackprop_:function(e,t,n){const r={x:e,y:t,dy:n},s={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return Ys.runKernel(sn,r,s)}}),BE={kernelName:rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>LE(r,s,e,i,a,o,l)}}};function VE(e,t,n,r){return t.rank<n.rank&&(t=Tl(t,Cu(t.shape,r))),e.rank<n.rank&&(e=Tl(e,Cu(e.shape,r))),{x:()=>Oa(e,Ta(pu(n,t),e.dtype))}}const WE={kernelName:an,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,i=t[0],a=VE(e,t[1],i,Q(s,i.shape));return{x:()=>a.x()}}},UE={kernelName:on,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Oa(e,Ta(Uu(n,r),"float32")),b:()=>Oa(e,Ta(Xu(n,r),"float32"))}}};const GE=li({maxPool3dGrad_:function(e,t,n,r,s,i,a){const o=ii(e,"dy","maxPool3dGrad"),l=ii(t,"input","maxPool3dGrad"),u=ii(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Tl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Tl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Tl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),B(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),B(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),B(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),_l("maxPool3dGrad",i,a);const f={dy:c,input:h,output:d},m={filterSize:r,strides:s,pad:i,dimRoundingMode:a},g=Ys.runKernel(hn,f,m);return p?Tl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),jE={kernelName:cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>GE(e,r,s,i,a,o,l)}}};const HE=li({maxPoolGrad_:function(e,t,n,r,s,i,a){const o=ii(e,"dy","maxPoolGrad"),l=ii(t,"input","maxPoolGrad"),u=ii(n,"output","maxPoolGrad");B(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),B(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),B(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),_l("maxPoolGrad",i,a);const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return Ys.runKernel(un,c,h)}}),qE={kernelName:ln,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,pad:o}=n;return{x:()=>HE(e,r,s,i,a,o)}}},KE={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map((e=>e[0]));return{x:()=>Ol(e,i,r.shape)}}},XE={kernelName:Tn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return jh(e,r).map((e=>()=>e))}},YE={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map((e=>e[0]));return{x:()=>Ol(e,i,r.shape)}}},QE={kernelName:En,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,i=n,a=r,o=eo(i.shape,a.shape);return{a:()=>{const t=Ta(a,"float32");let n=Oa(e,Oa(t,Ka(i,Xa(t,za(1)))));const r=Ja(i.shape,o);return r.length>0&&(n=Au(n,r)),Tl(n,i.shape)},b:()=>{const t=Wu(i,0),n=fu(t,Ju(i),Ma(i));let r=Oa(e,Oa(s,n));const l=Ja(a.shape,o);return l.length>0&&(r=Au(r,l)),Tl(r,a.shape)}}}};function ZE(e,t,n){const r=e.shape.length,s=r-n.length,i=_u(n,r);let a=e;null!=i&&(a=Qh(e,i));const o=a.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=Tl(t,r),i=au(e,n,!0,!1),a=au(e,n,!0,!0),o=Oa(i,a);return Oa(s,o)}(a.reshape(o),t,s);if(u=u.reshape(a.shape),null!=i){const e=Tu(i);u=Qh(u,e)}return u}const JE={kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Wu(n,za(0)),r=za(Lp),s=za(Bp),i=Oa(e,s),a=Oa(Oa(e,r),Fu(Ta(n,"float32")));return fu(t,i,a)}}}},e$={kernelName:or,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Ml(e,r,s)}}},t$={kernelName:lr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>$l(e,r)}}},n$={kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=Ma(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=$a(t,Ol(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)t=$a(t,Ol(e,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)t=$a(t,Ol(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)t=$a(t,Ol(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}};const r$=[BN,VN,WN,UN,GN,jN,HN,qN,KN,XN,YN,QN,JN,tE,nE,rE,sE,iE,aE,oE,lE,uE,hE,cE,pE,fE,mE,gE,yE,bE,{kernelName:St,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=eo(n.shape,r.shape);return{a:()=>{const t=Ra(e,Ta(r,"float32")),i=Ja(n.shape,s);return i.length>0?Tl(Au(t,i),n.shape):t},b:()=>{let t=Oa(e,Ta(n,"float32"));const i=Ja(r.shape,s);i.length>0&&(t=Tl(Au(t,i),r.shape));const a=Fa(r);return tc(Ra(t,Ta(a,"float32")))}}}},vE,xE,wE,kE,SE,IE,CE,_E,TE,$E,AE,RE,OE,DE,FE,ME,PE,zE,BE,WE,WE,UE,jE,qE,{kernelName:pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,i=Q(s,r.shape),a=U(Su(r.shape,i)[1]);return{x:()=>{const t=r.shape.slice();i.forEach((e=>{t[e]=1}));const n=Tl(e,t);return Ra(Oa(n,bc(r.shape,"float32")),a)}}}},{kernelName:fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[i,a]=t,o=VE(e,a,i,Q(s,i.shape));return{x:()=>o.x()}}},{kernelName:mn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Oa(e,Ta(Yu(n,r),"float32")),b:()=>Oa(e,Ta(Wu(n,r),"float32"))}}},KE,{kernelName:yn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=eo(n.shape,r.shape);return{a:()=>{const t=Ja(n.shape,s);return t.length>0?Tl(Au(e,t),n.shape):e},b:()=>{const t=Oa(e,tc(Bu(Ra(n,r)))),i=Ja(r.shape,s);return i.length>0?Tl(Au(t,i),r.shape):t}}}},{kernelName:vn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=eo(n.shape,r.shape);return{a:()=>{const t=Oa(e,Ta(r,"float32")),i=Ja(n.shape,s);return i.length>0?Tl(Au(t,i),n.shape):t},b:()=>{const t=Oa(e,Ta(n,"float32")),i=Ja(r.shape,s);return i.length>0?Tl(Au(t,i),r.shape):t}}}},{kernelName:xn,gradFunc:e=>({x:()=>tc(e)})},{kernelName:_n,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>yc(n.shape,"float32")}}},{kernelName:In,gradFunc:e=>({x:()=>Ma(e)})},XE,YE,YE,QE,{kernelName:$n,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Wu(n,0);return{x:()=>fu(s,e,Oa(e,r)),alpha:()=>{let t=fu(s,Ma(e),Oa(e,n));const i=Ja(r.shape,e.shape);return i.length>0&&(t=Au(t,i)),Tl(t,r.shape)}}}},{kernelName:An,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let i=[];return i=void 0===s||null===s?r.shape.map(((e,t)=>t)):"number"===typeof s?[s]:s,{x:()=>ZE(r,e,i)}}},{kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,tc(Fa(n)))}}},{kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Oa(Yu(n,6),Eh(n));return{x:()=>Oa(e,Ta(r,"float32"))}}},{kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(e,Ta(Eh(n),"float32"))}}},{kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(e,n.shape)}}},{kernelName:Wn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Ys.runKernel(Un,s,n)}}},{kernelName:Bn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Ys.runKernel(Vn,s,n)}}},{kernelName:jn,gradFunc:(e,t,n)=>{const{dims:r}=n,s=Q(r,e.shape);return{x:()=>rh(e,s)}}},{kernelName:Hn,gradFunc:e=>({x:()=>Ma(e)})},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tc(Ra(e,Oa(Ka(n,1.5),2)))}}},{kernelName:Qn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ta(Ma(n),"float32"),t:()=>Oa(e,Ta(n,e.dtype)),e:()=>Oa(e,Ta(oc(n),e.dtype))}}},JE,{kernelName:rr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(e,Oa(n,Xa(za(1),n)))}}},{kernelName:nr,gradFunc:e=>({x:()=>Ma(e)})},{kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(su(Ta(n,"float32")),e)}}},{kernelName:tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(iu(Ta(n,"float32")),e)}}},{kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:i}=n,a=r.shape,[o,l]=Qo(r,s,i),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],a[c]-o[c]-l[c]]);return{x:()=>$c(e,u)}}},{kernelName:ur,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,i=Oa(e,r);return{logits:()=>Xa(i,Oa(Au(i,[s],true),r))}}},{kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(e,Rl(n))}}},e$,e$,t$,t$,{kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,Oa(Da(Ta(n,"float32")),2))}}},{kernelName:mr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=za(2);return{a:()=>Oa(e,Oa(s,Xa(n,r))),b:()=>Oa(e,Oa(s,Xa(r,n)))}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(e,Oa(Ta(n,"float32"),2))}}},{kernelName:Or,gradFunc:e=>({x:()=>Ma(e)})},{kernelName:kr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=eo(n.shape,r.shape);return{a:()=>{let t=e;const r=Ja(n.shape,s);return r.length>0&&(t=Au(t,r)),Tl(t,n.shape)},b:()=>{let t=e;const n=Ja(r.shape,s);return n.length>0&&(t=Au(t,n)),Tl(tc(t),r.shape)}}}},{kernelName:ar,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:i}=n;Q(i,r.shape).forEach((e=>{s[e]=1}));const a=Tl(e,s),o=Oa(a,bc(r.shape,"float32"));return{x:()=>o}}},{kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,Fa(su(n)))}}},{kernelName:Cr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oa(Xa(za(1),Fa(n)),e)}}},n$,{kernelName:Nr,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,i=Tu(s);return{x:()=>Qh(e,i)}}},{kernelName:$r,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Nh(e,s)}}},{kernelName:Ar,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=to(t,Ma(t)),r=Vu(e,n);let s=Uu(t,za(0,"int32"));const i=r.rank-s.rank;for(let o=0;o<i;++o)s=Mu(s,o+1);s=ac(s,bc(r.shape,"bool"));const a=Ma(r);return fu(s,r,a)}(e,n)}}},{kernelName:Rr,gradFunc:e=>({x:()=>Ma(e)})}];for(const n of r$)qr(n);$s().prototype.abs=function(){return this.throwIfDisposed(),Qa(this)},$s().prototype.acos=function(){return this.throwIfDisposed(),el(this)},$s().prototype.acosh=function(){return this.throwIfDisposed(),tl(this)},$s().prototype.add=function(e){return this.throwIfDisposed(),$a(this,e)},$s().prototype.all=function(e,t){return this.throwIfDisposed(),rl(this,e,t)},$s().prototype.any=function(e,t){return this.throwIfDisposed(),sl(this,e,t)},$s().prototype.argMax=function(e){return this.throwIfDisposed(),il(this,e)},$s().prototype.argMin=function(e){return this.throwIfDisposed(),al(this,e)},$s().prototype.asScalar=function(){return this.throwIfDisposed(),B(1===this.size,(()=>"The array must have only 1 element.")),Tl(this,[])},$s().prototype.asType=function(e){return this.throwIfDisposed(),Ta(this,e)},$s().prototype.as1D=function(){return this.throwIfDisposed(),Tl(this,[this.size])},$s().prototype.as2D=function(e,t){return this.throwIfDisposed(),Tl(this,[e,t])},$s().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Tl(this,[e,t,n])},$s().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Tl(this,[e,t,n,r])},$s().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Tl(this,[e,t,n,r,s])},$s().prototype.asin=function(){return this.throwIfDisposed(),ol(this)},$s().prototype.asinh=function(){return this.throwIfDisposed(),ll(this)},$s().prototype.atan=function(){return this.throwIfDisposed(),ul(this)},$s().prototype.atan2=function(e){return this.throwIfDisposed(),cl(this,e)},$s().prototype.atanh=function(){return this.throwIfDisposed(),hl(this)},$s().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Nl(this,e,t,n,r)},$s().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Ml(this,e,t)},$s().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Pl(this,e,t,n,r,s)},$s().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Gl(this,e)},$s().prototype.cast=function(e){return this.throwIfDisposed(),Ta(this,e)},$s().prototype.ceil=function(){return this.throwIfDisposed(),jl(this)},$s().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Hl(this,e,t)},$s().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Es&&(e=[e]),$l([this,...e],t)},$s().prototype.conv1d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Zl(this,e,t,n,r,s,i)},$s().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),eu(this,e,t,n,r,s)},$s().prototype.conv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Ql(this,e,t,n,r,s,i)},$s().prototype.cos=function(){return this.throwIfDisposed(),su(this)},$s().prototype.cosh=function(){return this.throwIfDisposed(),iu(this)},$s().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),au(this,e,t,n)},$s().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),ou(this,e,t,n)},$s().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),uu(this,e,t)},$s().prototype.depthwiseConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),cu(this,e,t,n,r,s,i)},$s().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),du(this,e,t,n,r,s)},$s().prototype.divNoNan=function(e){return this.throwIfDisposed(),mu(this,e)},$s().prototype.div=function(e){return this.throwIfDisposed(),Ra(this,e)},$s().prototype.dot=function(e){return this.throwIfDisposed(),gu(this,e)},$s().prototype.elu=function(){return this.throwIfDisposed(),bu(this)},$s().prototype.equal=function(e){return this.throwIfDisposed(),pu(this,e)},$s().prototype.erf=function(){return this.throwIfDisposed(),xu(this)},$s().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Du(this,e,t)},$s().prototype.exp=function(){return this.throwIfDisposed(),Fu(this)},$s().prototype.expandDims=function(e){return this.throwIfDisposed(),Mu(this,e)},$s().prototype.expm1=function(){return this.throwIfDisposed(),Pu(this)},$s().prototype.fft=function(){return this.throwIfDisposed(),wh(this)},$s().prototype.flatten=function(){return this.throwIfDisposed(),Tl(this,[this.size])},$s().prototype.floor=function(){return this.throwIfDisposed(),Bu(this)},$s().prototype.floorDiv=function(e){return this.throwIfDisposed(),Aa(this,e)},$s().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Vu(this,e,t,n)},$s().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Uu(this,e)},$s().prototype.greater=function(e){return this.throwIfDisposed(),Wu(this,e)},$s().prototype.ifft=function(){return this.throwIfDisposed(),kh(this)},$s().prototype.irfft=function(){return this.throwIfDisposed(),Sh(this)},$s().prototype.isFinite=function(){return this.throwIfDisposed(),ju(this)},$s().prototype.isInf=function(){return this.throwIfDisposed(),Hu(this)},$s().prototype.isNaN=function(){return this.throwIfDisposed(),qu(this)},$s().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Ku(this,e)},$s().prototype.lessEqual=function(e){return this.throwIfDisposed(),Yu(this,e)},$s().prototype.less=function(e){return this.throwIfDisposed(),Xu(this,e)},$s().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Zu(this,e,t,n,r)},$s().prototype.logSigmoid=function(){return this.throwIfDisposed(),rc(this)},$s().prototype.logSoftmax=function(e){return this.throwIfDisposed(),sc(this,e)},$s().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),ic(this,e,t)},$s().prototype.log=function(){return this.throwIfDisposed(),Ju(this)},$s().prototype.log1p=function(){return this.throwIfDisposed(),ec(this)},$s().prototype.logicalAnd=function(e){return this.throwIfDisposed(),ac(this,e)},$s().prototype.logicalNot=function(){return this.throwIfDisposed(),oc(this)},$s().prototype.logicalOr=function(e){return this.throwIfDisposed(),lc(this,e)},$s().prototype.logicalXor=function(e){return this.throwIfDisposed(),uc(this,e)},$s().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Al(this,e,t,n)},$s().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),pc(this,e,t,n,r)},$s().prototype.max=function(e,t){return this.throwIfDisposed(),Eu(this,e,t)},$s().prototype.maximum=function(e){return this.throwIfDisposed(),to(this,e)},$s().prototype.mean=function(e,t){return this.throwIfDisposed(),gc(this,e,t)},$s().prototype.min=function(e,t){return this.throwIfDisposed(),$u(this,e,t)},$s().prototype.minimum=function(e){return this.throwIfDisposed(),xc(this,e)},$s().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),wc(this,e,t)},$s().prototype.mod=function(e){return this.throwIfDisposed(),kc(this,e)},$s().prototype.mul=function(e){return this.throwIfDisposed(),Oa(this,e)},$s().prototype.neg=function(){return this.throwIfDisposed(),tc(this)},$s().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Ou(this,e,t,n)},$s().prototype.notEqual=function(e){return this.throwIfDisposed(),_c(this,e)},$s().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Tc(this,e,t,n)},$s().prototype.onesLike=function(){return this.throwIfDisposed(),Nc(this)},$s().prototype.pad=function(e,t){return this.throwIfDisposed(),$c(this,e,t)},$s().prototype.pool=function(e,t,n,r,s,i){return this.throwIfDisposed(),Mc(this,e,t,n,r,s,i)},$s().prototype.pow=function(e){return this.throwIfDisposed(),Ka(this,e)},$s().prototype.prelu=function(e){return this.throwIfDisposed(),Pc(this,e)},$s().prototype.prod=function(e,t){return this.throwIfDisposed(),zc(this,e,t)},$s().prototype.reciprocal=function(){return this.throwIfDisposed(),eh(this)},$s().prototype.relu=function(){return this.throwIfDisposed(),th(this)},$s().prototype.relu6=function(){return this.throwIfDisposed(),nh(this)},$s().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Tl(this,e.shape)},$s().prototype.reshape=function(e){return this.throwIfDisposed(),Tl(this,e)},$s().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Vd(this,e,t,n)},$s().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Wd(this,e,t,n)},$s().prototype.reverse=function(e){return this.throwIfDisposed(),rh(this,e)},$s().prototype.rfft=function(){return this.throwIfDisposed(),Ih(this)},$s().prototype.round=function(){return this.throwIfDisposed(),lh(this)},$s().prototype.rsqrt=function(){return this.throwIfDisposed(),uh(this)},$s().prototype.selu=function(){return this.throwIfDisposed(),ch(this)},$s().prototype.separableConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),hh(this,e,t,n,r,s,i)},$s().prototype.sigmoid=function(){return this.throwIfDisposed(),Rl(this)},$s().prototype.sign=function(){return this.throwIfDisposed(),ph(this)},$s().prototype.sin=function(){return this.throwIfDisposed(),fh(this)},$s().prototype.sinh=function(){return this.throwIfDisposed(),mh(this)},$s().prototype.slice=function(e,t){return this.throwIfDisposed(),Ol(this,e,t)},$s().prototype.softmax=function(e){return this.throwIfDisposed(),xh(this,e)},$s().prototype.softplus=function(){return this.throwIfDisposed(),nc(this)},$s().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Fc(this,e,t)},$s().prototype.split=function(e,t){return this.throwIfDisposed(),Ch(this,e,t)},$s().prototype.sqrt=function(){return this.throwIfDisposed(),Da(this)},$s().prototype.square=function(){return this.throwIfDisposed(),Fa(this)},$s().prototype.squaredDifference=function(e){return this.throwIfDisposed(),_h(this,e)},$s().prototype.squeeze=function(e){return this.throwIfDisposed(),Th(this,e)},$s().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Es?[this,e]:[this,...e];return Nh(n,t)},$s().prototype.step=function(e){return this.throwIfDisposed(),Eh(this,e)},$s().prototype.stridedSlice=function(e,t,n,r,s,i,a,o){return this.throwIfDisposed(),$h(this,e,t,n,r,s,i,a,o)},$s().prototype.sub=function(e){return this.throwIfDisposed(),Xa(this,e)},$s().prototype.sum=function(e,t){return this.throwIfDisposed(),Au(this,e,t)},$s().prototype.tan=function(){return this.throwIfDisposed(),Ah(this)},$s().prototype.tanh=function(){return this.throwIfDisposed(),Dl(this)},$s().prototype.tile=function(e){return this.throwIfDisposed(),zu(this,e)},$s().prototype.toBool=function(){return this.throwIfDisposed(),Ta(this,"bool")},$s().prototype.toFloat=function(){return this.throwIfDisposed(),Ta(this,"float32")},$s().prototype.toInt=function(){return this.throwIfDisposed(),Ta(this,"int32")},$s().prototype.topk=function(e,t){return this.throwIfDisposed(),Vh(this,e,t)},$s().prototype.transpose=function(e){return this.throwIfDisposed(),Qh(this,e)},$s().prototype.unique=function(e){return this.throwIfDisposed(),Uh(this,e)},$s().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)},$s().prototype.unstack=function(e){return this.throwIfDisposed(),jh(this,e)},$s().prototype.where=function(e,t){return this.throwIfDisposed(),fu(e,this,t)},$s().prototype.zerosLike=function(){return this.throwIfDisposed(),Ma(this)};class s$ extends Error{constructor(e){super(e),Object.setPrototypeOf(this,s$.prototype)}}class i$ extends Error{constructor(e){super(e),Object.setPrototypeOf(this,i$.prototype)}}class a$ extends Error{constructor(e){super(e),Object.setPrototypeOf(this,a$.prototype)}}class o$ extends Error{constructor(e){super(e),Object.setPrototypeOf(this,o$.prototype)}}class l$ extends Error{constructor(e){super(e),Object.setPrototypeOf(this,l$.prototype)}}Error;class u${constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function c$(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function h$(e,t){if(!e)throw new l$(t)}function d$(e,t){let n=0;for(const r of e)r===t&&n++;return n}function p$(e){return 1===e.length?e[0]:e}function f$(e){return Array.isArray(e)?e:[e]}function m$(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function g$(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let y$={};function b$(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function v$(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>v$(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?v$(t):e[n]=t.value)}}}function x$(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const s=e;let i;if(s in n)i=n[s];else if(s in y$)i=y$[s];else if(i=t[s],null==i)throw new a$(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i.className||null==i.config)throw new a$(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in y$?[o,l]=y$.className:a in t&&([o,l]=t[a]),null==o)throw new a$(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(y$))e[n]=y$[n];for(const s of Object.keys(n))e[s]=n[s];i.config.customObjects=e;const t=Object.assign({},y$);for(const s of Object.keys(n))y$[s]=n[s];v$(i.config);const r=l(o,i.config,n,s);return y$=Object.assign({},t),r}{const e=Object.assign({},y$);for(const r of Object.keys(n))y$[r]=n[r];const t=new o(i.config);return y$=Object.assign({},e),t}}}function w$(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function k$(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function S$(e){if(null==e)throw new a$(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function C$(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new a$(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function I$(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return h$(n>=0),h$(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function _$(e,t){Array.isArray(e)?(B(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>_$(e,`element ${n+1} of ${t}`)))):B(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${T$(e)}.`))}function T$(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>T$(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function N$(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let E$=0;function $$(){return E$++}const A$={};function R$(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in A$||(A$[e]=0),A$[e]+=1,e+A$[e].toString()}const O$=["channelsFirst","channelsLast"],D$=["nearest","bilinear"],F$=["valid","same","causal"],M$=["max","avg"],P$=["sum","mul","concat","ave"],z$=new Map;function L$(e){C$(O$,"DataFormat",e)}function B$(e){C$(F$,"PaddingMode",e)}function V$(e){C$(M$,"PoolMode",e)}const W$=[];function U$(e,t){W$.push(e);try{const e=t();return W$.pop(),e}catch(n){throw W$.pop(),n}}function G$(e){if(!q$(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===W$.length?"":W$.join("/")+"/")+e}function j$(e){if(!q$(e))throw new Error("Not a valid tensor name: '"+e+"'");z$.has(e)||z$.set(e,0);const t=z$.get(e);if(z$.set(e,z$.get(e)+1),t>0){const n=`${e}_${t}`;return z$.set(n,1),n}return e}const H$=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function q$(e){return!!e.match(H$)}function K$(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function X$(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Y$(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Q$(e,t){if(t<e)throw new a$(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let Z$;function J$(){return null==Z$&&(Z$=Si().epsilon()),Z$}function eA(e,t){return Ta(e,t)}function tA(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Tl(e,n)}function nA(e,t,n){return gi((()=>{switch(e.rank){case 1:return gh(e,t,n);case 2:return yh(e,[t,0],[n,e.shape[1]]);case 3:return bh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return vh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ol(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ol(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new a$(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function rA(e,t,n){return gi((()=>{switch(e.rank){case 1:return gh(e,t,n);case 2:return yh(e,[0,t],[e.shape[0],n]);case 3:return bh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return vh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new a$(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function sA(e,t,n,r){return gi((()=>{switch(e.rank){case 1:return gh(e,t,n);case 2:switch(r){case 1:return nA(e,t,n);case 2:return rA(e,t,n);default:throw new a$(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return nA(e,t,n);case 2:return bh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return rA(e,t,n);default:throw new a$(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return nA(e,t,n);case 2:return vh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return vh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return rA(e,t,n);default:throw new a$(`The axis is not within the rank of the tensor ${r}`)}default:throw new a$(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function iA(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),$l(e,n)}function aA(e,t){switch(e.rank){case 1:return ql([e,t]);case 2:return Kl([e,t],0);case 3:return Xl([e,t],0);case 4:return Yl([e,t],0);default:throw new a$(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function oA(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new a$(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return zu(e,t)}function lA(e){return Kc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function uA(e,t,n,r){if(e.rank<2||t.rank<2)throw new o$(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new o$(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return md({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?dA(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),i=s.pop();e=Tl(e,[-1,i]);const a=t.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Tl(Qh(t,c),[l,-1]);const h=[...s,...u];return Tl(md({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?dA(e.rank,r,"channelsLast"):null,activation:n}),h)}}function cA(e,t,n){return gi((()=>(t=Array.isArray(t)?Rh(t,"int32"):Ta(t,"int32"),Vu(e,t,n))))}function hA(e){return Oa(e,e)}function dA(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new a$(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Tl(t,[1,r[0],1,1,1]):Tl(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Tl(t,[1,1,1,1,r[0]]):Tl(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Tl(t,[1,r[0],1,1]):Tl(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Tl(t,[1,1,1,r[0]]):Tl(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Tl(t,[1,r[0],1]):Tl(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Tl(t,[1,1,r[0]]):Tl(t,[1].concat(r))}else if(e<3)return t;throw new a$(`Unsupported input rank by biasAdd: ${t.rank}`)}function pA(e,t,n){return gi((()=>(null==n&&(n="channelsLast"),L$(n),$a(e,dA(e.rank,t,n)))))}function fA(e,t,n,r){return gi((()=>nd(e,t,n,r)))}function mA(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const gA=["fanIn","fanOut","fanAvg"],yA=["normal","uniform","truncatedNormal"];class bA extends Va{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class vA extends bA{apply(e,t){return yc(e,t)}}vA.className="Zeros",Ua(vA);class xA extends bA{apply(e,t){return bc(e,t)}}xA.className="Ones",Ua(xA);class wA extends bA{constructor(e){if(super(),"object"!==typeof e)throw new a$(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new a$(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return gi((()=>Oa(za(this.value),bc(e,t))))}getConfig(){return{value:this.value}}}wA.className="Constant",Ua(wA);class kA extends bA{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Yc(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}kA.className="RandomUniform",Ua(kA);class SA extends bA{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new o$(`randomNormal does not support dType ${t}.`);return lA(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}SA.className="RandomNormal",Ua(SA);class CA extends bA{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new o$(`truncatedNormal does not support dType ${t}.`);return Wh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}CA.className="TruncatedNormal",Ua(CA);class IA extends bA{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return gi((()=>{if(2!==e.length||e[0]!==e[1])throw new a$("Identity matrix initializer can only be used for 2D square matrices.");return Oa(this.gain,Lu(e[0]))}))}getConfig(){return{gain:this.gain}}}IA.className="Identity",Ua(IA);class _A extends bA{constructor(e){if(super(),e.scale<0)throw new a$(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,C$(gA,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){C$(yA,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(L$(r),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===r){const r=K$(e,2);t=e[1]*r,n=e[0]*r}else if("channelsLast"===r){const r=K$(e,0,e.length-2);t=e[e.length-2]*r,n=e[e.length-1]*r}}else{const r=K$(e);t=Math.sqrt(r),n=Math.sqrt(r)}return[t,n]}(e),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new o$(`${this.getClassName()} does not support dType ${t}.`);return Wh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return Yc(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}_A.className="VarianceScaling",Ua(_A);class TA extends _A{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _A.className}}TA.className="GlorotUniform",Ua(TA);class NA extends _A{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _A.className}}NA.className="GlorotNormal",Ua(NA);class EA extends _A{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _A.className}}EA.className="HeNormal",Ua(EA);class $A extends _A{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _A.className}}$A.className="HeUniform",Ua($A);class AA extends _A{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _A.className}}AA.className="LeCunNormal",Ua(AA);class RA extends _A{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _A.className}}RA.className="LeCunUniform",Ua(RA);class OA extends bA{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return gi((()=>{if(e.length<2)throw new o$("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=U(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const i=lA([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),a=gp.qr(i,!1);let o=a[0];const l=a[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=Oa(o,l.sign()),n<r&&(o=o.transpose()),Oa(za(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}OA.className="Orthogonal",Ua(OA);const DA={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function FA(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return x$(e,Wa.getMap().classNameMap,t,"initializer")}function MA(e){return b$(e)}function PA(e){if("string"===typeof e){const t=e in DA?DA[e]:e;if("GlorotNormal"===t)return new NA;if("GlorotUniform"===t)return new TA;if("HeNormal"===t)return new EA;if("HeUniform"===t)return new $A;if("LeCunNormal"===t)return new AA;if("LeCunUniform"===t)return new RA;{const e={};return e.className=t,e.config={},FA(e)}}return e instanceof bA?e:FA(e)}function zA(e){return Array.isArray(e)&&Array.isArray(e[0])}function LA(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function BA(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new a$(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function VA(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new a$(`Expected exactly 1 Shape; got ${e.length}`)}return e}function WA(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const UA="Variable";class GA{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:UA,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=$$(),n=null==n?UA:n,this.originalName=G$(n),this.name=j$(this.originalName),this.trainable_=r,this.constraint=s,this.val=qh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function jA(e){return e.map((e=>e.read()))}function HA(e){e.forEach((e=>{e[0].write(e[1])}))}class qA{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class KA{constructor(e,t,n,r,s,i,a){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=$$(),null!=i&&(this.originalName=G$(i),this.name=j$(this.originalName)),this.rank=t.length}}let XA=0;class YA{constructor(e,t){this.callArgs=t,this.id=XA++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let QA=0;class ZA extends Va{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=QA++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=m$(e)+"_"+R$(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new i$(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new a$(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return p$(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return p$(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new s$(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new s$(`Layer ${this.name} is not connected, no input to return.`);return p$(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new s$(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new s$(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return p$(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=f$(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=f$(this.inputSpec);if(t.length!==n.length)throw new a$(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const e=t[r],s=n[r];if(null==s)continue;const i=e.rank;if(null!=s.ndim&&i!==s.ndim)throw new a$(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new a$(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new a$(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&e.dtype!==s.dtype)throw new a$(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${e.dtype}.`);if(s.axes){const t=e.shape;for(const e in s.axes){const n=Number(e),i=s.axes[e],a=n>=0?t[n]:t[t.length+n];if(null!=i&&-1===[i,null].indexOf(a))throw new a$(`Input ${r} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],i=e.shape[t];if(null!=n&&null!=i&&n!==i)throw new a$(`Input ${r} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${e.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=f$(e),r=function(e){let t=!0;for(const n of f$(e))if(!(n instanceof KA)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of f$(e))if(n instanceof KA){t=!1;break}return t}(e);if(r===s)throw new a$("Arguments to apply() must be all SymbolicTensors or all Tensors");return U$(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of f$(e))t.push(n.shape);this.build(p$(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=f$(r),i=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(r=p$(i),null!=this.activityRegularizer)throw new o$("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=f$(e);const t=[];for(const n of e)t.push(n.shape);return p$(t)}(e),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new KA(i,n,this,f$(e),t,this.name,r))):new KA(i,r,this,f$(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new o$("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new s$(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new s$(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new i$(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return WA(this.weights)}build(e){this.built=!0}getWeights(){return jA(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){gi((()=>{const t=this.weights;if(t.length!==e.length)throw new a$(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=jA(t);for(let s=0;s<r.length;++s){const i=r[s],a=t[s],o=e[s];if(!j(i.shape,o.shape))throw new a$(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}HA(n)}))}addWeight(e,t,n,r,s,i,a,o){if(-1!==this._addedWeightNames.indexOf(e))throw new a$(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():PA("zeros"));const l=r.apply(t,n),u=new GA(l,n,e,i,a);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=f$(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=f$(t),i=f$(r);if(s.length!==i.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let a=0;a<s.length;a++)s[a].kerasMask=i[a]}addInboundNode(e,t,n,r,s,i){let a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const o=f$(e);t=f$(t),n=f$(n),r=f$(r),s=LA(s),i=LA(i);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new YA({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function JA(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=JA(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class eR extends ZA{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:R$("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new a$("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new a$("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new a$("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new KA(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new YA({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new a$(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function tR(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new a$("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new eR({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}eR.className="InputLayer",Ua(eR);class nR{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof nR)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new a$(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ta(t,e.dtype)}catch(Q3){throw new a$(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof KA){if(null==this.id2Value[e.id])throw new a$(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new a$(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof KA){if(null==this.id2Value[e.id])throw new a$(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new a$(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&yi(this.id2Mask)}}const rR=new u$,sR=new u$;function iR(e,t,n,r){const s=null!=n&&n.training,i=Array.isArray(e),a=i?e:[e],o=a.map((e=>e.name)),l=[],u=t.names();for(const f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=rR.get(c);if(null==d){const e=function(e,t){B(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=oR(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of e){const{sorted:e,recipientMap:a}=oR(i,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const t in a)null==r[t]&&(r[t]=new Set),a[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:aR(r)}}(a,t);d=e.sorted,h=e.recipientCounts,rR.put(c,d),sR.put(c,h)}h={},s||Object.assign(h,sR.get(c));const p=new nR(t);for(let f=0;f<d.length;++f){if(null!=r){const e=mi().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=d[f],i=e.sourceLayer;if(i instanceof eR)continue;const a=[],u=[],c=[];let m=!1;for(const n of e.inputs){const e=p.getValue(n),r=p.getMask(n);a.push(e),u.push(r),null!=r&&(m=!0),s||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}m&&((n=n||{}).mask=u[0]);const g=f$(i.apply(a,n));let y=null;i.supportsMasking&&(y=i.computeMask(a,u));const b=lR(e),v=Array.isArray(b)?b:[b];for(let t=0;t<v.length;++t){p.hasKey(v[t])||p.add(v[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(v[t].name);-1!==e&&(l[e]=g[t])}s||yi(c)}return p.disposeMasks(),i?l:l[0]}function aR(e){const t={};for(const n in e)t[n]=e[n].size;return t}function oR(e,t){const n=new Set,r=[],s={};for(const o of t.names())n.add(o);const i=[],a=[];for(i.push(e);i.length>0;){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=a[a.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),r.push(e),n.add(e.name),t&&a.pop();else{a.push(i.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:r,recipientMap:s}}function lR(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function uR(e,t){return gi((()=>Da(Au(Oa(e,e),t,!0))))}ke().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=rR&&rR.setMaxEntries(e),null!=sR&&sR.setMaxEntries(e)}));class cR extends Va{getConfig(){return{}}}class hR extends cR{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return gi((()=>{const t=uR(e,this.axis),n=Hl(t,0,this.maxValue);return Oa(e,Ra(n,$a(J$(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}hR.className="MaxNorm",Ua(hR);class dR extends cR{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return gi((()=>Ra(e,$a(J$(),uR(e,this.axis)))))}getConfig(){return{axis:this.axis}}}dR.className="UnitNorm",Ua(dR);class pR extends cR{apply(e){return th(e)}}pR.className="NonNeg",Ua(pR);class fR extends cR{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return gi((()=>{const t=uR(e,this.axis),n=$a(Oa(this.rate,Hl(t,this.minValue,this.maxValue)),Oa(1-this.rate,t));return Oa(e,Ra(n,$a(J$(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}fR.className="MinMaxNorm",Ua(fR);const mR={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function gR(e){return b$(e)}function yR(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return x$(e,Wa.getMap().classNameMap,t,"constraint")}function bR(e){if(null==e)return null;if("string"===typeof e){return yR({className:e in mR?mR[e]:e,config:{}})}return e instanceof cR?e:yR(e)}async function vR(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const i=e[s];if("number"!==typeof i){const e=i;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];yi(r)}}function xR(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var wR;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(wR||(wR={}));class kR{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class SR{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class CR extends kR{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=gi((()=>$a(this.totals[r],Oa(e,n))));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:gi((()=>{const e=Oa(Ra(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),bi(t[n])})))}}class IR extends kR{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let i=0;i<r.length;++i)if("number"!==typeof r[i]){const a=r[i];e.push(a.data()),t.push(s),n.push(i)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s){this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}}class _R extends kR{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||kp,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");se(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():ds();return function(){const i=null!=n?n():ds();return i-s<t||(s=i,r=e(...arguments)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await vR(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await vR(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await vR(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await vR(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await vR(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):se(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await vR(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await vR(e),await this.trainEnd(e))}}function TR(e,t){if(null==e&&(e={}),e instanceof kR)return[e];if(Array.isArray(e)&&e[0]instanceof kR)return e;return f$(e).map((e=>new _R(e,t)))}class NR{constructor(){}static registerCallbackConstructor(e,t){B(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),NR.checkForDuplicate(t),null==NR.constructors[e]&&(NR.constructors[e]=[]),NR.constructors[e].push(t)}static checkForDuplicate(e){for(const t in NR.constructors){NR.constructors[+t].forEach((t=>{if(t===e)throw new a$("Duplicate callback constructor.")}))}}static clear(){NR.constructors={}}static createCallbacks(e){const t=[];for(const n in NR.constructors){const r=+n;e>=r&&t.push(...NR.constructors[r])}return t.map((e=>new e))}}function ER(e,t,n,r,s,i,a,o,l){const u=new IR,c=[new CR,...NR.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new SR(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function $R(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return x$(e,Wa.getMap().classNameMap,t,"layer",n)}function AR(e,t){return gi((()=>{"float32"!==e.dtype&&(e=Ta(e,"float32"));const n=Au(hA(e),t,!0),r=Ha(n.shape,J$()),s=Da(to(n,r));return Ra(e,s)}))}function RR(e,t){return gi((()=>gc(hA(Xa(t,e)),-1)))}function OR(e,t){return gi((()=>gc(Qa(Xa(t,e)),-1)))}function DR(e,t){return gi((()=>{const n=Xa(e,t),r=Hl(Qa(e),J$(),Number.MAX_VALUE),s=Qa(Ra(n,r));return Oa(100,gc(s,-1))}))}function FR(e,t){return gi((()=>{const n=Hl(t,J$(),Number.MAX_VALUE),r=Ju($a(1,n)),s=Hl(e,J$(),Number.MAX_VALUE),i=Ju($a(1,s));return gc(hA(Xa(r,i)),-1)}))}function MR(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return gi((()=>{if(n)t=xh(t);else{const e=Au(t,t.shape.length-1,!0);t=Ra(t,e)}return t=Hl(t,J$(),1-J$()),tc(Au(Oa(Ta(e,"float32"),Ju(t)),t.shape.length-1))}))}function PR(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return gi((()=>{const r=Ta(Bu(function(e){const t=[K$(e.shape)];return Tl(e,t)}(e)),"int32"),s=(t=Hl(t,J$(),1-J$())).shape;return MR(Tl(Tc(r,s[s.length-1]),s),t,n)}))}function zR(e,t){return gi((()=>{let n;return n=Hl(t,J$(),1-J$()),n=Ju(Ra(n,Xa(1,n))),gc(function(e,t){if(!j(e.shape,t.shape))throw new a$(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return gi((()=>{const n=th(t),r=tc(Qa(t));return $a(Xa(n,Oa(t,e)),ec(Fu(r)))}))}(e,n),-1)}))}function LR(e,t){return gi((()=>{const n=Hl(e,J$(),1),r=Hl(t,J$(),1);return Au(Oa(e,Ju(Ra(n,r))),-1)}))}function BR(e,t){return gi((()=>{const n=AR(e,-1),r=AR(t,-1),s=Oa(n,r);return tc(Au(s,-1))}))}NR.constructors={};const VR={meanSquaredError:RR,meanAbsoluteError:OR,meanAbsolutePercentageError:DR,meanSquaredLogarithmicError:FR,squaredHinge:function(e,t){return gi((()=>{const n=to(0,Xa(1,Oa(e,t)));return gc(hA(n),-1)}))},hinge:function(e,t){return gi((()=>{const n=to(0,Xa(1,Oa(e,t)));return gc(n,-1)}))},categoricalHinge:function(e,t){return gi((()=>{const n=Au(Oa(e,t),-1),r=Eu(Oa(Xa(1,e),t),-1);return to(0,$a(1,Xa(r,n)))}))},logcosh:function(e,t){return gi((()=>{const n=Math.log(2),r=Xa(t,e),s=Xa($a(r,nc(Oa(-2,r))),n);return gc(s,-1)}))},categoricalCrossentropy:MR,sparseCategoricalCrossentropy:PR,binaryCrossentropy:zR,kullbackLeiblerDivergence:LR,poisson:function(e,t){return gi((()=>{const n=Ju($a(J$(),t));return gc(Xa(t,Oa(e,n)),-1)}))},cosineProximity:BR};function WR(e){if("string"===typeof e){if(e in VR)return VR[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new a$(t)}return e}function UR(e,t){return gi((()=>{const n=Oa(.5,Nc(t)),r=eA(Wu(t,n),e.dtype);return gc(pu(e,r),-1)}))}function GR(e,t){return gi((()=>eA(pu(il(e,-1),il(t,-1)),"float32")))}function jR(e,t){return gi((()=>Ta(Au(ac(pu(e,1),pu(t,1))),"float32")))}function HR(e,t){return zR(e,t)}function qR(e,t){return e.rank===t.rank&&(e=Th(e,[e.rank-1])),(t=il(t,-1)).dtype!==e.dtype&&(t=Ta(t,e.dtype)),Ta(pu(e,t),"float32")}const KR=MR,XR=PR,YR={binaryAccuracy:UR,categoricalAccuracy:GR,precision:function(e,t){return gi((()=>{const n=jR(e,t),r=function(e,t){return gi((()=>Ta(Au(ac(pu(e,0),pu(t,1))),"float32")))}(e,t),s=$a(n,r);return Ta(fu(Wu(s,0),Ra(n,s),0),"float32")}))},categoricalCrossentropy:KR,sparseCategoricalCrossentropy:XR,mse:RR,MSE:RR,mae:OR,MAE:OR,mape:DR,MAPE:DR,cosine:BR};function QR(e){if("string"===typeof e&&e in YR)return YR[e];if("string"!==typeof e&&null!=e)return e;throw new a$(`Unknown metric ${e}`)}function ZR(e){if(h$(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(VR))if(VR[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(YR))if(YR[n]===e){t=n;break}return void 0!==t?t:e.name}}const JR=1048576;function eO(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!tO(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>JR&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function tO(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!tO(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!tO(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function nO(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const s=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(const t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),rO(i,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)s?sO(o[c],n,r):iO(o[c],n,a,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;t=null!=e.collectedTrainableWeights?WA(e.collectedTrainableWeights):WA(e.trainableWeights);return t}(e),u=WA(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function rO(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function sO(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(Q3){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(Q3){r="multiple"}rO([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function iO(e,t,n,r){let s,i;try{i=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(Q3){i="multiple"}try{s=JSON.stringify(e.outputShape)}catch(Q3){s="multiple"}const a=[];for(const c of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(c)))for(let e=0;e<c.inboundLayers.length;++e){const t=c.inboundLayers[e].name,n=c.nodeIndices[e],r=c.tensorIndices[e];a.push(`${t}[${n}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===a.length?"":a[0];rO([`${o} (${l})`,i,s,e.countParams().toString(),u],t,r);for(let c=1;c<a.length;++c)rO(["","","","",a[c]],t,r)}function aO(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function oO(e,t){if(null===e)return null;if("string"===typeof e)return g$(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];aO(t,s,r)?n.push(r):n.push(oO(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"===typeof r)t[n]=r;else{const e=g$(n);t[e]=oO(r,e)}}return t}}function lO(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return m$(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];aO(t,s,r)?n.push(r):n.push(lO(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],s=m$(n);t[s]="name"!==n&&"className"!==n||"string"!==typeof r?lO(r,n):r}return t}}const uO="4.22.0";class cO extends ZA{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=R$(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],k$(this.inputs).length!==this.inputs.length)throw new a$(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);k$(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;h$(0===t,"input layer has >1 nodes"),h$(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof eR))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},i={},a=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new i$(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(cO.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let i=0;i<c;i++){const e=u.inputTensors[i],r=u.inboundLayers[i],s=u.nodeIndices[i],a=u.tensorIndices[i];o(e,t,n,r,s,a)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const y of this.outputs)o(y,l,u);const c=a.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const i=null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id];e=Math.max(e,i),r[y.outboundLayer.id]=e,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const s=y.inboundLayers[r],i=y.nodeIndices[r],a=s.inboundNodes[i],o=null==t[a.id]?0:t[a.id];t[a.id]=Math.max(e+1,o),n[a.id]=a}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in r){const e=r[y];e in d||(d[e]=[]),d[e].push(s[y])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(w$);this.layers=[];for(const y of p){const e=d[y];e.sort(((e,t)=>{const n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof cO&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(w$);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new i$(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new i$(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new YA({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new a$("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const a of this.layers)for(const[e,t]of a.weights.entries()){const i=s?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[i])throw new a$(`Duplicate weight name: ${i}`);n[i]=t,r++}const i=[];for(const a in e){let r=a;if(null==n[a]){const e=a.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])i.push([n[r],e[a]]);else if(t)throw new a$(`Provided weight data has no target variable: ${a}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new a$(`${e.length} of ${r} weights are not set: ${e}`)}HA(i)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${uO}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=lO(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return gi((()=>{e=f$(e);const n=new nR;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return iR(this.outputs,n,t)}))}computeMask(e,t){return gi((()=>{let n;return e=f$(e),n=null==t?c$(null,e.length):f$(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=LA(e);if(t.length!==this.inputLayers.length)throw new a$(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<t.length;a++){const e=this.inputLayers[a],r=t[a];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(w$);if(r.length>1)for(const a of r){const e=this.nodesByDepth[a];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const r=[];for(let a=0;a<t.inboundLayers.length;a++){const e=t.inboundLayers[a],s=t.nodeIndices[a],i=t.tensorIndices[a],o=n[`${e.name}_${s}_${i}`];r.push(o)}const s=LA(e.computeOutputShape(p$(r))),i=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){n[`${e.name}_${i}_${t}`]=s[t]}}}const s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],t=this.outputLayersNodeIndices[a],n=this.outputLayersTensorIndices[a],r=`${e.name}_${t}_${n}`;i.push(r)}for(let a=0;a<i.length;a++){const e=i[a];h$(e in n),s.push(n[e])}return p$(s)}runInternalGraph(e,t){null==t&&(t=c$(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],s=e[o],i=t[o];n[r.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(w$);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,i=new Array;for(const t of r)t.id in n&&i.push(n[t.id]);if(i.length===r.length){let r,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),o=f$(e.call(t,u)),l=f$(e.computeMask(t,n)),r=[t],a=[n]}else r=i.map((e=>e[0])),a=i.map((e=>e[1])),null==u.mask&&(u.mask=a),o=f$(e.call(r,u)),l=f$(e.computeMask(r,a));if(e.activityRegularizer)throw new o$("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],i=l[e];n[t.id]=[r,i]}}}}const s=[],i=[],a=[];for(const o of this.outputs){h$(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];a.push(e.shape),s.push(e),i.push(t)}return[s,i,a]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof cO?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=cO.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new a$("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new a$(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new a$(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return gi((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=cO.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const e=i.getClassName(),r=i.getConfig(),s=[];for(let n=0;n<i.inboundNodes.length;n++){const e=i.inboundNodes[n],r=cO.nodeKey(i,n);let a={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),a=e.callArgs}catch(Q3){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=e.tensorIndices[r];let l=t[cO.nodeKey(s,i)];null==l&&(l=0),n.push([s.name,l,o,a])}s.push(n)}}}const a={};a.name=i.name,a.className=e,a.config=r,a.inboundNodes=s,n.push(a)}e.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],s=cO.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let a=t[s];null!==a&&void 0!==a||(a=0);const o=this.inputLayersTensorIndices[i];r.push([e.name,a,o])}e.inputLayers=r;const s=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=cO.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let a=t[r];null!==a&&void 0!==a||(a=0);const o=this.outputLayersTensorIndices[i];s.push([e.name,a,o])}return e.outputLayers=s,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function a(e,t){const n=[];let s;for(const a of t){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(p$(n),s)}function o(e){const s=e.name,a=$R(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(n),r[s]=a;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new a$(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const l=t.name,u=t.layers;for(const f of u)o(f);for(;!S$(s);)for(const e of u){const t=r[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)a(t,n)}}const c=[],h=[],d=t.inputLayers;for(const f of d){const e=f[0],t=f[1],n=f[2];h$(e in r);const s=r[e].inboundNodes[t].outputTensors;c.push(s[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];h$(e in r);const s=r[e].inboundNodes[t].outputTensors;h.push(s[n])}return new e({inputs:c,outputs:h,name:l})}get stateful(){if(this._stateful)throw new a$("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){gi((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function hO(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function dO(e,t){return hO(e,t,"classWeight")}async function pO(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=gi((()=>{if(1===e.shape.length)return Na(e);if(2===e.shape.length){if(e.shape[1]>1){return il(e,1)}if(1===e.shape[1])return Tl(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());yi(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Rh(s,"float32")}return null}function fO(e,t){return Oa(e,t)}function mO(e,t){let n,r;const s=t;n=s.xs,r=s.ys,B(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=gO("input",e.inputNames,n),a=gO("output",e.outputNames,r),o=i[0].shape[0];B(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),B(a.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<i.length;l++)B(i[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<a.length;l++)B(a[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:a}}function gO(e,t,n){if(n instanceof Es)return[n];if(Array.isArray(n))return B(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new a$(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function yO(e,t,n){const r=null!=n.batchesPerEpoch;if(B(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),B(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),B(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),B(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),B(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(bO(n.validationData))B(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new o$("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,a=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=TR(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=ER(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,s,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=mO(e,t.value),i={};i.batch=h,i.size=r[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const t=dO(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)a.push(await pO(s[e],null,t[e]))}const u=r.concat(s).concat(a),p=o(u);yi(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];i[t]=n,bi(n)}await d.onBatchEnd(h,i),xR(i),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=bO(n.validationData)?f$(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):f$(e.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function bO(e){return"function"===typeof e.iterator}function vO(e){B(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function xO(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>nA(e,t,n-t))):nA(e,t,n-t)}function wO(e,t){return gi((()=>null==e?null:Array.isArray(e)?e.map((e=>wO(e,t))):cA(e,"int32"===t.dtype?t:Ta(t,"int32"))))}function kO(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function SO(e){const t=[];e instanceof Es&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(tA(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function CO(e,t){if(null==e)return;const n=[];if(t instanceof Es)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const s in t){const e=t[s];n.push(e.id)}const r=[];if(e instanceof Es)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function IO(e){return Array.isArray(e)}function _O(e){return!function(e){return e instanceof Es}(e)&&!IO(e)}function TO(e,t,n){let r,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(IO(e)&&e.length>0)t=!0;else if(_O(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new a$(`Error when checking model ${i} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(_O(e)){r=[];for(const n of t){if(null==e[n])throw new a$(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(IO(e)){if(e.length!==t.length)throw new a$(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(t.length>1)throw new a$(`The model ${i} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=SO(r),null!=n)for(let a=0;a<t.length;++a){if(null==n[a])continue;const e=r[a];if(e.shape.length!==n[a].length)throw new a$(`Error when checking ${i}: expected ${t[a]} to have ${n[a].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[a].length;++t){if(0===t&&!s)continue;const r=e.shape[t],o=n[a][t];if(null!=o&&o>=0&&r!==o)throw new a$(`${i} expected a batch of elements where each example has shape [${n[a].slice(1,n[a].length)}] (i.e.,tensor shape [*,${n[a].slice(1,n[a].length)}]) but the ${i} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return r}function NO(e,t,n){let r,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new a$(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new a$(`The model expects ${t.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let a=0;a<t.length;++a){if(null==n[a])continue;const e=r[a];if(e.shape.length!==n[a].length)throw new a$(`Error when checking ${i}: expected ${t[a]} to have ${n[a].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let r=0;r<n[a].length;++r){if(0===r&&!s)continue;const o=e.shape[r],l=n[a][r];if(null!=l&&l!==o)throw new a$(`Error when checking ${i}: expected ${t[a]} to have shape ${JSON.stringify(n[a])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class EO extends cO{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new a$("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");nO(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>xp.adagrad(.01),Adadelta:()=>xp.adadelta(1,.95,J$()),Adam:()=>xp.adam(.001,.9,.999,J$()),Adamax:()=>xp.adamax(.002,.9,.999,J$(),0),RMSProp:()=>xp.rmsprop(.001,.9,0,J$()),SGD:()=>xp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new a$(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ga))throw new a$("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new a$(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>WR(e)))}else{const n=WR(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new a$(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(WR(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const e=this.internalOutputShapes[i],t=this.outputNames[i];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],U$("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};U$("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,i;for(const a of t){if("string"===typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===zR?-1!==["accuracy","acc"].indexOf(a)?r=UR:-1!==["crossentropy","ce"].indexOf(a)&&(r=HR):this.lossFunctions[e]===PR?-1!==["accuracy","acc"].indexOf(a)?r=qR:-1!==["crossentropy","ce"].indexOf(a)&&(r=XR):-1!==["accuracy","acc"].indexOf(a)?r=GR:-1!==["crossentropy","ce"].indexOf(a)&&(r=KR),-1!==["accuracy","acc"].indexOf(a)?s="acc":-1!==["crossentropy","ce"].indexOf(a)&&(s="ce"),i=r,n=""+s}else{const e=QR(a);i=e,n=""+ZR(a)}let t;U$(n,(()=>{t=i})),s(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=null==n.batchSize?32:n.batchSize;vO(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return p$(this.testLoop(t,e,r,n.verbose,n.steps))}finally{CO(s[0],e),CO(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let i=[];if(n.verbose>0)throw new o$("Verbose mode is not implemented yet.");B(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"===typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await a.next();if(i=gi((()=>{if(t.value){const{xs:n,ys:r}=mO(e,t.value),a=n.concat(r),u=gi((()=>s(a)));if(yi(a),0===l)for(let e=0;e<u.length;++e)i.push(za(0));const c=a[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=i[e];i[e]=gi((()=>$a(i[e],Oa(c,t)))),l>0&&yi(n)}yi(u),o+=c,++l}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<i.length;++u){const e=i[u];i[u]=Ra(i[u],o),yi(e)}return p$(i)}(this,e,t)}checkNumSamples(e,t,n){let r,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=t)throw new a$(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new a$(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new a$("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),i=new nR;if(e instanceof Es&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new a$(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new a$(`No value is provided for the model's input ${o.name}`);i.add(o,t)}const a=iR(s,i);return n?a:a[0]}retrieveSymbolicTensors(e){const t=c$(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((e=>e.name));for(let r=0;r<e.length;++r){const a=i.indexOf(e[r]);if(-1!==a&&(t[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new a$(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return gi((()=>{const r=this.checkNumSamples(e);if(n)throw new o$("Verbose predictLoop() is not implemented yet.");const s=kO(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){gi((()=>{const n=s[t][0],r=s[t][1],i=xO(e,n,r),a=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)a.push({key:this.inputs[e],value:i[e]});else a.push({key:this.inputs[0],value:i});const o=new nR(a);return iR(this.outputs,o)})).forEach(((e,t)=>i[t].push(e)))}return p$(i.map((e=>$l(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=SO(e);NO(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return vO(e),this.predictLoop(n,e)}finally{CO(n,e)}}predictOnBatch(e){NO(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new i$("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let s=0;s<this.feedOutputShapes.length;++s){const e=this.feedOutputShapes[s];this.feedLossFns[s]===PR?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(e,t){const n=k$(e.map((e=>e.shape[0])));n.sort();const r=k$(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new a$(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new a$(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!j(n,r))throw new a$(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=TO(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=TO(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const r=[RR,zR,MR];for(let s=0;s<e.length;++s){const i=e[s],a=t[s],o=n[s];if(null!=a){if(a===MR&&1===i.shape[i.shape.length-1])throw new a$(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new a$(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new a$(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r){let s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],i=arguments.length>5?arguments[5]:void 0;const[a,o]=this.standardizeUserDataXY(e,t,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=dO(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await pO(o[t],null,e[t]))}return[a,o,l]}testLoop(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4?arguments[4]:void 0;return gi((()=>{const i=this.checkNumSamples(t,n,s,"steps"),a=[];if(r>0)throw new o$("Verbose mode is not implemented yet.");if(null!=s)throw new o$("steps mode in testLoop() is not implemented yet");{const r=kO(i,n),s=Rh(Q$(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],l=nA(s,i,o-i),u=wO(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)a.push(za(0));for(let e=0;e<c.length;++e){const t=c[e];a[e]=$a(a[e],Oa(o-i,t))}}for(let e=0;e<a.length;++e)a[e]=Ra(a[e],i)}return a}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if(d$(e,r)>1){s+=`_${d$(e.slice(0,n),r)}`}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const a=new nR(e),o=iR(this.outputs,a,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],o[n]);null!=s[n]&&(e=fO(e,s[n]));const i=gc(e);t.push(i),l=0===n?e:$a(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],s=this.metricsTensors[n][1];e=gc(t(r[s],o[s]))}bi(e),i.push(e)}return l=gc(l),this.calculateLosses().forEach((e=>{l=$a(l,e)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=e=>gi((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const a=new nR(i),o=iR(this.outputs,a);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=gc(r(s[e],o[e]));n=0===e?i:$a(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=gc(n(s[r],o[r]));t.push(i)}return t}))}async fit(e,t){let n,r,s,i,a,o,l,u,c,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const d=null==h.batchSize?32:h.batchSize;vO(d);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,d);n=f[0],r=f[1],c=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new o$("validationData including sample weights is not supported yet."):new a$(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${h.validationData} is invalid.`);a=h.validationData[0],o=h.validationData[1];const e=!0,t=await this.standardizeUserData(a,o,null,null,e,d);l=t[0],u=t[1],m=l.concat(u)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];l=xO(n,e,t),s=n,n=xO(n,0,e),u=xO(r,e,t),i=r,r=xO(r,0,e),m=l.concat(u)}else null!=h.validationSteps&&(g=!0);const y=n.concat(r).concat(c);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=v.slice().concat(v.map((e=>"val_"+e)))):(x=null,m=[],w=v.slice());const k=TR(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,v,d,h.epochs,h.verbose,k,x,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,CO(n,e),CO(r,t),CO(s,e),CO(i,t),CO(l,a),CO(u,o),null!=c&&yi(c)}}async fitLoop(e,t,n,r,s,i,a,o,l,u,c,h,d,p){null==r&&(r=32),null==s&&(s=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=p&&(f=!0,null==d))throw new a$("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,d,"steps_per_epoch");let g;null!=m&&(g=Q$(0,m)),null==i&&(i=1);const{callbackList:y,history:b}=ER(a,i,s,h,m,d,r,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let v=h;v<s;++v){await y.onEpochBegin(v);const s={};if(null!=d)throw new o$("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new o$("batch shuffling is not implemneted yet");u&&F(g);const i=Rh(g),a=kO(m,r);for(let u=0;u<a.length;++u){const c={};if(await y.onBatchBegin(u,c),gi((()=>{const h=a[u][0],d=a[u][1],p=nA(i,h,d-h);c.batch=u,c.size=d-h;const m=wO(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,bi(r)}if(u===a.length-1&&f){const e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){const r=n[t],i=e[t];bi(i),s["val_"+r]=i}}})),await y.onBatchEnd(u,c),xR(c),this.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(v,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return yO(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),a=[];for(const o of i){const e=await o.data();a.push(e[0])}return yi(i),CO(n[0],e),CO(n[1],t),p$(a)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let i=0;i<r.length;++i)n&&!r[i].trainable||t.push({name:r[i].originalName,tensor:s[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=mi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-mi().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=m$(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>m$(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=m$(n[r])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[m$(ZR(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>m$(ZR(e))));{const e={};for(const t in this.metrics)e[t]=m$(ZR(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=$R(oO(e.optimizer_config));let n,r;if("string"===typeof e.loss)n=g$(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>g$(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=g$(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>g$(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=g$(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"===typeof e){const t=ji(e);if(0===t.length)throw new a$(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new a$(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new a$("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ii(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${uO}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await Ii(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=Fi([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;eO(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){eO(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}EO.className="Model",Ua(EO);class $O extends EO{}async function AO(e,t){if(null==t&&(t={}),"string"===typeof e){const n=Hi(e,t);if(0===n.length)n.push(xo(e,t));else if(n.length>1)throw new a$(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new a$("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const i=null==n.strict||n.strict,a=null!=r.weightData&&null!=r.weightSpecs&&i,o=$R(oO(s),t,a),l=r.trainingConfig;null!=l&&o.loadTrainingConfig(l);null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata);if(null!=r.weightData){if(null==r.weightSpecs)throw new a$("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=_i(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,i),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),yi(e),yi(t.map((e=>e.tensor)))}return o}(e,void 0,t)}$O.className="Functional",Ua($O);class RO extends EO{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:R$("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new a$(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof RO||e instanceof EO;let n;if(t){if(n=e,1!==n.outputs.length)throw new a$("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new a$("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new a$("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=tR({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new a$(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new a$("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=JA(this.outputs[0])}this.inboundNodes=[],new YA({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:c$(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(VA(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new EO({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new i$("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new i$("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new i$("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new i$("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new a$("Legacy serialization format not supported yet.");n=t}else B(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof RO))throw new o$(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const a of n){const e=$R(a,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new a$("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new a$("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function OO(e){return new RO(e)}RO.className="Sequential",Ua(RO);class DO extends Va{getConfig(){return{}}}class FO extends DO{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new o$(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return bu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}FO.className="elu",Ua(FO);class MO extends DO{apply(e){return ch(e)}}MO.className="selu",Ua(MO);class PO extends DO{apply(e){return th(e)}}PO.className="relu",Ua(PO);class zO extends DO{apply(e){return gi((()=>xc(6,th(e))))}}zO.className="relu6",Ua(zO);class LO extends DO{apply(e){return e}}LO.className="linear",Ua(LO);class BO extends DO{apply(e){return Rl(e)}}BO.className="sigmoid",Ua(BO);class VO extends DO{apply(e){return function(e){return gi((()=>{const t=$a(.5,Oa(.2,e));return Hl(t,0,1)}))}(e)}}VO.className="hardSigmoid",Ua(VO);class WO extends DO{apply(e){return nc(e)}}WO.className="softplus",Ua(WO);class UO extends DO{apply(e){return function(e){return gi((()=>Ra(e,$a(Qa(e),1))))}(e)}}UO.className="softsign",Ua(UO);class GO extends DO{apply(e){return Dl(e)}}GO.className="tanh",Ua(GO);class jO extends DO{apply(e){return xh(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}jO.className="softmax",Ua(jO);class HO extends DO{apply(e){return sc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}HO.className="logSoftmax",Ua(HO);class qO extends DO{apply(e){return gi((()=>gi((()=>{const t=Math.sqrt(2),n=Oa(.5,$a(1,xu(Ra(e,t))));return Oa(e,n)}))))}}qO.className="gelu",Ua(qO);class KO extends DO{apply(e){return gi((()=>Oa(.5,Oa(e,$a(1,Dl(Oa(Da(Ra(2,Math.PI)),$a(e,Oa(.044715,Ka(e,3))))))))))}}KO.className="gelu_new",Ua(KO);class XO extends DO{apply(e){return gi((()=>Oa(e,Dl(nc(e)))))}}XO.className="mish",Ua(XO);class YO extends DO{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return gi((()=>Oa(Rl(Oa(e,t)),e)))}}function QO(e){return e.getClassName()}function ZO(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return x$(e,Wa.getMap().classNameMap,t,"activation")}function JO(e){if(null==e){const e={className:"linear",config:{}};return ZO(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},ZO(t)}return e instanceof DO?e:ZO(e)}function eD(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}YO.className="swish",Ua(YO);class tD extends Va{}class nD extends tD{constructor(e){super(),eD(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return gi((()=>{let t=yc([1]);return this.hasL1&&(t=$a(t,Au(Oa(this.l1,Qa(e))))),this.hasL2&&(t=$a(t,Au(Oa(this.l2,hA(e))))),Tl(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}nD.className="L1L2",Ua(nD);const rD={l1l2:"L1L2"};function sD(e){return b$(e)}function iD(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return x$(e,Wa.getMap().classNameMap,t,"regularizer")}function aD(e){if(null==e)return null;if("string"===typeof e){return iD({className:e in rD?rD[e]:e,config:{}})}return e instanceof tD?e:iD(e)}class oD extends ZA{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=BA(e);let n=th(e);return null!=this.maxValue&&(n=Hl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}oD.className="ReLU",Ua(oD);class lD extends ZA{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=BA(e);return Ku(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}lD.className="LeakyReLU",Ua(lD);class uD extends ZA{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=PA(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=aD(e.alphaRegularizer),this.alphaConstraint=bR(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new a$(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=VA(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new qA({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=BA(e),Pc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:MA(this.alphaInitializer),alphaRegularizer:sD(this.alphaRegularizer),alphaConstraint:gR(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}uD.className="PReLU",Ua(uD);class cD extends ZA{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new o$(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=BA(e);return bu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}cD.className="ELU",Ua(cD);class hD extends ZA{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=BA(e);return Oa(n,Ta(Wu(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}hD.className="ThresholdedReLU",Ua(hD);class dD extends ZA{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new jO).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return gi((()=>{let n=BA(e);const r=t.mask;if(null!=r){const e=Oa(Xa(bc(n.shape),Ta(r,n.dtype)),za(-1e9));n=$a(n,e)}return this.axis instanceof Array?this.axis.length>1?Fu(Xa(n,ic(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function pD(e,t,n){if("number"===typeof e)return c$(e,t);if(e.length!==t)throw new a$(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const i=e[s];if((r=i)!==parseInt(r.toString(),10))throw new a$(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${i}`)}return e;var r}function fD(e,t,n,r){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((s+r-1)/r)}function mD(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Y$([n-t,0]);else{if("same"!==r)throw new a$(`Unsupport padding mode: ${r}.`);e*=t}return e}function gD(e,t){return gi((()=>(L$(t),"channelsFirst"===t?Qh(e,[0,2,3,1]):e)))}function yD(e,t){return gi((()=>(L$(t),"channelsFirst"===t?Qh(e,[0,2,3,4,1]):e)))}function bD(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",i=arguments.length>5?arguments[5]:void 0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return gi((()=>{if(null==i&&(i="channelsLast"),L$(i),3!==e.shape.length)throw new a$(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new a$(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new a$(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===i&&(e=Qh(e,[0,2,1])),"causal"===s)throw new o$("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Zl(e,t,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=pA(o,n)),o}))}function vD(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",i=arguments.length>5?arguments[5]:void 0,a=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return gi((()=>{if(null==i&&(i="channelsLast"),L$(i),3!==e.rank&&4!==e.rank)throw new a$(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new a$(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=gD(e,i);if("causal"===s)throw new o$("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=hd({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=Qh(l,[0,3,1,2])),l}))}function xD(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",i=arguments.length>5?arguments[5]:void 0,a=arguments.length>6?arguments[6]:void 0;return gi((()=>{if(null==i&&(i="channelsLast"),L$(i),4!==e.rank&&5!==e.rank)throw new a$(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new a$(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=yD(e,i);if("causal"===s)throw new o$("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=tu(o,t,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=pA(o,n)),"channelsFirst"===i&&(o=Qh(o,[0,4,1,2,3])),o}))}dD.className="Softmax",Ua(dD);class wD extends ZA{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",wD.verifyArgs(t),this.rank=e,_$(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new o$(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=pD(t.kernelSize,e,"kernelSize"),this.strides=pD(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,B$(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,L$(this.dataFormat),this.activation=JO(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=PA(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=bR(t.biasConstraint),this.biasRegularizer=aD(t.biasRegularizer),this.activityRegularizer=aD(t.activityRegularizer),this.dilationRate=pD(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new a$(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new a$(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new a$(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(h$("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!I$(e.kernelSize,"number",1,3))throw new a$(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:QO(this.activation),useBias:this.useBias,biasInitializer:MA(this.biasInitializer),biasRegularizer:sD(this.biasRegularizer),activityRegularizer:sD(this.activityRegularizer),biasConstraint:gR(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class kD extends wD{constructor(e,t){super(e,t),this.kernel=null,kD.verifyArgs(t),this.filters=t.filters,_$(this.filters,"filters"),this.kernelInitializer=PA(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=bR(t.kernelConstraint),this.kernelRegularizer=aD(t.kernelRegularizer)}build(e){e=VA(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new a$(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return gi((()=>{let t;e=BA(e);const n=null==this.bias?null:this.bias.read(),r=N$(this.activation.getClassName());if(null!=r&&2===this.rank)t=vD(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=bD(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=vD(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new o$("convolutions greater than 3D are not implemented yet.");t=xD(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=VA(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=fD(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:MA(this.kernelInitializer),kernelRegularizer:sD(this.kernelRegularizer),kernelConstraint:gR(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new a$(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class SD extends kD{constructor(e){super(2,e),SD.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!I$(e.kernelSize,"number",1,2))throw new a$(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}SD.className="Conv2D",Ua(SD);class CD extends kD{constructor(e){super(3,e),CD.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new a$(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}CD.className="Conv3D",Ua(CD);class ID extends SD{constructor(e){if(super(e),this.inputSpec=[new qA({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new a$(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=VA(e)).length)throw new a$("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new a$("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new qA({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return gi((()=>{let t=BA(e);if(4!==t.shape.length)throw new a$(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const a=n[s],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,mD(a,c,l,this.padding),mD(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Qh(t,[0,2,3,1]));let p=eu(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Qh(p,[0,3,1,2])),null!=this.bias&&(p=pA(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=VA(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=mD(t[r],o,i,this.padding),t[s]=mD(t[s],l,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ID.className="Conv2DTranspose",Ua(ID);class _D extends CD{constructor(e){if(super(e),this.inputSpec=[new qA({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new a$(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=VA(e)).length)throw new a$("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new a$("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new qA({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return gi((()=>{let t=BA(e);if(5!==t.shape.length)throw new a$(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i,a;"channelsFirst"===this.dataFormat?(a=2,s=3,i=4):(a=1,s=2,i=3);const o=n[a],l=n[s],u=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,mD(o,p,c,this.padding),mD(l,f,h,this.padding),mD(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Qh(t,[0,2,3,4,1]));let y=ru(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Qh(y,[0,4,1,2,3])),null!==this.bias&&(y=pA(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=VA(e)).slice();let n,r,s,i;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,i=4):(n=4,r=1,s=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=mD(t[r],u,a,this.padding),t[s]=mD(t[s],c,o,this.padding),t[i]=mD(t[i],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}_D.className="Conv3DTranspose",Ua(_D);class TD extends kD{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new a$("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new a$("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new a$(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=PA(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=aD(t.depthwiseRegularizer),this.depthwiseConstraint=bR(t.depthwiseConstraint),this.pointwiseInitializer=PA(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=aD(t.pointwiseRegularizer),this.pointwiseConstraint=bR(t.pointwiseConstraint)}build(e){if((e=VA(e)).length<this.rank+2)throw new a$(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new a$(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new qA({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return gi((()=>{let t;if(e=BA(e),1===this.rank)throw new o$("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Qh(e,[0,2,3,1])),t=hh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=pA(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Qh(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=MA(this.depthwiseInitializer),e.pointwiseInitializer=MA(this.pointwiseInitializer),e.depthwiseRegularizer=sD(this.depthwiseRegularizer),e.pointwiseRegularizer=sD(this.pointwiseRegularizer),e.depthwiseConstraint=gR(this.depthwiseConstraint),e.pointwiseConstraint=gR(this.pointwiseConstraint),e}}TD.className="SeparableConv";class ND extends TD{constructor(e){super(2,e)}}ND.className="SeparableConv2D",Ua(ND);class ED extends kD{constructor(e){super(1,e),ED.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!I$(e.kernelSize,"number",1,1))throw new a$(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}ED.className="Conv1D",Ua(ED);class $D extends ZA{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return gi((()=>{if(e=BA(e),"channelsLast"===this.dataFormat){const t=sA(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return sA(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=sA(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return sA(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}$D.className="Cropping2D",Ua($D);class AD extends ZA{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,L$(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,C$(D$,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return gi((()=>{let t=BA(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Qh(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?mp.resizeNearestNeighbor(t,[e,r]):mp.resizeBilinear(t,[e,r]);return Qh(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?mp.resizeNearestNeighbor(t,[e,r]):mp.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}AD.className="UpSampling2D",Ua(AD);class RD extends wD{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=PA(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=bR(e.depthwiseConstraint),this.depthwiseRegularizer=aD(e.depthwiseRegularizer)}build(e){if((e=VA(e)).length<4)throw new a$(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new a$(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return gi((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",s=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0;return gi((()=>{null==s&&(s="channelsLast"),L$(s);let a=gD(e,s);if(4!==e.rank)throw new a$(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new a$(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=cu(a,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=Qh(a,[0,3,1,2])),a}))}(e=BA(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=pA(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=VA(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=fD(t,this.kernelSize[0],this.padding,this.strides[0]),i=fD(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,i]:[e[0],s,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=MA(this.depthwiseInitializer),e.depthwiseRegularizer=sD(this.depthwiseRegularizer),e.depthwiseConstraint=gR(this.depthwiseRegularizer),e}}function OD(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new a$("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function DD(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0,a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return gi((()=>{const l=t.shape.length;if(l<3)throw new a$(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Q$(2,l));if(t=Qh(t,u),null!=i)throw new o$("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&(s=Ta(Ta(s,"bool"),"float32"),s.rank===l-1&&(s=Mu(s,-1)),s=Qh(s,u)),r&&(t=rh(t,0),null!=s&&(s=rh(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=jh(t);let m,g;null!=s&&(m=jh(s));for(let t=0;t<p;++t){const n=f[t],r=gi((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=gi((()=>{const e=m[t],n=Xa(Nc(e),e);return{output:$a(Oa(r[0],e),Oa(d[0],n)),newStates:d.map(((t,s)=>$a(Oa(r[1][s],e),Oa(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){g=Nh(c,1)}return[h,g,d]}))}RD.className="DepthwiseConv2D",Ua(RD);class FD extends ZA{constructor(e){let t;if(super(e),null==e.cell)throw new a$("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new UD({cells:e.cell}):e.cell,null==t.stateSize)throw new a$("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new qA({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Q$(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){zA(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return gi((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new o$("Constants support is not implemented in RNN yet.");zA(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new qA({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!j(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new a$(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new qA({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];gi((()=>{if(!this.stateful)throw new s$("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new a$("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>yc([n,e]))):this.states_=[yc([n,this.cell.stateSize])];else if(null==e)yi(this.states_),null!=this.keptStates&&(yi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>yc([n,e]))):this.states_[0]=yc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new a$(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):yi(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,s];if(!j(r.shape,i))throw new a$(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>bi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=OD(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new qA({shape:e.shape}));a=a.concat(this.stateSpec)}null!=r&&(t.constants=r,i=i.concat(r),this.numConstants=r.length);if(i[0]instanceof KA){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return gi((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=BA(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new a$(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=DD(((e,t)=>{const n=this.cell.call([e].concat(t),a);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return gi((()=>{let t=yc(e.shape);return t=Au(t,[1,2]),t=tA(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?oA(t,[1,e]):t)):this.cell.stateSize>1?[oA(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===FD.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=$R(t.cell,n);return new e(Object.assign(t,{cell:r}))}}FD.className="RNN",Ua(FD);class MD extends ZA{}class PD extends MD{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,_$(this.units,"units"),this.activation=JO(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=PA(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=PA(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=PA(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=aD(e.kernelRegularizer),this.recurrentRegularizer=aD(e.recurrentRegularizer),this.biasRegularizer=aD(e.biasRegularizer),this.kernelConstraint=bR(e.kernelConstraint),this.recurrentConstraint=bR(e.recurrentConstraint),this.biasConstraint=bR(e.biasConstraint),this.dropout=X$([1,Y$([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=X$([1,Y$([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=VA(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return gi((()=>{if(2!==e.length)throw new a$(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=GD({ones:()=>Nc(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=GD({ones:()=>Nc(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=uA(null!=i?Oa(e,i):e,this.kernel.read()),null!=this.bias&&(s=pA(s,this.bias.read())),null!=a&&(n=Oa(n,a));let o=$a(s,uA(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:QO(this.activation),useBias:this.useBias,kernelInitializer:MA(this.kernelInitializer),recurrentInitializer:MA(this.recurrentInitializer),biasInitializer:MA(this.biasInitializer),kernelRegularizer:sD(this.kernelRegularizer),recurrentRegularizer:sD(this.recurrentRegularizer),biasRegularizer:sD(this.biasRegularizer),activityRegularizer:sD(this.activityRegularizer),kernelConstraint:gR(this.kernelConstraint),recurrentConstraint:gR(this.recurrentConstraint),biasConstraint:gR(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}PD.className="SimpleRNNCell",Ua(PD);class zD extends FD{constructor(e){e.cell=new PD(e),super(e)}call(e,t){return gi((()=>{null!=this.cell.dropoutMask&&(yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}zD.className="SimpleRNN",Ua(zD);class LD extends MD{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new a$("GRUCell does not support reset_after parameter set to true.");this.units=e.units,_$(this.units,"units"),this.activation=JO(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=JO(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=PA(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=PA(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=PA(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=aD(e.kernelRegularizer),this.recurrentRegularizer=aD(e.recurrentRegularizer),this.biasRegularizer=aD(e.biasRegularizer),this.kernelConstraint=bR(e.kernelConstraint),this.recurrentConstraint=bR(e.recurrentConstraint),this.biasConstraint=bR(e.biasConstraint),this.dropout=X$([1,Y$([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=X$([1,Y$([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=VA(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return gi((()=>{if(2!==e.length)throw new a$(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=GD({ones:()=>Nc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=GD({ones:()=>Nc(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(e=Oa(e,s[0]));let u=uA(e,this.kernel.read());this.useBias&&(u=pA(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Oa(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=Ch(c,[2*this.units,this.units],c.rank-1),p=uA(r,h),[f,m,g]=Ch(u,3,u.rank-1),[y,b]=Ch(p,2,p.rank-1);a=this.recurrentActivation.apply($a(f,y)),o=this.recurrentActivation.apply($a(m,b));const v=uA(Oa(o,r),d);l=this.activation.apply($a(g,v));const x=$a(Oa(a,r),Oa($a(1,tc(a)),l));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:QO(this.activation),recurrentActivation:QO(this.recurrentActivation),useBias:this.useBias,kernelInitializer:MA(this.kernelInitializer),recurrentInitializer:MA(this.recurrentInitializer),biasInitializer:MA(this.biasInitializer),kernelRegularizer:sD(this.kernelRegularizer),recurrentRegularizer:sD(this.recurrentRegularizer),biasRegularizer:sD(this.biasRegularizer),activityRegularizer:sD(this.activityRegularizer),kernelConstraint:gR(this.kernelConstraint),recurrentConstraint:gR(this.recurrentConstraint),biasConstraint:gR(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}LD.className="GRUCell",Ua(LD);class BD extends FD{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new LD(e),super(e)}call(e,t){return gi((()=>{null!=this.cell.dropoutMask&&(yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}BD.className="GRU",Ua(BD);class VD extends MD{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,_$(this.units,"units"),this.activation=JO(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=JO(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=PA(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=PA(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=PA(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=aD(e.kernelRegularizer),this.recurrentRegularizer=aD(e.recurrentRegularizer),this.biasRegularizer=aD(e.biasRegularizer),this.kernelConstraint=bR(e.kernelConstraint),this.recurrentConstraint=bR(e.recurrentConstraint),this.biasConstraint=bR(e.biasConstraint),this.dropout=X$([1,Y$([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=X$([1,Y$([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=VA(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends bA{apply(t,r){const s=e.apply([n]),i=(new xA).apply([n]),a=e.apply([2*n]);return aA(aA(s,i),a)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return gi((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new a$(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=GD({ones:()=>Nc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=GD({ones:()=>Nc(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Oa(e,i[0]));let h=uA(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Oa(r,a[0])),h=$a(h,uA(r,this.recurrentKernel.read())),this.useBias&&(h=pA(h,this.bias.read()));const[d,p,f,m]=Ch(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=$a(Oa(l,s),Oa(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Oa(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:QO(this.activation),recurrentActivation:QO(this.recurrentActivation),useBias:this.useBias,kernelInitializer:MA(this.kernelInitializer),recurrentInitializer:MA(this.recurrentInitializer),biasInitializer:MA(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:sD(this.kernelRegularizer),recurrentRegularizer:sD(this.recurrentRegularizer),biasRegularizer:sD(this.biasRegularizer),activityRegularizer:sD(this.activityRegularizer),kernelConstraint:gR(this.kernelConstraint),recurrentConstraint:gR(this.recurrentConstraint),biasConstraint:gR(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}VD.className="LSTMCell",Ua(VD);class WD extends FD{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new VD(e),super(e)}call(e,t){return gi((()=>{null!=this.cell.dropoutMask&&(yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}WD.className="LSTM",Ua(WD);class UD extends MD{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return gi((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),s.push(i.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;zA(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{U$(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=[];for(const s of t.cells)r.push($R(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return jA(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}HA(t)}}function GD(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:i}=e,a=()=>null!=i?i(t(),n):fA(t(),n),o=()=>mA(a,t,r);if(!s||s<=1)return bi(o().clone());return Array(s).fill(void 0).map(o).map((e=>bi(e.clone())))}UD.className="StackedRNNCells",Ua(UD);var jD=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class HD extends FD{constructor(e){if(e.unroll)throw new o$("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new o$("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new qA({ndim:5})]}call(e,t){return gi((()=>{if(null!=this.cell.dropoutMask&&(yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new a$("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return gi((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=yc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];gi((()=>{if(!this.stateful)throw new s$("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new a$("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>yc(s))):this.states_=[yc(s)];else if(null==e)yi(this.states_),null!=this.keptStates&&(yi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>yc(s))):this.states_[0]=yc(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new a$(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):yi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!j(n.shape,r))throw new a$(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>bi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=fD(l,r[0],s,i[0],a[0]),h=fD(u,r[1],s,i[1],a[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}HD.className="ConvRNN2D";class qD extends VD{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,_$(this.filters,"filters"),this.kernelSize=pD(n,2,"kernelSize"),this.kernelSize.forEach((e=>_$(e,"kernelSize"))),this.strides=pD(r||1,2,"strides"),this.strides.forEach((e=>_$(e,"strides"))),this.padding=s||"valid",B$(this.padding),this.dataFormat=i||"channelsLast",L$(this.dataFormat),this.dilationRate=pD(a||1,2,"dilationRate"),this.dilationRate.forEach((e=>_$(e,"dilationRate")))}build(e){var t;e=VA(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new a$(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends bA{apply(e,t){return iA([n.apply([r]),bc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return gi((()=>{if(3!==e.length)throw new a$(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=GD({ones:()=>Nc(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Oa(t[n],e):e;let l=o(r,a,0),u=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=GD({ones:()=>Nc(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[y,b,v,x]=Ch(this.kernel.read(),4,3),[w,k,S,C]=this.useBias?Ch(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,v,S,this.padding),h=this.inputConv(h,x,C,this.padding);const[I,_,T,N]=Ch(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,I),f=this.recurrentConv(f,_),m=this.recurrentConv(m,T),g=this.recurrentConv(g,N);const E=this.recurrentActivation.apply($a(l,p)),$=this.recurrentActivation.apply($a(u,f)),A=$a(Oa($,i),Oa(E,this.activation.apply($a(c,m)))),R=Oa(this.recurrentActivation.apply($a(h,g)),this.activation.apply(A));return[R,R,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=jD(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Ql(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?pA(s,n,this.dataFormat):s}recurrentConv(e,t){return Ql(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}qD.className="ConvLSTM2DCell",Ua(qD);class KD extends HD{constructor(e){const t=new qD(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}KD.className="ConvLSTM2D",Ua(KD);class XD extends ZA{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return gi((()=>{this.invokeCallHook(e,t);const n=BA(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return mA((()=>fA(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}XD.className="Dropout",Ua(XD);class YD extends XD{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}YD.className="SpatialDropout1D",Ua(YD);class QD extends ZA{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,_$(this.units,"units"),this.activation=JO(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=PA(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=PA(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=bR(e.kernelConstraint),this.biasConstraint=bR(e.biasConstraint),this.kernelRegularizer=aD(e.kernelRegularizer),this.biasRegularizer=aD(e.biasRegularizer),this.activityRegularizer=aD(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=VA(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=VA(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return gi((()=>{this.invokeCallHook(e,t);const n=BA(e),r=N$(this.activation.getClassName());let s;return null!=r?s=uA(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=uA(n,this.kernel.read()),null!=this.bias&&(s=pA(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:QO(this.activation),useBias:this.useBias,kernelInitializer:MA(this.kernelInitializer),biasInitializer:MA(this.biasInitializer),kernelRegularizer:sD(this.kernelRegularizer),biasRegularizer:sD(this.biasRegularizer),activityRegularizer:sD(this.activityRegularizer),kernelConstraint:gR(this.kernelConstraint),biasConstraint:gR(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}QD.className="Dense",Ua(QD);class ZD extends ZA{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=VA(e);for(const t of e.slice(1))if(null==t)throw new a$(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],K$(e,1)]}call(e,t){return gi((()=>{this.invokeCallHook(e,t);let n=BA(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Qh(n,e)}return function(e){if(e.rank<=1)throw new a$(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],K$(e.shape,1)];return Tl(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}ZD.className="Flatten",Ua(ZD);class JD extends ZA{constructor(e){super(e),this.supportsMasking=!0,this.activation=JO(e.activation)}call(e,t){return gi((()=>{this.invokeCallHook(e,t);const n=BA(e);return this.activation.apply(n)}))}getConfig(){const e={activation:QO(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}JD.className="Activation",Ua(JD);class eF extends ZA{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return gi((()=>{return e=BA(e),t=e,n=this.n,gi((()=>{if(2!==t.shape.length)throw new a$(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return oA(tA(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}eF.className="RepeatVector",Ua(eF);class tF extends ZA{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,i=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==i)throw new a$("Can only specifiy one unknown dimension.");i=o}else s*=e}const a=K$(e);if(null!==i){if(0===s||a%s!==0)throw new a$(n);r[i]=a/s}else if(a!==s)throw new a$(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return gi((()=>{this.invokeCallHook(e,t);const n=BA(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Tl(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}tF.className="Reshape",Ua(tF);class nF extends ZA{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Q$(1,e.dims.length+1);if(!j(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new qA({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=VA(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Qh(BA(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}nF.className="Permute",Ua(nF);class rF extends ZA{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=BA(e);return sl(_c(n,this.maskValue),-1)}call(e,t){return gi((()=>{this.invokeCallHook(e,t);const n=BA(e),r=sl(_c(n,this.maskValue),-1,!0);return Oa(n,Ta(r,n.dtype))}))}}rF.className="Masking",Ua(rF);class sF extends ZA{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(f$(e.inputLength))}this.inputDim=e.inputDim,_$(this.inputDim,"inputDim"),this.outputDim=e.outputDim,_$(this.outputDim,"outputDim"),this.embeddingsInitializer=PA(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=aD(e.embeddingsRegularizer),this.activityRegularizer=aD(e.activityRegularizer),this.embeddingsConstraint=bR(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return gi((()=>this.maskZero?(e=BA(e),_c(e,Ma(e))):null))}computeOutputShape(e){if(e=VA(e),null==this.inputLength)return[...e,this.outputDim];const t=f$(this.inputLength);if(t.length!==e.length-1)throw new a$(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],i=e[r+1];if(null!=s&&null!=i&&s!==i)throw new a$(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return gi((()=>{this.invokeCallHook(e,t);let n=BA(e);"int32"!==n.dtype&&(n=eA(n,"int32"));const r=cA(this.embeddings.read(),Tl(n,[n.size]));return Tl(r,VA(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:MA(this.embeddingsInitializer),embeddingsRegularizer:sD(this.embeddingsRegularizer),activityRegularizer:sD(this.activityRegularizer),embeddingsConstraint:gR(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}sF.className="Embedding",Ua(sF);class iF extends ZA{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new o$}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],i=t[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new a$("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[VA(e)]),e.length<2)throw new a$(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=k$(t),t.length>1)throw new a$(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===k$(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return gi((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Y$(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=tA(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const i of e){const e=i.rank;if(null==e){const e=i.shape,r=e[0],s=e.slice(1).concat([r]);let a=Tl(i,[r].concat(K$(e.slice(1))));a=Qh(a,[1,0]),a=Tl(a,s),t.push(a),n=!0}else if(e>1){const r=Q$(1,e).concat([0]);t.push(Qh(i,r)),n=!0}else t.push(i)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Tl(Qh(Tl(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(Q$(0,s-1));r=Qh(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=k$(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return gi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new a$("`mask` should be an Array");if(!Array.isArray(e))throw new a$("`inputs` should be an Array");if(t.length!==e.length)throw new a$(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Mu(e,0))))[0];for(let e=1;e<t.length-1;++e)n=ac(n,t[e]);return n}))}}class aF extends iF{constructor(e){super(e)}mergeFunction(e){return gi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$a(t,e[n]);return t}))}}aF.className="Add",Ua(aF);class oF extends iF{constructor(e){super(e)}mergeFunction(e){return gi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Oa(t,e[n]);return t}))}}oF.className="Multiply",Ua(oF);class lF extends iF{constructor(e){super(e)}mergeFunction(e){return gi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$a(t,e[n]);return Oa(1/e.length,t)}))}}lF.className="Average",Ua(lF);class uF extends iF{constructor(e){super(e)}mergeFunction(e){return gi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=to(t,e[n]);return t}))}}uF.className="Maximum",Ua(uF);class cF extends iF{constructor(e){super(e)}mergeFunction(e){return gi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=xc(t,e[n]);return t}))}}cF.className="Minimum",Ua(cF);class hF extends iF{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new a$("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(j(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new a$("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return gi((()=>iA(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new a$("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new a$("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new a$("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new a$(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return gi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let i=0;i<e.length;++i)null==t[i]?r.push(Ta(Nc(e[i]),"bool")):t[i].rank<e[i].rank?r.push(Mu(t[i],-1)):r.push(t[i]);const s=$l(r,this.axis);return rl(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function dF(e,t){for(;e<0;)e+=t;return e}hF.className="Concatenate",Ua(hF);class pF extends iF{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){B(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new o$("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new a$(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new a$(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>dF(t,e[n].shape.length))):[dF(this.axes,n.shape.length),dF(this.axes,r.shape.length)],this.normalize&&(n=AR(n,t[0]),r=AR(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new o$("batchDot is not implemented for tensors of 4D or higher rank yet");if(B(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),B(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new o$("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return gi((()=>{let n,a;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=Tl(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Tl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)a=i[0]===i[1]?Au(Oa(e,t),i[0]):Au(Oa(Qh(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;a=Al(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);a=Th(a,t)}return 1===a.shape.length&&(a=Mu(a,1)),a}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[dF(this.axes,e.length),dF(this.axes,t.length)],n}computeOutputShape(e){B(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new o$("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}pF.className="Dot",Ua(pF);class fF extends ZA{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return gi((()=>{this.invokeCallHook(e,t);const n=BA(e);return mA((()=>$a(lA(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}fF.className="GaussianNoise",Ua(fF);class mF extends ZA{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return gi((()=>{this.invokeCallHook(e,t);const n=BA(e);if(this.rate>0&&this.rate<1){return mA((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Oa(n,lA(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}mF.className="GaussianDropout",Ua(mF);class gF extends ZA{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||BA(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return gi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=BA(e),r=-1.7580993408473766;let s=Uu(Yc(n),this.rate);s=eA(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-i*r*this.rate,o=$a(Oa(t,s),Oa($a(s,-1),r));return $a(Oa(o,i),a)};return mA(r,(()=>BA(e)),t.training||!1)}return e}))}}function yF(e,t,n,r,s){let i,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)i=zl(e,t,n,r,s,a);else if(3===e.rank)i=Ll(e,t,n,r,s,a);else{if(4!==e.rank)throw new o$(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Bl(e,t,n,r,s,a)}return i}function bF(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return j(r.slice().sort(),Q$(0,e.rank-1))?function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return gi((()=>{const i=Sc(e,r),a=i.mean,o=i.variance;return[yF(e,a,o,n,t,s),a,o]}))}(e,t,n,r,s):function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return gi((()=>{const i=Sc(e,r),a=i.mean,o=i.variance,l=[];for(const t of Q$(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Tl(a,l),c=Tl(o,l),h=null==t?null:Tl(t,l),d=null==n?null:Tl(n,l);return[yF(e,u,c,d,h,s),a,o]}))}(e,t,n,r,s)}gF.className="AlphaDropout",Ua(gF);class vF extends ZA{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=PA(e.betaInitializer||"zeros"),this.gammaInitializer=PA(e.gammaInitializer||"ones"),this.movingMeanInitializer=PA(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=PA(e.movingVarianceInitializer||"ones"),this.betaConstraint=bR(e.betaConstraint),this.gammaConstraint=bR(e.gammaConstraint),this.betaRegularizer=aD(e.betaRegularizer),this.gammaRegularizer=aD(e.gammaRegularizer)}build(e){e=VA(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new a$(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new qA({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return gi((()=>{const n=null!=t.training&&t.training,r=BA(e),s=r.shape,i=s.length,a=Q$(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=c$(1,i);l[o]=s[o];const u=a.slice();u.sort();const c=!j(u,Q$(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const e=Tl(this.movingMean.read(),l),t=Tl(this.movingVariance.read(),l),n=this.center?Tl(this.beta.read(),l):null,s=this.scale?Tl(this.gamma.read(),l):null;return yF(r,e,t,n,s,this.epsilon)}return yF(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=bF(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(e,t,n)=>{gi((()=>{const r=1-n,s=e.read(),i=Oa(Xa(s,t),r);e.write(Xa(s,i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:MA(this.betaInitializer),gammaInitializer:MA(this.gammaInitializer),movingMeanInitializer:MA(this.movingMeanInitializer),movingVarianceInitializer:MA(this.movingVarianceInitializer),betaRegularizer:sD(this.betaRegularizer),gammaRegularizer:sD(this.gammaRegularizer),betaConstraint:gR(this.betaConstraint),gammaConstraint:gR(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}vF.className="BatchNormalization",Ua(vF);class xF extends ZA{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=PA(e.betaInitializer||"zeros"),this.gammaInitializer=PA(e.gammaInitializer||"ones"),this.betaRegularizer=aD(e.betaRegularizer),this.gammaRegularizer=aD(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=VA(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(const s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==k$(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=BA(e),r=n.shape,s=r.length;return gi((()=>{let{mean:e,variance:t}=Sc(n,this.axis,!0);const i=c$(1,s);for(const n of this.axis)i[n]=r[n];const a=e=>null!=e&&e.shape.length!==s?Tl(e,i):e;let o=this.scale?a(this.gamma.read()):null,l=this.center?a(this.beta.read()):null;const u=[],c=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),c.push(1)):(u.push(1),c.push(r[n]));return e=zu(e,u),t=zu(t,u),null!=o&&(o=zu(o,c)),null!=l&&(l=zu(l,c)),yF(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:MA(this.betaInitializer),gammaInitializer:MA(this.gammaInitializer),betaRegularizer:sD(this.betaRegularizer),gammaRegularizer:sD(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}xF.className="LayerNormalization",Ua(xF);class wF extends ZA{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new a$(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new a$(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new a$(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new qA({ndim:4})]}computeOutputShape(e){let t,n;return e=VA(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return gi((()=>{return t=BA(e),n=this.padding,r=this.dataFormat,gi((()=>{if(4!==t.rank)throw new a$(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new a$("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new a$(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],$c(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function kF(e,t,n,r,s,i){return gi((()=>{let a;L$(s),V$(i),B$(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=gD(e,s);const o="same"===r?"same":"valid";return a="max"===i?pc(e,t,n,o):Nl(e,t,n,o),"channelsFirst"===s&&(a=Qh(a,[0,3,1,2])),a}))}function SF(e,t,n,r,s,i){return gi((()=>{let a;L$(s),V$(i),B$(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=yD(e,s);const o="same"===r?"same":"valid";return a="max"===i?fc(e,t,n,o):El(e,t,n,o),"channelsFirst"===s&&(a=Qh(a,[0,4,1,2,3])),a}))}wF.className="ZeroPadding2D",Ua(wF);class CF extends ZA{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new a$(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(_$(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new a$(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}_$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,B$(this.padding),this.inputSpec=[new qA({ndim:3})]}computeOutputShape(e){const t=fD((e=VA(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return gi((()=>{this.invokeCallHook(e,t),e=tA(BA(e),2);const n=this.poolingFunction(BA(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Th(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class IF extends CF{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return L$(s),B$(r),kF(e,t,n,r,s,"max")}}IF.className="MaxPooling1D",Ua(IF);class _F extends CF{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return L$(s),B$(r),kF(e,t,n,r,s,"avg")}}_F.className="AveragePooling1D",Ua(_F);class TF extends ZA{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new a$(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];_$(this.poolSize,"poolSize"),_$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,L$(this.dataFormat),B$(this.padding),this.inputSpec=[new qA({ndim:4})]}computeOutputShape(e){e=VA(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=fD(t,this.poolSize[0],this.padding,this.strides[0]),n=fD(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return gi((()=>(this.invokeCallHook(e,t),this.poolingFunction(BA(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class NF extends TF{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return L$(s),B$(r),kF(e,t,n,r,s,"max")}}NF.className="MaxPooling2D",Ua(NF);class EF extends TF{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return L$(s),B$(r),kF(e,t,n,r,s,"avg")}}EF.className="AveragePooling2D",Ua(EF);class $F extends ZA{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new a$(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];_$(this.poolSize,"poolSize"),_$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,L$(this.dataFormat),B$(this.padding),this.inputSpec=[new qA({ndim:5})]}computeOutputShape(e){e=VA(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=fD(t,this.poolSize[0],this.padding,this.strides[0]),n=fD(n,this.poolSize[1],this.padding,this.strides[1]),r=fD(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return gi((()=>(this.invokeCallHook(e,t),this.poolingFunction(BA(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class AF extends $F{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return L$(s),B$(r),SF(e,t,n,r,s,"max")}}AF.className="MaxPooling3D",Ua(AF);class RF extends $F{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return L$(s),B$(r),SF(e,t,n,r,s,"avg")}}RF.className="AveragePooling3D",Ua(RF);class OF extends ZA{constructor(e){super(e),this.inputSpec=[new qA({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new o$}}class DF extends OF{constructor(e){super(e||{})}call(e,t){return gi((()=>{const t=BA(e);return gc(t,1)}))}}DF.className="GlobalAveragePooling1D",Ua(DF);class FF extends OF{constructor(e){super(e||{})}call(e,t){return gi((()=>{const t=BA(e);return Eu(t,1)}))}}FF.className="GlobalMaxPooling1D",Ua(FF);class MF extends ZA{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,L$(this.dataFormat),this.inputSpec=[new qA({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new o$}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class PF extends MF{call(e,t){return gi((()=>{const t=BA(e);return"channelsLast"===this.dataFormat?gc(t,[1,2]):gc(t,[2,3])}))}}PF.className="GlobalAveragePooling2D",Ua(PF);class zF extends MF{call(e,t){return gi((()=>{const t=BA(e);return"channelsLast"===this.dataFormat?Eu(t,[1,2]):Eu(t,[2,3])}))}}zF.className="GlobalMaxPooling2D",Ua(zF);class LF extends ZA{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=$R(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class BF extends LF{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=VA(e)).length<3)throw new a$(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=VA(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return gi((()=>DD(((e,n)=>[BA(this.layer.call(e,t)),[]]),e=BA(e),[],!1,null,null,!1,!0)[1]))}}BF.className="TimeDistributed",Ua(BF);class VF extends LF{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=$R(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=$R(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,C$(P$,"BidirectionalMergeMode",s),e.weights)throw new o$("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):p$(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=OD(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const i=[],a=[];if(null!=n){const e=n.length;if(e%2>0)throw new a$("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);const r=n.map((e=>new qA({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),a.push(...r)}if(null!=r)throw new o$("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof KA;for(const l of i)if(l instanceof KA!==o)throw new a$("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return gi((()=>{const n=t.initialState;let r,s,i,a;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=rh(s,1)),"concat"===this.mergeMode?a=iA([r,s]):"sum"===this.mergeMode?a=$a(r,s):"ave"===this.mergeMode?a=Oa(.5,$a(r,s)):"mul"===this.mergeMode?a=Oa(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){U$(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),U$(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=$R(t.layer);if(delete t.layer,null!=t.numConstants)throw new o$("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}VF.className="Bidirectional",Ua(VF);class WF extends ZA{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return gi((()=>("float32"!==(e=BA(e)).dtype&&(e=eA(e,"float32")),$a(Oa(e,this.scale),this.offset))))}}WF.className="Rescaling",Ua(WF);const{resizeBilinear:UF,cropAndResize:GF}=mp;class jF extends ZA{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,i,a,o){return gi((()=>{let l,u=!1;const c=[t/i,n/a,(r+t)/i,(s+n)/a],h=[];3===e.rank?(u=!0,l=Nh([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const d=hi(h,[h.length,4]),p=Zc(0,h.length,1,"int32"),f=GF(l,d,p,[r,s],"nearest");return eA(u?BA(jh(f)):f,o)}))}upsize(e,t,n,r){return gi((()=>eA(UF(e,[t,n]),r)))}call(e,t){return gi((()=>{const t=BA(e),n=t.dtype,r=t.shape,s=r[r.length-3],i=r[r.length-2];let a=0;s!==this.height&&(a=Math.floor((s-this.height)/2));let o=0;return i!==this.width&&(o=Math.floor((i-this.width)/2),0===o&&(o=1)),a>=0&&o>=0?this.centerCrop(t,a,o,this.height,this.width,s,i,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=VA(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}jF.className="CenterCrop",Ua(jF);class HF extends ZA{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=VA(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return gi((()=>{let n;if("int32"!==(e=BA(e)).dtype&&(e=eA(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new a$(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=BA(t.countWeights)}const r=Eu(e),s=$u(e),i=Wu(this.numTokens,r).bufferSync().get(0),a=Uu(s,0).bufferSync().get(0);if(!i||!a)throw new a$(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=BA(e);if("int32"!==s.dtype&&(s=eA(s,"int32")),"int"===t)return s;const i=s.shape;if(0===s.rank&&(s=Mu(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=Mu(s,-1)),s.rank>2)throw new a$(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${s.rank}.`);const a=["multiHot","oneHot"].includes(t),o=s;let l;if(l=lu(o,"undefined"!==typeof r&&"count"===t?r:[],n,a),"tfIdf"!==t)return l;if(r)return Oa(l,r);throw new a$("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}HF.className="CategoryEncoding",Ua(HF);const qF=new Set(["bilinear","nearest"]);class KF extends ZA{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!qF.has(e.interpolation))throw new a$(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=VA(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return gi((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return mp.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return mp.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...qF]} are supported`)}))}}KF.className="Resizing",Ua(KF);class XF{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}XF.className="RandomSeed";class YF extends ZA{constructor(e){super(e),this.randomGenerator=new XF(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}YF.className="BaseRandomLayer";const QF=new Set(["bilinear","nearest"]);class ZF extends YF{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new a$(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new a$(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new a$(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!QF.has(n))throw new a$(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=VA(e))[2];return[this.imgHeight,-1,t]}call(e,t){return gi((()=>{const t=BA(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Yc([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return mp.resizeBilinear(e,s);case"nearest":return mp.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...QF]} are supported`)}}))}}function JF(e){return new QD(e)}function eM(e){return new XD(e)}ZF.className="RandomWidth",Ua(ZF);function tM(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(iM(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const i in e){const a=tM(e[i],t,n,r);s[i]=a}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function nM(e){return rM(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:sM)}function rM(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(iM(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=rM(e.map((e=>e[i])),t,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function sM(e){return null===e?null:iM(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function iM(e){let t=!1;if(ke().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof Es)&&!(e instanceof Promise)&&!t)}function aM(e){return function(e,t){return tM(e,t)}(e,oM)}function oM(e){return e instanceof Es?{value:e.clone(),recurse:!1}:iM(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class lM{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class uM extends lM{constructor(){super(uM.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function cM(e){return new fM(e)}function hM(e,t){return new IM(e,t)}uM.INITIAL_CAPACITY=32;class dM{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new wM(this,e)}filter(e){return new vM(this,e)}map(e){return new xM(this,e)}mapAsync(e){return new kM(this,e)}serialMapAsync(e){return new kM(this,e).serial()}flatmap(e){return new CM(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new bM(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:sM;return this.rowMajorBatch(e,t).map((e=>nM(e,n)))}concatenate(e,t){return new IM(new pM([this,e]),t)}take(e){return e<0||null==e?this:new yM(this,e)}skip(e){return e<0||null==e?this:new gM(this,e)}prefetch(e){return new TM(this,e)}shuffle(e,t){return new NM(this,e,t)}serial(){return new mM(this)}}class pM extends dM{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:aM(e),done:!1}}}class fM extends dM{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class mM extends dM{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class gM extends dM{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;yi(e.value)}return this.upstream.next()}}class yM extends dM{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class bM extends dM{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class vM extends dM{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;yi(e.value)}}}class xM extends dM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Gs(e.value),n=this.transform(e.value),r=Gs(n);for(const s of t)Us(s,r)||s.dispose();return{value:n,done:!1}}}class wM extends dM{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class kM extends dM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Gs(e.value),n=await this.transform(e.value),r=Gs(n);for(const s of t)Us(s,r)||s.dispose();return{value:n,done:!1}}}class SM extends dM{constructor(){super(),this.outputQueue=new uM,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class CM extends SM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Gs(e.value),n=this.transform(e.value),r=Gs(n);this.outputQueue.pushAll(n);for(const s of t)Us(s,r)||s.dispose();return!0}}class IM extends dM{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var _M;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(_M||(_M={}));class TM extends dM{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new lM(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class NM extends TM{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Uc.alea(n||ds().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class EM{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let r;return B(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),$M((async()=>(await n.iterator()).columnMajorBatch(e,t,AM)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,$M((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,$M((async()=>(await t.iterator()).filter((t=>gi((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return $M((async()=>(await t.iterator()).map((t=>gi((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return $M((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return $M((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,$M((async()=>hM(cM((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,$M((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Uc.alea(t||ds().toString());return $M((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,$M((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function $M(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends EM{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function AM(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof Es||ms(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Es?Nh(e):hi(e)}(e),recurse:!1}}return{value:null,recurse:!0}}EM.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const RM=Kh;class OM extends O{nextDataId(){return OM.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new R(this,fi())}write(e,t,n){this.firstUse&&(this.firstUse=!1,ke().get("IS_NODE")&&Lr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&re(n[0])){const s=n.map((e=>ps(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return qp(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return he(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>fs(e)));return _a(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return _a(e.shape,e.dtype,t)}makeOutput(e,t,n){return fi().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ds();e();return{kernelMs:ds()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){cy([e],"where");const t=this.readSync(e.dataId);return RM(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}OM.nextDataId=0;ki("cpu",(()=>new OM),1);const DM=My(It,(e=>e>=0?e:Math.exp(e)-1)),FM={kernelName:It,backendName:"cpu",kernelFunc:DM};function MM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r;cy([s],"leakyRelu");const a=U(s.shape),o=n.data.get(s.dataId).values,l=J("float32",a);for(let u=0;u<o.length;u++)l[u]=o[u]<0?i*o[u]:o[u];return n.makeTensorInfo(s.shape,"float32",l)}const PM={kernelName:Kt,backendName:"cpu",kernelFunc:MM},zM=py(((e,t)=>e<0?t*e:e));function LM(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;cy([r,s],"prelu");const i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[o,l]=zM(r.shape,s.shape,i,a,"float32");return n.makeTensorInfo(l,"float32",o)}const BM={kernelName:$n,backendName:"cpu",kernelFunc:LM},VM=My(zn,(e=>Math.max(0,e))),WM={kernelName:zn,backendName:"cpu",kernelFunc:VM},UM=My(Gn,(e=>Math.min(Math.max(0,e),6))),GM={kernelName:Gn,backendName:"cpu",kernelFunc:UM};function jM(e,t,n,r,s){if("linear"===n)return yy({inputs:{x:t},backend:e});if("relu"===n)return VM({inputs:{x:t},backend:e});if("elu"===n)return DM({inputs:{x:t},backend:e});if("relu6"===n)return UM({inputs:{x:t},backend:e});if("prelu"===n)return LM({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return MM({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return iv({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function HM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=U(s.shape),o=Y(i,a),l=U(o);B(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const qM={kernelName:Ln,backendName:"cpu",kernelFunc:HM};function KM(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;cy([s,i],"matMul");const l=s.shape.length,u=i.shape.length,c=a?s.shape[l-2]:s.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],d=a?s.shape[l-1]:s.shape[l-2],p=o?i.shape[u-2]:i.shape[u-1],f=s.shape.slice(0,-2),m=i.shape.slice(0,-2),g=U(f),y=U(m),b=eo(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);B(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const v=o?[y,p,h]:[y,h,p],x=HM({inputs:{x:s},backend:n,attrs:{shape:a?[g,c,d]:[g,d,c]}}),w=HM({inputs:{x:i},backend:n,attrs:{shape:v}}),k=a?x.shape[1]:x.shape[2],S=a?x.shape[2]:x.shape[1],C=o?w.shape[1]:w.shape[2],I=Math.max(g,y),_=n.data.get(x.dataId).values,T=n.data.get(w.dataId).values,N=le(x.shape),E=le(w.shape),[$,A,R]=a?[N[0],1,N[1]]:[N[0],N[1],1],[O,D,F]=o?[1,E[1],E[0]]:[E[1],1,E[0]],M=S*C,P=_a([I,S,C],x.dtype),z=P.values,L=n.blockSize;for(let B=0;B<I;B++){const e=B%g,t=B%y;for(let n=0;n<S;n+=L){const r=Math.min(n+L,S);for(let s=0;s<C;s+=L){const i=Math.min(s+L,C);for(let a=0;a<k;a+=L){const o=Math.min(a+L,k);for(let l=n;l<r;l++)for(let n=s;n<i;n++){let r=0;for(let s=a;s<o;s++){r+=_[e*$+l*A+s*R]*T[s*O+n*D+t*F]}z[B*M+(l*C+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,P.dtype,P.values)}const XM={kernelName:je,backendName:"cpu",kernelFunc:KM};const YM={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=KM({inputs:{a:s,b:i},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=Ny({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),c&&(f=jM(n,d,c,o,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}},QM=My(Ne,(e=>Math.acos(e))),ZM={kernelName:Ne,backendName:"cpu",kernelFunc:QM},JM=My(Ee,(e=>Math.acosh(e))),eP={kernelName:Ee,backendName:"cpu",kernelFunc:JM};const tP={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;cy(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),i=_a(r[0].shape,r[0].dtype),a=i.values;for(let o=0;o<r.length;o++){const e=s[o];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};const nP={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;cy(s,"all");const o=Q(i,s.shape);let l=o;const u=_u(l,s.shape.length);let c=s;null!=u&&(c=zb({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Nu(l.length,s.shape.length)),Iu("all",l,c.shape.length);const[h,d]=Su(c.shape,l),p=U(d),f=pe(U(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];t=t&&r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=HM({inputs:{x:g},backend:n,attrs:{shape:Cu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const rP={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;cy(s,"any");const o=Q(i,s.shape);let l=o;const u=_u(l,s.shape.length);let c=s;null!=u&&(c=zb({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Nu(l.length,s.shape.length)),Iu("any",l,c.shape.length);const[h,d]=Su(c.shape,l),p=U(d),f=pe(U(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];t=t||r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=HM({inputs:{x:g},backend:n,attrs:{shape:Cu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const sP={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;cy(s,"argMax");let a=Q(i,s.shape);const o=_u(a,s.shape.length);let l=s;const u=[];null!=o&&(l=zb({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=Nu(a.length,l.shape.length)),a=[a[0]],Iu("argMax",a,l.shape.length);const[c,h]=Su(l.shape,a),d=pe(U(c),"int32"),p=U(h),f=n.data.get(l.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let r=0;r<p;++r){const s=f[e+r];s>t&&(t=s,n=r)}d[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};const iP={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;cy(s,"argMin");let a=Q(i,s.shape);const o=_u(a,s.shape.length);let l=s;const u=[];null!=o&&(l=zb({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=Nu(a.length,l.shape.length)),a=[a[0]],Iu("argMin",a,l.shape.length);const[c,h]=Su(l.shape,a),d=pe(U(c),"int32"),p=U(h),f=n.data.get(l.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let r=0;r<p;++r){const s=f[e+r];s<t&&(t=s,n=r)}d[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},aP=My(Me,(e=>Math.asin(e))),oP={kernelName:Me,backendName:"cpu",kernelFunc:aP},lP=My(Pe,(e=>Math.asinh(e))),uP={kernelName:Pe,backendName:"cpu",kernelFunc:lP},cP=My(ze,(e=>Math.atan(e))),hP={kernelName:ze,backendName:"cpu",kernelFunc:cP},dP=py(((e,t)=>Math.atan2(e,t))),pP=Cy(Be,dP),fP={kernelName:Be,backendName:"cpu",kernelFunc:pP},mP=My(Le,(e=>Math.atanh(e))),gP={kernelName:Le,backendName:"cpu",kernelFunc:mP};function yP(e,t,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=_a(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let x=0;x<s.batchSize;++x){const t=x*y,n=x*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const x=y*a-d,w=Math.max(0,x),k=Math.min(s.inHeight,c+x),S=t+y*b;for(let t=0;t<s.outWidth;++t){const a=t*o-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let y=f,b=0,x=0;for(let t=w;t<k;t+=l){const s=n+t*r[1];for(let t=c;t<d;t+=u){const n=e[s+t*r[2]+m];"max"===i&&n>y?y=n:"avg"===i&&(b+=n,x++)}if(isNaN(y))break}g[S+t*v+m]="avg"===i?b/x:y}}}return m}function bP(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const a=_a(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=_a(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-p;let y=n;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const v=Math.min(r.inWidth,d+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=u){const a=t-n;for(let n=p;n<v;n+=c){const o=n-h,l=m.get(g,t,n,e);l>x&&(x=l,w=s?i?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:a*d+o)}}a.set(w,g,t,o,e)}}return a}function vP(e,t,n,r,s,i){const a=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=_a(s.outShape,n),x=v.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[3]*s.outShape[4],C=s.outShape[4];for(let I=0;I<s.batchSize;++I){const t=I*w,n=I*r[0];for(let v=0;v<s.inChannels;++v)for(let w=0;w<s.outDepth;++w){const I=w*a-m;let _=I;for(;_<0;)_+=u;const T=Math.min(s.inDepth,d+I),N=t+w*k;for(let t=0;t<s.outHeight;++t){const a=t*o-g;let d=a;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+a),w=N+t*S;for(let t=0;t<s.outWidth;++t){const a=t*l-y;let o=a;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+a),g=w+t*C;let k=b,S=0,I=0;for(let t=_;t<T;t+=u){const s=n+t*r[1];for(let t=d;t<m;t+=c){const n=s+t*r[2];for(let t=o;t<p;t+=h){const s=e[n+t*r[3]+v];if("max"===i&&s>k?k=s:"avg"===i&&(S+=s,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}x[g+v]="avg"===i?S/Math.max(I,1):k}}}}return v}const xP={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;cy(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;B(Sl(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=pl(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&j(u.inShape,u.outShape))c=yy({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=le(s.shape),r=yP(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const wP={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;cy(s,"avgPool3d");const c=fl(s.shape,i,a,1,o,l,u),h=vP(n.data.get(s.dataId).values,s.shape,s.dtype,le(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const kP={kernelName:Ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;cy([s,i],"avgPool3DGrad");const c=fl(i.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,v=c.dilationWidth,x=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,S=x-1-c.padInfo.front,C=k-1-c.padInfo.left,I=w-1-c.padInfo.top,_=_a(i.shape,"float32"),T=1/(f*m*g),N=n.bufferSync(s);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-S,i=n-I,a=r-C;let o=0;for(let t=0;t<x;t+=y){const n=(s+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const r=(i+t)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=v){const s=(a+t)/p;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;o+=N.get(E,n,r,s,e)}}}_.set(o*T,E,t,n,r,e)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}};const SP={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;cy([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=pl(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,v=b-1-c.padInfo.left,x=y-1-c.padInfo.top,w=_a(a.shape,"float32"),k=1/(p*f),S=n.data.get(s.dataId).values,C=_a(s.shape,"float32",S);for(let I=0;I<c.batchSize;++I)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-x,s=n-v;let i=0;for(let t=0;t<y;t+=m){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const r=(s+t)/d;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;i+=C.get(I,n,r,e)}}w.set(i*k,I,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const CP={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:i,offset:a,mean:o,variance:l}=t;B(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),B(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),B(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),cy([s,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=d.length,v=h.length;let x=0,w=0,k=0,S=0;for(let C=0;C<c.length;++C)m[C]=f[x++]+(c[C]-h[w++])*p[k++]/Math.sqrt(d[S++]+u),x>=g&&(x=0),w>=v&&(w=0),k>=y&&(k=0),S>=b&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};const IP={kernelName:He,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;cy([s],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),l=Op(s.shape,i,o),u=Dp(l.length,i.length),c=Fp(s.shape,i,o),h=Mp(a,i.length),d=Pp(c,a,i.length),p=HM({inputs:{x:s},backend:n,attrs:{shape:l}}),f=zb({inputs:{x:p},backend:n,attrs:{perm:u}}),m=HM({inputs:{x:f},backend:n,attrs:{shape:c}}),g=lv({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};const _P={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=$y(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,o)}};const TP={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=eo(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},NP=My(Ze,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),EP={kernelName:Ze,backendName:"cpu",kernelFunc:NP},$P={kernelName:et,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(U(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let u=0;u<o.length;u++){const e=o[u],t=l[u];r[u]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function AP(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const RP={kernelName:Gt,backendName:"cpu",kernelFunc:AP};function OP(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=Q(s,t[0].shape)[0],a=t.map((e=>e.shape));Sp(a,i);let o=Cp(t.map((e=>e.shape)),i);if(0===U(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>U(e.shape)>0));if(1===l.length)return yy({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const e=l.map((e=>vy({inputs:{input:e},backend:n}))),t=l.map((e=>AP({inputs:{input:e},backend:n}))),r=OP({inputs:e,backend:n,attrs:{axis:i}}),s=OP({inputs:t,backend:n,attrs:{axis:i}}),a=fy({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const u=l.map((e=>{const t=U(e.shape.slice(i));return HM({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=Cp(u.map((e=>e.shape)),1);const h=1===u[0].shape[0],d=Vy(c,o,t[0].dtype,h),p=Cp(l.map((e=>e.shape)),i),f=n.makeTensorInfo(p,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const DP={kernelName:tt,backendName:"cpu",kernelFunc:OP};function FP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;cy([s,i],"conv2d");const h=Il(l),d=ml(s.shape,i.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,v="channelsLast"===d.dataFormat,x=new Is(d.outShape,s.dtype),w=le(s.shape),k=le(i.shape),S=w[0],C=v?w[1]:w[2],I=v?w[2]:1,_=v?1:w[1],T=x.strides[0],N=v?x.strides[1]:x.strides[2],E=v?x.strides[2]:1,$=v?1:x.strides[1],A=n.data.get(s.dataId).values,R=n.data.get(i.dataId).values,O=x.values;for(let D=0;D<d.batchSize;++D){const e=D*S,t=D*T;for(let n=0;n<d.outHeight;++n){const r=t+n*N,s=n*d.strideHeight-b;for(let t=0;t<p;++t){const n=s+t*m;if(n<0||n>=d.inHeight)continue;const i=t*k[0],a=e+n*C;for(let e=0;e<d.outWidth;++e){const t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const s=a+r*I;let o=i+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[s+e*_];for(let e=0;e<d.outChannels;++e)O[t+e*$]+=n*R[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,O)}const MP={kernelName:nt,backendName:"cpu",kernelFunc:FP};const PP={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;cy([s,i],"conv2dBackpropFilter");const h=Il(l),d=ml(s.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Is(d.filterShape,"float32"),v=d.padInfo.left,x=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,S=new Is(s.shape,s.dtype,w),C=new Is(i.shape,i.dtype,k);for(let I=0;I<m;++I){const e=Math.max(0,Math.ceil((x-I)/p)),t=Math.min(d.outHeight,(d.inHeight+x-I)/p);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((v-n)/f)),s=Math.min(d.outWidth,(d.inWidth+v-n)/f);for(let i=0;i<d.inChannels;++i)for(let a=0;a<d.outChannels;++a){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){const e=I+u*p-x;for(let t=r;t<s;++t){const r=n+t*f-v;o+=y?S.get(l,e,r,i)*C.get(l,u,t,a):S.get(l,i,e,r)*C.get(l,a,u,t)}}b.set(o,I,n,i,a)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const zP={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;cy([s,i],"conv2dBackpropInput");const h=le(i.shape),d=le(s.shape);let p=Il(u);const f=ml(a,i.shape,o,1,l,c,!1,p),m=new Is(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(i.dataId).values,[v,x,w]=h,{batchSize:k,filterHeight:S,filterWidth:C,inChannels:I,inHeight:_,inWidth:T,outChannels:N,outHeight:E,outWidth:$,strideHeight:A,strideWidth:R}=f;p=f.dataFormat;const O=S-1-f.padInfo.top,D=C-1-f.padInfo.left,F="channelsLast"===p,M=m.strides[0],P=F?m.strides[1]:m.strides[2],z=F?m.strides[2]:1,L=F?1:m.strides[1],B=d[0],V=F?d[1]:d[2],W=F?d[2]:1,U=F?1:d[1];for(let G=0;G<k;++G)for(let e=0;e<I;++e)for(let t=0;t<_;++t){const n=t-O,r=Math.max(0,Math.ceil(n/A)),s=Math.min(E,(S+n)/A);for(let i=0;i<T;++i){const a=i-D,o=Math.max(0,Math.ceil(a/R)),l=Math.min($,(C+a)/R);let u=0;for(let t=r;t<s;++t){const r=t*A-n;for(let n=o;n<l;++n){const s=B*G+V*t+W*n,i=v*(S-1-r)+x*(C-1-(n*R-a))+w*e;for(let e=0;e<N;++e){u+=y[s+U*e]*b[i+e]}}}g[M*G+P*t+z*i+L*e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const LP={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r;cy([s,i],"conv3d");const u=gl(s.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,v=g.top,x=new Is(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,S=x.values,C=le(s.shape),I=le(i.shape);for(let _=0;_<u.batchSize;++_){const e=_*C[0],t=_*x.strides[0];for(let n=0;n<u.outDepth;++n){const r=t+n*x.strides[1],s=n*u.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*p;if(n<0||n>=u.inDepth)continue;const i=t*I[0],a=e+n*C[1];for(let e=0;e<u.outHeight;++e){const t=r+e*x.strides[2],n=e*u.strideHeight-v;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=i+e*I[1],o=a+r*C[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const i=s+e*I[2],a=o+t*u.inChannels;let l=i;for(let e=0;e<u.inChannels;++e){const t=w[a+e];for(let e=0;e<u.outChannels;++e)S[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const BP={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:l}=r;cy([s,i],"conv3dBackpropFilterV2");const u=le(s.shape),c=le(i.shape),h=gl(s.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Is(h.filterShape,"float32"),v=b.values,[x,w,k,S]=b.strides,C=n.data.get(i.dataId).values,[I,_,T,N]=c,E=n.data.get(s.dataId).values,[$,A,R,O]=u,D=h.padInfo.front,F=h.padInfo.left,M=h.padInfo.top;for(let P=0;P<m;++P){const e=Math.max(0,Math.ceil((D-P)/d)),t=Math.min(h.outDepth,(h.inDepth+D-P)/d),n=P*x;for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((M-r)/p)),i=Math.min(h.outHeight,(h.inHeight+M-r)/p),a=r*w+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((F-n)/f)),l=Math.min(h.outWidth,(h.inWidth+F-n)/f),u=n*k+a;for(let a=0;a<h.inChannels;++a){const c=a*S+u;for(let u=0;u<h.outChannels;++u){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*$,g=c*I;for(let c=e;c<t;++c){const e=(P+c*d-D)*A+h,t=c*_+g;for(let c=s;c<i;++c){const s=(r+c*p-M)*R+e,i=c*T+t;for(let e=o;e<l;++e){const t=e*N+i;m+=E[(n+e*f-F)*O+s+a]*C[t+u]}}}}v[c+u]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const VP={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:l}=r;cy([s],"conv3dBackpropInputV2");const u=le(s.shape),c=le(i.shape),h=gl(l,i.shape,o,1,a),d=new Is(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(s.dataId).values,[v,x,w,k]=u,S=n.data.get(i.dataId).values,[C,I,_,T]=c,{batchSize:N,filterDepth:E,filterHeight:$,filterWidth:A,inChannels:R,inDepth:O,inHeight:D,inWidth:F,outChannels:M,outDepth:P,outHeight:z,outWidth:L,strideDepth:B,strideHeight:V,strideWidth:W}=h,U=E-1-h.padInfo.front,G=$-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let H=0;H<N;++H)for(let e=0;e<R;++e)for(let t=0;t<O;++t){const n=t-U,r=Math.max(0,Math.ceil(n/B)),s=Math.min(P,(E+n)/B);for(let i=0;i<D;++i){const a=i-G,o=Math.max(0,Math.ceil(a/V)),l=Math.min(z,($+a)/V);for(let u=0;u<F;++u){const c=u-j,h=Math.max(0,Math.ceil(c/W)),d=Math.min(L,(A+c)/W);let N=0;for(let t=r;t<s;++t){const r=t*B-n;for(let n=o;n<l;++n){const s=n*V-a;for(let i=h;i<d;++i){const a=v*H+x*t+w*n+k*i,o=C*(E-1-r)+I*($-1-s)+_*(A-1-(i*W-c))+T*e;for(let e=0;e<M;++e){N+=b[a+e]*S[o+e]}}}}p[f*H+m*t+g*i+y*u+e]=N}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},WP=My(lt,(e=>Math.cos(e))),UP={kernelName:lt,backendName:"cpu",kernelFunc:WP},GP=My(ut,(e=>Math.cosh(e))),jP={kernelName:ut,backendName:"cpu",kernelFunc:GP};const HP={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=i.shape[0],[m,g]=o,y=_a([f,m,g,p],"float32"),b=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,x=n.data.get(s.dataId).values,w=le(s.shape),k=le(y.shape);for(let S=0;S<f;S++){const e=4*S,t=b[e],n=b[e+1],r=b[e+2],s=b[e+3],i=v[S];if(i>=c)continue;const a=m>1?(r-t)*(h-1)/(m-1):0,o=g>1?(s-n)*(d-1)/(g-1):0;for(let c=0;c<m;c++){const e=m>1?t*(h-1)+c*a:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+S*k[0];y.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),r=Math.ceil(e),a=e-t;for(let e=0;e<g;e++){const l=g>1?n*(d-1)+e*o:.5*(n+s)*(d-1);if(l<0||l>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+c*k[1]+S*k[0];y.values[n]=u}continue}const h=Math.floor(l),f=Math.ceil(l),m=l-h;for(let n=0;n<p;n++){let s=n+h*w[2]+t*w[1]+i*w[0];const o=x[s];s=n+f*w[2]+t*w[1]+i*w[0];const l=x[s];s=n+h*w[2]+r*w[1]+i*w[0];const u=x[s];s=n+f*w[2]+r*w[1]+i*w[0];const d=o+(l-o)*m,p=u+(x[s]-u)*m;s=n+e*k[2]+c*k[1]+S*k[0],y.values[s]=d+(p-d)*a}}}else for(let t=0;t<g;++t){const r=g>1?n*(d-1)+t*o:.5*(n+s)*(d-1);if(r<0||r>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+S*k[0];y.values[n]=u}continue}const a=Math.round(r),l=Math.round(e);for(let e=0;e<p;e++){const n=e+a*w[2]+l*w[1]+i*w[0],r=e+t*k[2]+c*k[1]+S*k[0];y.values[r]=x[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const qP={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;cy(s,"cumprod");const l=_u([i],s.shape.length);let u=s;null!=l&&(u=zb({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Nu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=zs(u.dtype,"int32"),d=de(U(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=a?1:p[t];else{const n=m(y,e-1);d[t]=a?p[n]*d[n]:p[t]*d[n]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=zb({inputs:{x:g},backend:n,attrs:{perm:Tu(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};const KP={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;cy(s,"cumsum");const l=_u([i],s.shape.length);let u=s;null!=l&&(u=zb({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Nu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=zs(u.dtype,"int32"),d=pe(U(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=a?0:p[t];else{const n=m(y,e-1);d[t]=a?p[n]+d[n]:p[t]+d[n]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=zb({inputs:{x:g},backend:n,attrs:{perm:Tu(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};const XP={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=$y(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,e)}if(2===s.shape.length){const e=Ay(n.bufferSync(s),n.bufferSync(i),a,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const YP={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r;B("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*i,d=u*i,p=c/(i*i),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let y=0;y<o;++y)for(let e=0;e<h;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<d;++e){const r=Math.floor(e/i),s=(n*i+e%i)*p;for(let e=0;e<p;++e){const n=e+s+c*(r+u*(t+l*y));m[g++]=f[n]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,m)}};function QP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;cy([s,i],"depthwiseConv2DNative");const c=le(s.shape),h=le(i.shape);let d=l;null==d&&(d=[1,1]),B(Sl(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=ml(s.shape,i.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,v=b.left,x=b.top,w=p.outChannels/p.inChannels,k=new Is(p.outShape,s.dtype),S=n.data.get(s.dataId).values,C=n.data.get(i.dataId).values,I=k.values;for(let _=0;_<p.batchSize;++_){const e=_*c[0],t=_*k.strides[0];for(let n=0;n<p.outHeight;++n){const r=t+n*k.strides[1],s=n*p.strideHeight-x;for(let t=0;t<f;++t){const n=s+t*g;if(n<0||n>=p.inHeight)continue;const i=t*h[0],a=e+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-v;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const s=i+e*h[1],o=a+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=S[o+e];for(let e=0;e<w;++e)I[l+e]+=t*C[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const ZP={kernelName:mt,backendName:"cpu",kernelFunc:QP};const JP={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;cy([s,i],"depthwiseConv2dNativeBackpropFilter");const h=ml(s.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Is(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,v=h.outChannels/h.inChannels,x=n.data.get(s.dataId).values,w=new Is(s.shape,s.dtype,x),k=n.data.get(i.dataId).values,S=new Is(i.shape,i.dtype,k);for(let C=0;C<f;++C){const e=Math.max(0,Math.ceil((b-C)/d)),t=Math.min(h.outHeight,(h.inHeight+b-C)/d);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/p)),s=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let i=0;i<h.outChannels;++i){const a=Math.trunc(i/v),o=i%v;let l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){const e=C+o*d-b;for(let t=r;t<s;++t){const r=n+t*p-y;l+=w.get(u,e,r,a)*S.get(u,o,t,i)}}g.set(l,C,n,a,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const ez={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;cy([s,i],"depthwiseConv2DNativeBackpropInput");const h=le(s.shape),d=le(i.shape),p=ml(c,i.shape,a,o,l,u,!0),f=new Is(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,v=n.data.get(s.dataId).values,[x,w,k]=h,S=n.data.get(i.dataId).values,[C,I,_]=d,{batchSize:T,filterHeight:N,filterWidth:E,inChannels:$,inHeight:A,inWidth:R,outChannels:O,outHeight:D,outWidth:F,strideHeight:M,strideWidth:P}=p,z=N-1-p.padInfo.top,L=E-1-p.padInfo.left,B=O/$;for(let V=0;V<T;++V)for(let e=0;e<$;++e)for(let t=0;t<A;++t){const n=t-z,r=Math.max(0,Math.ceil(n/M)),s=Math.min(D,(N+n)/M);for(let i=0;i<R;++i){const a=i-L,o=Math.max(0,Math.ceil(a/P)),l=Math.min(F,(E+a)/P);let u=0;for(let t=r;t<s;++t){const r=t*M-n;for(let n=o;n<l;++n){const s=x*V+w*t+k*n,i=C*(N-1-r)+I*(E-1-(n*P-a))+_*e;for(let t=0;t<B;++t){u+=v[s+(e*B+t)]*S[i+t]}}}m[g*V+y*t+b*i+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const tz={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=U(r.shape),i=n.data.get(r.dataId).values,a=_a([s,s],r.dtype),o=a.values;for(let u=0;u<i.length;u++)o[u*s+u]=i[u];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},nz={kernelName:vt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r,u=n,c=u.data.get(s.dataId).values,h=s.shape.length,d=u.data.get(i.dataId).values,p=i.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:C,dilationHeight:I,dilationWidth:_,outShape:T}=dl(s.shape,i.shape,a,o,"NHWC",l),N=U(T),E=T.length,$=ee(s.dtype,N);for(let A=0;A<f;++A)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const r=n*k-x.left;for(let a=0;a<y;++a){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<S;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<C;++t){const l=r+t*_;if(l>=0&&l<g){const r=ge([A,n,l,a],h,le(s.shape)),u=ge([e,t,a],p,le(i.shape)),f=c[r]+d[u];f>o&&(o=f)}}}$[ge([A,e,n,a],E,le(T))]=o}}}return{dataId:u.write(hs($,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}},rz={kernelName:wt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:i,dy:a}=t,{strides:o,pad:l,dilations:u}=r,c=n,h=ce(s.shape,c.data.get(s.dataId).values),d=ce(i.shape,c.data.get(i.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:C,dilationWidth:I,outShape:_}=dl(s.shape,i.shape,o,l,"NHWC",u);B(a.rank===_.length,(()=>`Error in ${wt}, dy must have the same rank as output ${_.length}, but got ${a.rank}`));const T=ce(_,c.data.get(a.dataId).values),N=fe(i.shape,i.dtype);for(let E=0;E<p;++E)for(let e=0;e<y;++e){const t=e*x-v.top;for(let n=0;n<b;++n){const r=n*w-v.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,a=0,o=0;for(let e=0;e<k;++e){const n=t+e*C;if(n>=0&&n<f)for(let t=0;t<S;++t){const l=r+t*I;if(l>=0&&l<m){const r=h[E][n][l][s]+d[e][t][s];r>i&&(i=r,a=e,o=t)}}}N[a][o][s]+=T[E][e][n][s]}}}return{dataId:c.write(hs(N,s.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},sz={kernelName:xt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:i,dy:a}=t,{strides:o,pad:l,dilations:u}=r,c=n,h=ce(s.shape,c.data.get(s.dataId).values),d=ce(i.shape,c.data.get(i.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:C,dilationWidth:I,outShape:_}=dl(s.shape,i.shape,o,l,"NHWC",u);B(a.rank===_.length,(()=>`Error in ${xt}, dy must have the same rank as output ${_.length}, but got ${a.rank}`));const T=ce(_,c.data.get(a.dataId).values),N=fe(s.shape,s.dtype);for(let E=0;E<p;++E)for(let e=0;e<y;++e){const t=e*x-v.top;for(let n=0;n<b;++n){const r=n*w-v.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,a=t<0?0:t,o=r<0?0:r;for(let e=0;e<k;++e){const n=t+e*C;if(n>=0&&n<f)for(let t=0;t<S;++t){const l=r+t*I;if(l>=0&&l<m){const r=h[E][n][l][s]+d[e][t][s];r>i&&(i=r,a=n,o=l)}}}N[E][a][o][s]+=T[E][e][n][s]}}}return{dataId:c.write(hs(N,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const iz={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:i,options:a}=r,{contextOptions:o,imageOptions:l}=a||{},u=(null===l||void 0===l?void 0:l.alpha)||1,c=(null===o||void 0===o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=i.getContext(c,(null===o||void 0===o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let v=0;v<d*p;++v){const e=[0,0,0,255*u];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===s.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===s.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}i.width=p,i.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),s}};function az(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;let o;cy(s,"sum"),o="bool"===s.dtype?ky({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):yy({inputs:{x:s},backend:n});const l=o.shape.length,u=Q(i,o.shape),c=_u(u,l);let h=u,d=o;null!=c&&(d=zb({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Nu(h.length,l)),Iu("sum",h,d.shape.length);const[p,f]=Su(d.shape,h);let m=gy(n,p,zs(d.dtype,"int32"));const g=U(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let v=0;v<y.length;++v){const e=v*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[v]=t}if(a){const e=m;m=HM({inputs:{x:m},backend:n,attrs:{shape:Cu(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const oz={kernelName:ar,backendName:"cpu",kernelFunc:az};const lz={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:a,summedDims:o,idDims:l}=af(s,i.length);lf(a.length,l,i);const{path:u,steps:c}=uf(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=of(p,l[e]);let s;cf(t)?s=i[e]:(s=zb({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);j(s.shape,a)||(s=HM({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=$b({inputs:{a:s,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=az({inputs:{x:d},backend:n,attrs:{axis:u[m]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}};const uz={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;cy([r,s],"eluGrad");const i=new Float32Array(U(s.shape)),a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<a.length;++l){const e=a[l];i[l]=e>=0?o[l]:o[l]*(e+1)}return n.makeTensorInfo(s.shape,"float32",i)}},cz=Vp,hz=Wp,dz=Up,pz=Gp,fz=jp,mz=Hp,gz=My(Tt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+cz*n);return t*(1-((((mz*r+fz)*r+pz)*r+dz)*r+hz)*r*Math.exp(-n*n))})),yz={kernelName:Tt,backendName:"cpu",kernelFunc:gz};function bz(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:i}=r,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(B(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),HM({inputs:{x:s},backend:n,attrs:{shape:o}})}const vz={kernelName:$t,backendName:"cpu",kernelFunc:bz},xz=py(((e,t)=>e/t)),wz=Cy(St,xz),kz={kernelName:St,backendName:"cpu",kernelFunc:wz};function Sz(e,t,n){const r=e.shape,s=r[0],i=r[1],a=n.data.get(e.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[s,i],c=U(u),h=J("float32",c),d=J("float32",c);for(let g=0;g<s;g++){const e=lv({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,i]}}),r=lv({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,i]}}),s=fy({inputs:{real:e,imag:r},backend:n}),{real:a,imag:u}=Cz(s,t,n),c=qp(a,u);for(let t=0;t<i;t++){const e=Qp(c,t);h[g*i+t]=e.real,d[g*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=fy({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Cz(e,t,n){const r=U(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0===((o=r)&o-1)){const s=Iz(i,a,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),i=n.makeTensorInfo([],"float32",cs(r,"float32")),a=yy({inputs:{x:i},backend:n}),l=kz.kernelFunc({inputs:{a:e,b:i},backend:n}),u=kz.kernelFunc({inputs:{a:t,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,a=0;for(let r=0;r<t;r++){const o=ef(s*r,t,n),l=Qp(e,r);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=t,a/=t),Zp(r,i,a,s)}return r}(qp(i,a),r,t);return Kp(e)}var o}function Iz(e,t,n,r,s){if(1===n)return{real:e,imag:t};const i=qp(e,t),a=n/2,o=Xp(i),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=fy({inputs:{real:h,imag:d},backend:s}),f=Yp(i),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),v=s.makeTensorInfo(y,"float32",g),x=fy({inputs:{real:b,imag:v},backend:s}),w=Iz(l,u,a,r,s),k=w.real,S=w.imag,C=[k.length],I=s.makeTensorInfo(C,"float32",k),_=s.makeTensorInfo(C,"float32",S),T=fy({inputs:{real:I,imag:_},backend:s}),N=Iz(m,g,a,r,s),E=N.real,$=N.imag,A=[E.length],R=s.makeTensorInfo(A,"float32",E),O=s.makeTensorInfo(A,"float32",$),D=fy({inputs:{real:R,imag:O},backend:s}),F=Jp(n,r),M=[F.real.length],P=s.makeTensorInfo(M,"float32",F.real),z=s.makeTensorInfo(M,"float32",F.imag),L=fy({inputs:{real:P,imag:z},backend:s}),B=$b({inputs:{a:L,b:D},backend:s}),V=Ny({inputs:{a:T,b:B},backend:s}),W=Tv({inputs:{a:T,b:B},backend:s}),U=vy({inputs:{input:V},backend:s}),G=vy({inputs:{input:W},backend:s}),j=AP({inputs:{input:V},backend:s}),H=AP({inputs:{input:W},backend:s}),q=OP({inputs:[U,G],backend:s,attrs:{axis:0}}),K=OP({inputs:[j,H],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const _z={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=U(r.shape),i=r.shape[r.shape.length-1],a=HM({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=Sz(a,!1,n),l=HM({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function Tz(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:i}=n,a=i||ie(s),o=ee(a,U(r));return function(e,t){e.fill(t)}(o,s),t.makeTensorInfo(r,a,o)}const Nz={kernelName:Ot,backendName:"cpu",kernelFunc:Tz};const Ez={kernelName:Dt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,i=r,a=J(s.dtype,U(s.shape)),[o,l,u,c]=s.shape,h=i.data.get(s.dataId).values;for(let d=0;d<o;d++){const e=d*u*l*c;for(let t=0;t<l;t++){const n=t*(u*c);for(let t=0;t<u;t++){const r=t*c;for(let s=0;s<c;s++){const i=Math.round(u-t-1),o=e+n+r+s;let l=h[o];if(i>=0&&i<u){l=h[e+n+i*c+s]}a[o]=l}}}}return{dataId:i.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const $z={kernelName:Pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=FP({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=m;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const e=HM({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=Ny({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Ny({inputs:{a:m,b:a},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=HM({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=jM(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=jM(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}};const Az={kernelName:zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=QP({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=m;m=Ny({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=jM(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const Rz={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=U(r.shape),a=s.shape,o=a[a.length-1],[l,u,c,h]=zp(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=rb(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,i);return n.makeTensorInfo(l,r.dtype,d.values)}};const Oz={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r;cy([s,i],"gatherV2");const l=Q(a,s.shape)[0],u=n.data.get(i.dataId).values,c=s.shape[l];for(let v=0;v<u.length;++v){const e=u[v];B(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=U(i.shape),p=Tf(s,i,l,h),f=HM({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=HM({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=sb(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}};const Dz={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=U(r.shape),i=r.shape[r.shape.length-1],a=HM({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=Sz(a,!0,n),l=HM({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},Fz=My(jt,(e=>Number.isFinite(e)?1:0),"bool"),Mz={kernelName:jt,backendName:"cpu",kernelFunc:Fz},Pz=My(Ht,(e=>Math.abs(e)===1/0?1:0),"bool"),zz={kernelName:Ht,backendName:"cpu",kernelFunc:Pz},Lz=My(qt,(e=>Number.isNaN(e)?1:0),"bool"),Bz={kernelName:qt,backendName:"cpu",kernelFunc:Lz};const Vz={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=yb(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}},Wz=My(Jt,(e=>Math.log1p(e))),Uz={kernelName:Jt,backendName:"cpu",kernelFunc:Wz},Gz=py(((e,t)=>e&&t)),jz=Cy(en,Gz,null,"bool"),Hz={kernelName:en,backendName:"cpu",kernelFunc:jz},qz=My(tn,(e=>e?0:1),"bool"),Kz={kernelName:tn,backendName:"cpu",kernelFunc:qz},Xz=py(((e,t)=>e||t)),Yz=Cy(nn,Xz,null,"bool"),Qz={kernelName:nn,backendName:"cpu",kernelFunc:Yz};const Zz={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=r;cy(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=U(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let m=0;m<d;m++){const e=f(m),t=h[m]*Math.pow(a+o*e,-l);p[m]=t}return n.makeTensorInfo(s.shape,s.dtype,p)}};const Jz={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;cy(a,"LRNGrad");const h=U(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%d,t=b-e+Math.max(0,e-o),n=b-e+Math.min(d,e+o+1);let r=0;for(let s=t;s<n;s++)r+=Math.pow(f[s],2);r=u*r+l;for(let s=t;s<n;s++){let e=-2*u*c*f[s]*m[b]/r;b===s&&(e+=Math.pow(r,-c)),e*=p[b],g[s]+=e}}return n.makeTensorInfo(a.shape,s.dtype,g)}};function eL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=n;let l=s.shape;const u=l.length,c=Q(i,l);let h=c;const d=_u(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=Pb(p,l,s.dtype,d,e),h=Nu(h.length,u),l=e}cy(s,"max"),Iu("max",h,u);const[f,m]=Su(l,h),g=wb(p,U(m),f,s.dtype),y=o.write(g,f,s.dtype);let b=f;if(a){b=Cu(f,c)}return{dataId:y,shape:b,dtype:s.dtype}}const tL={kernelName:an,backendName:"cpu",kernelFunc:eL};const nL={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;cy(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;B(Sl(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=pl(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&j(u.inShape,u.outShape))c=yy({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=le(s.shape),r=yP(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const rL={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;cy(s,"maxPool3d");const c=fl(s.shape,i,a,1,o,l,u),h=vP(n.data.get(s.dataId).values,s.shape,s.dtype,le(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const sL={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;cy([s,i],"maxPool3DGrad");const c=fl(i.shape,a,o,1,l,u),h=function(e,t){const n=_a(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,i=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let v=b;for(;v<0;)v+=a;const x=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*i-f;let k=p;for(;k<0;)k+=l;const S=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,I=-1;for(let t=v;t<x;t+=a){const n=t-b;for(let r=d;r<w;r+=o){const s=r-u;for(let i=k;i<S;i+=l){const a=i-p,o=e.get(m,t,r,i,g);o>=C&&(C=o,I=n*c*h+s*c+a)}}}n.set(I,m,y,r,s,g)}}}return n}(n.bufferSync(i),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,v=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=x-1-c.padInfo.left,S=v-1-c.padInfo.top,C=_a(i.shape,"float32"),I=n.bufferSync(s);for(let _=0;_<c.batchSize;++_)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-w,i=n-S,a=r-k;let o=0;for(let t=0;t<b;t+=m){const n=(s+t)/d;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<v;r+=g){const s=(i+r)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<x;i+=y){const l=(a+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=b*v*x-1-h.get(_,n,s,l,e)===t*v*x+r*x+i?1:0;if(0===u)continue;o+=I.get(_,n,s,l,e)*u}}}C.set(o,_,t,n,r,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const iL={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;cy([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=pl(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=_a(d.outShape,o.dtype,bP(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=x-1-d.padInfo.left,k=v-1-d.padInfo.top,S=_a(o.shape,"float32"),C=n.data.get(s.dataId).values,I=_a(s.shape,"float32",C);for(let _=0;_<d.batchSize;++_)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-k,s=n-w;let i=0;for(let t=0;t<v;t+=y){const n=(r+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<x;r+=b){const a=(s+r)/g;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;const o=v*x-1-f.get(_,n,a,e)===t*x+r?1:0;if(0===o)continue;i+=I.get(_,n,a,e)*o}}S.set(i,_,t,n,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const aL={kernelName:dn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{filterSize:i,strides:a,pad:o,includeBatchInIndex:l}=n,u=r;cy(s,"MaxPoolWithArgmax");const c=u.data.get(s.dataId).values,h=pl(s.shape,i,a,[1,1],o),[d,p]=function(e,t,n,r,s){const i=yP(e,0,n,le(t),s,"max"),a=bP(e,t,n,s,!0,r);return[i.values,a.values]}(c,s.shape,s.dtype,l,h),f=u.write(d,h.outShape,s.dtype),m=u.write(p,h.outShape,s.dtype);return[{dataId:f,shape:h.outShape,dtype:s.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};const oL={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=Q(i,s.shape),l=U(Su(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=ky({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=wz({inputs:{a:h,b:c},backend:n});u.push(d);const p=az({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const lL={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;cy(s,"min");const o=Q(i,s.shape);let l=o;const u=_u(l,s.shape.length);let c=s;null!=u&&(c=zb({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Nu(l.length,s.shape.length)),Iu("min",l,c.shape.length);const[h,d]=Su(c.shape,l),p=U(d),f=pe(U(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=HM({inputs:{x:g},backend:n,attrs:{shape:Cu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const uL={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,mode:a}=r;cy(s,"mirrorPad");const o=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=i.map((e=>e[0])),u=i.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===a?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=le(s.shape),f=U(o),m=o.length,g=le(o),y=J(s.dtype,f);for(let b=0;b<f;b++){let e=ye(b,m,g);for(let n=0;n<m;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-c:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+c);e=e.map(((e,t)=>e-l[t]));const t=ge(e,d,p);y[b]=h[t]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},cL=py(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),hL=Cy(yn,cL),dL={kernelName:yn,backendName:"cpu",kernelFunc:hL};function pL(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=s.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=Q([o],s.shape),u=eL({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Cu(u.shape,l),h=HM({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Tv({inputs:{a:s,b:h},backend:n}),p=Hy({inputs:{x:d},backend:n}),f=az({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=HM({inputs:{x:f},backend:n,attrs:{shape:c}}),g=wz({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const fL={kernelName:ur,backendName:"cpu",kernelFunc:pL};const mL={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r;cy(s,"multinomial");const l=o?s:pL({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,i],p=pe(U(d),"int32");for(let f=0;f<u;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let s=1;s<t.length;++s)t[s]=t[s-1]+h[e+s];const n=Uc.alea(a.toString()),r=f*i;for(let s=0;s<i;++s){const e=n();p[r+s]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[r+s]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}},gL=Ed;const yL={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;cy(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=gL(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},bL=$d;const vL={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;cy(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=bL(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},xL=Ad;const wL={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;cy(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=xL(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};const kL={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:a,onValue:o,offValue:l}=r;cy(s,"oneHot");const u=U(s.shape),c=new Float32Array(u*a);c.fill(l);const h=n.data.get(s.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<a&&(c[d*a+h[d]]=o);return n.makeTensorInfo([...s.shape,a],i,c)}};function SL(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=vy({inputs:{input:r},backend:n}),t=SL({inputs:{x:e},backend:n}),s=AP({inputs:{input:r},backend:n}),i=SL({inputs:{x:s},backend:n}),a=fy({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return Tz({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const CL={kernelName:Rr,backendName:"cpu",kernelFunc:SL};const IL={kernelName:In,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=vy({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),i=AP({inputs:{input:s},backend:r}),a=SL({inputs:{x:i},backend:r}),o=fy({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return Tz({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function _L(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return bz({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{V(i,e.shape,"All tensors passed to stack must have matching shapes"),B(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=t.map((e=>{const t=bz({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),u=OP({inputs:l,backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const TL={kernelName:Tn,backendName:"cpu",kernelFunc:_L};const NL={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;cy(s,"pad");const o=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=i.map((e=>e[0])),u=n.data.get(s.dataId).values,c=U(s.shape),h=s.shape.length,d=le(s.shape),p=U(o),f=o.length,m=le(o),g=J(s.dtype,p);0!==a&&g.fill(a);for(let y=0;y<c;y++){g[ge(ye(y,h,d).map(((e,t)=>e+l[t])),f,m)]=u[y]}return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},EL=py(((e,t)=>Math.pow(e,t))),$L=Cy(En,EL),AL={kernelName:En,backendName:"cpu",kernelFunc:$L};const RL={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.data.get(e.dataId).values)),u=s.map((e=>e.shape)),c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,[d,p,f]=jb(l,u,c,i.shape,i.dtype,h,a.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}};const OL={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:i}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,c]=qb(a,r.shape,r.dtype,o,s.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};const DL={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=Zb(u,s.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,m)}};const FL={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:i,step:a}=n,o=Jb(r,s,a,i);return t.makeTensorInfo([o.length],i,o)}},ML=My(Pn,(e=>1/e)),PL={kernelName:Pn,backendName:"cpu",kernelFunc:ML};const zL={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;cy(s,"resizeBilinear");const l=le(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(U([h,u,c,f])),y=[i&&u>1?d-1:d,i&&c>1?p-1:p],b=[i&&u>1?u-1:u,i&&c>1?c-1:c];let v=0;const x=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<u;e++){let t;t=a?x*(e+.5)-.5:x*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),i=k*l[0]+n*l[1],o=k*l[0]+s*l[1];for(let e=0;e<c;e++){let t;t=a?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),s=t-n,u=Math.min(p-1,Math.ceil(t)),c=i+n*l[2],h=o+n*l[2],d=i+u*l[2],y=o+u*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],i=t+(m[d+e]-t)*s,a=i+(n+(m[y+e]-n)*s-i)*r;g[v++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}};const LL={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;cy([i,s],"resizeBilinearGrad");const o=le(s.shape),[l,u,c,h]=s.shape,[,d,p]=i.shape,f=new Float32Array(l*u*c*h),m=[a&&d>1?u-1:u,a&&p>1?c-1:c],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],v=n.data.get(i.dataId).values;let x=0;for(let w=0;w<l;w++){const e=w*o[0];for(let t=0;t<d;t++){const n=t*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),i=e+r*o[1],a=e+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=i+n*o[2],m=i+r*o[2],g=a+n*o[2],y=a+r*o[2],w=d*u,k=d*s,S=l*u,C=l*s;for(let e=0;e<h;e++){const t=v[x++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*S,f[y+e]+=t*C}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}};const BL={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;cy(s,"resizeNearestNeighbor");const l=le(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),y=[i&&u>1?d-1:d,i&&c>1?p-1:p],b=[i&&u>1?u-1:u,i&&c>1?c-1:c],v=y[0]/b[0],x=y[1]/b[1];let w=0;for(let k=0;k<h;k++){const e=k*l[0];for(let t=0;t<u;t++){const n=a?v*(t+.5):v*t;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=e+r*l[1];for(let e=0;e<c;e++){const t=a?x*(e+.5):x*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}};const VL={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;cy([i,s],"resizeNearestNeighborGrad");const o=le(s.shape),l=le(i.shape),[u,c,h,d]=s.shape,[,p,f]=i.shape,m=new Float32Array(u*c*h*d),g=n.data.get(i.dataId).values,y=[a&&p>1?c-1:c,a&&f>1?h-1:h],b=[a&&p>1?p-1:p,a&&f>1?f-1:f],v=y[0]/b[0],x=y[1]/b[1],w=1/v,k=1/x,S=2*Math.ceil(w)+2,C=2*Math.ceil(k)+2;for(let I=0;I<u;I++){const e=I*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],r=Math.floor(t*w),s=Math.floor(r-S/2);for(let i=0;i<h;i++){const r=n+i*o[2],u=Math.floor(i*k),y=Math.floor(u-C/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<S;r++){const u=r+s;if(u<0||u>=p)continue;const d=e+u*l[1],m=u*v;if(t===Math.min(c-1,a?Math.round(m):Math.floor(m)))for(let e=0;e<C;e++){const t=e+y;if(t<0||t>=f)continue;const r=d+t*l[2],s=t*x;i===Math.min(h-1,a?Math.round(s):Math.floor(s))&&(o+=g[r+n])}}m[r+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}};const WL={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r;cy(s,"reverse");const a=s.shape.length,o=Q(i,s.shape);if(0===a)return yy({inputs:{x:s},backend:n});const l=new Is(s.shape,s.dtype),u=n.bufferSync(s);for(let c=0;c<l.size;c++){const e=l.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=s.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},UL={kernelName:Fr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,{radians:i,fillValue:a,center:o}=n,l=r,u=J(s.dtype,U(s.shape)),[c,h,d,p]=s.shape,[f,m]=Rp(o,h,d),g=Math.sin(i),y=Math.cos(i),b=l.data.get(s.dataId).values;for(let v=0;v<c;v++){const e=v*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let r=0;r<d;r++){const s=r*p;for(let i=0;i<p;i++){const o=[c,t,r,i],l=o[2],v=o[1];let x=(l-f)*y-(v-m)*g,w=(l-f)*g+(v-m)*y;x=Math.round(x+f),w=Math.round(w+m);let k=a;if("number"!==typeof a&&(k=3===i?255:a[i]),x>=0&&x<d&&w>=0&&w<h){k=b[e+w*(d*p)+x*p+i]}u[e+n+s+i]=k}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},GL=My(Hn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),jL={kernelName:Hn,backendName:"cpu",kernelFunc:GL};const HL={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Lh(0,s,a),d=rv(n.bufferSync(s),n.bufferSync(i),a,h,u,l,o,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}};function qL(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function KL(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const XL={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:a}=r,o=function(e,t,n,r,s,i){const a=ee("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),l=o*s;for(let e=0;e<s;++e)a[l+e]="left"===i?qL(n,t[e+l]):KL(n,t[e+l])}return a}(n.data.get(s.dataId).values,n.data.get(i.dataId).values,s.shape[0],s.shape[1],i.shape[1],a);return n.makeTensorInfo(i.shape,"int32",o)}};const YL={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t;cy([r,s,i],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,c=zs(s.dtype,i.dtype),h=pe(U(s.shape),c);let d=0;const p=0===a||a>1||1===s.shape.length?1:U(s.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<p;e++)1===o[f]?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(s.shape,c,h)}},QL=Lp,ZL=Bp,JL=My(Zn,(e=>e>=0?ZL*e:QL*(Math.exp(e)-1))),eB={kernelName:Zn,backendName:"cpu",kernelFunc:JL},tB=My(nr,(e=>e<0?-1:e>0?1:0)),nB={kernelName:nr,backendName:"cpu",kernelFunc:tB},rB=My(er,(e=>Math.sin(e))),sB={kernelName:er,backendName:"cpu",kernelFunc:rB},iB=My(tr,(e=>Math.sinh(e))),aB={kernelName:tr,backendName:"cpu",kernelFunc:iB},oB=Math.log(1.1920928955078125e-7)+2,lB=My(sr,(e=>{const t=e>-oB,n=e<oB,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),uB={kernelName:sr,backendName:"cpu",kernelFunc:lB};const cB={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;cy([s],"spaceToBatchND");const o=U(i),l=[[0,0]];l.push(...a);for(let g=1+i.length;g<s.shape.length;++g)l.push([0,0]);const u=NL.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Op(u.shape,i,o,!1),h=Dp(c.length,i.length,!1),d=Fp(u.shape,i,o,!1),p=HM({inputs:{x:u},backend:n,attrs:{shape:c}}),f=zb({inputs:{x:p},backend:n,attrs:{perm:h}}),m=HM({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};const hB={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,m]=cv(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const dB={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,c,h]=hv(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};const pB={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,c]=dv(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const fB={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,c]=dv(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}};const mB={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Lh(0,s,o),p=!1,f=n.bufferSync(s);let m;switch(i.dtype){case"bool":m=rv(f,n.bufferSync(i),o,d,c,u,l,h,Boolean(n.data.get(a.dataId).values[0]),p);break;case"float32":m=rv(f,n.bufferSync(i),o,d,c,u,l,h,n.data.get(a.dataId).values[0],p);break;case"int32":m=rv(f,n.bufferSync(i),o,d,c,u,l,h,n.data.get(a.dataId).values[0],p);break;case"string":m=rv(f,n.bufferSync(i),o,d,c,u,l,h,fs(n.data.get(a.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}};const gB={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=Q(a,s.shape)[0],l=df(s,i,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=lv({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},yB={kernelName:gr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:r}=t,s=n;cy(r,"square");const i=s.data.get(r.dataId).values,a=new Float32Array(i.length);for(let o=0;o<i.length;++o){const e=i[o];a[o]=e*e}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},bB=py(((e,t)=>{const n=e-t;return n*n})),vB=Cy(mr,bB),xB={kernelName:mr,backendName:"cpu",kernelFunc:vB},wB=My(Or,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),kB={kernelName:Or,backendName:"cpu",kernelFunc:wB};const SB={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;cy(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:x}=Zo(s.shape,i,a,o,l,u,c,h,d);let w;if(m)w=HM({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){B(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Lo(b,v,x),t=lv({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=HM({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=vv(p,n.bufferSync(s),x,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};const CB={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=wv(d,p,s,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const IB={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=Sv(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const _B={kernelName:wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=Cv(n.data.get(i.dataId).values,s);return n.makeTensorInfo(i.shape,"int32",a)}},TB=My(Sr,(e=>Math.tan(e))),NB={kernelName:Sr,backendName:"cpu",kernelFunc:TB},EB=My(Cr,(e=>Math.tanh(e)));const $B={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:i}=t,{sliceRank:a,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=Lh(0,s,r.shape),h=n.bufferSync(s),d=n.bufferSync(i),p=n.bufferSync(r),f=rv(h,d,r.shape,c,l,o,a,u,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};const AB={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;cy(s,"tile");const a=Ev(n.bufferSync(s),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}};const RB={kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r;cy(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=Rv(o,s.shape,s.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const OB={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=[c,f,m,p],y=le(s.shape),b=y[0],v=y[1],x=y[2],w=le(g),k=w[0],S=w[1],C=w[2],I=J(s.dtype,U(g));I.fill(l);const _=r.data.get(s.dataId).values,T=r.data.get(i.dataId).values;for(let N=0;N<c;++N){const e=1===i.shape[0]?T:T.subarray(8*N,8*N+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<p;++r){let s;const i=e[6]*n+e[7]*t+1;if(0===i)continue;const u=(e[0]*n+e[1]*t+e[2])/i,c=(e[3]*n+e[4]*t+e[5])/i,p=DB(u,d,o),f=DB(c,h,o);switch(a){case"nearest":s=MB(_,h,d,b,v,x,N,f,p,r,l);break;case"bilinear":s=PB(_,h,d,b,v,x,N,f,p,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}I[N*k+t*S+n*C+r]=s}return r.makeTensorInfo(g,s.dtype,I)}return{dataId:r.write(I,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function DB(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return M(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return M(0,n,t-1)}(e,t);case"nearest":return function(e,t){return M(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function FB(e,t,n,r,s,i,a,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[a*r+o*s+l*i+u]:c}function MB(e,t,n,r,s,i,a,o,l,u,c){return FB(e,t,n,r,s,i,a,Math.round(o),Math.round(l),u,c)}function PB(e,t,n,r,s,i,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*FB(e,t,n,r,s,i,a,h,d,u,c)+(l-d)*FB(e,t,n,r,s,i,a,h,f,u,c))+(o-h)*((f-l)*FB(e,t,n,r,s,i,a,p,d,u,c)+(l-d)*FB(e,t,n,r,s,i,a,p,f,u,c))}const zB={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;cy(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=Ov(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const LB={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s.shape.length,o=s.shape[i],l=new Array(a-1);let u=0;for(let p=0;p<a;p++)p!==i&&(l[u++]=s.shape[p]);const c=new Array(a).fill(0),h=s.shape.slice();h[i]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[i]=p;const e=lv({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[p]=HM({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}};const BB={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r;cy(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-i.shape.length;let c=i;for(let d=0;d<u;++d){const e=bz({inputs:{input:c},backend:n,attrs:{dim:d+1}});c=e,l.push(e)}for(let d=0;d<a;++d){const e=cs(d,"int32"),t=n.makeTensorInfo([],"int32",e),r=Uy({inputs:{a:t,b:c},backend:n}),i=ky({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=$b({inputs:{a:i,b:s},backend:n}),u=az({inputs:{x:a},backend:n,attrs:{axis:0,keepDims:!1}});o.push(u),l.push(t),l.push(r),l.push(i),l.push(a),l.push(u)}const h=_L({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},VB=[YM,dy,ZM,eP,Ey,tP,nP,rP,sP,iP,oP,uP,hP,fP,gP,xP,wP,kP,SP,XM,CP,IP,_P,Dy,TP,Sy,By,EP,my,$P,DP,MP,PP,zP,LP,BP,VP,UP,jP,HP,qP,KP,XP,YP,ZP,JP,ez,tz,nz,rz,sz,iz,lz,FM,uz,Gy,yz,qy,vz,Yy,_z,Nz,Ez,Jy,nb,$z,Az,Rz,Oz,ob,cb,by,Dz,RP,Mz,zz,Bz,PM,pb,gb,Vz,xb,Uz,Hz,Kz,Qz,Zz,Jz,tL,Cb,nL,rL,sL,iL,aL,oL,lL,Tb,uL,dL,mL,Ab,Ob,yL,vL,wL,Mb,kL,IL,TL,NL,AL,BM,Vb,RL,OL,DL,FL,xy,kz,PL,WM,GM,qM,zL,LL,BL,VL,WL,UL,jL,nv,HL,XL,YL,eB,av,nB,sB,aB,uv,fL,uB,cB,hB,dB,pB,fB,mB,gB,mv,yB,xB,bv,kB,SB,CB,IB,_B,Nv,oz,NB,{kernelName:Cr,backendName:"cpu",kernelFunc:EB},$B,AB,RB,OB,Lb,zB,LB,BB,CL];for(const n of VB)Hr(n);const WB={},UB={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function GB(e,t){if(!(e in WB)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(ke().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete WB[e]}),!1),ke().getBool("SOFTWARE_WEBGL_ENABLED")&&(UB.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",UB)||n.getContext("experimental-webgl",UB);return n.getContext("webgl2",UB)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;WB[e]=n}const n=WB[e];return null==n||n.isContextLost()?(delete WB[e],GB(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),WB[e])}var jB,HB,qB;function KB(e,t){return[t,e]}function XB(e){const t=U(e);return q(Math.ceil(t/4))}function YB(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function QB(e,t){const n=e;let r,s,i,a,o,l,u,c,h,d;return 2===ke().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,i=e.RGBA,a=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function ZB(e,t){const n=t();return ke().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(jB||(jB={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(HB||(HB={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(qB||(qB={}));function JB(e){return!!(ke().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function eV(e,t){return uV(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const tV=/ERROR: [0-9]+:([0-9]+):/g;function nV(e,t){const n=tV.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),i=s.length.toString().length+2,a=s.map(((e,t)=>K((t+1).toString(),i)+e));let o=0;for(let h=0;h<a.length;h++)o=Math.max(a[h].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${K(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function rV(e,t){if(ZB(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function sV(e,t,n,r,s,i,a){const o=e.getAttribLocation(t,n);return-1!==o&&(ZB(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),ZB(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,i,a))),ZB(e,(()=>e.enableVertexAttribArray(o))),!0)}function iV(e,t,n,r){ZB(e,(()=>function(e,t,n){cV(e,n),ZB(e,(()=>e.activeTexture(e.TEXTURE0+n))),ZB(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),ZB(e,(()=>e.uniform1i(n,r)))}function aV(e,t,n){ZB(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),ZB(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function oV(e,t){ZB(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),ZB(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function lV(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function uV(e,t,n){const r=ZB(e,(()=>t()));if(null==r)throw new Error(n);return r}function cV(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function hV(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return U(e.slice(0,e.length-t))}function dV(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function pV(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[hV(e),...dV(e)]),t}function fV(e){return e%2===0}function mV(e,t){if(j(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(fV(n)&&fV(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&fV(e[0])&&fV(t[0])}let gV,yV;function bV(e,t){return null!=e.getExtension(t)}function vV(e){try{if(null!=GB(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function xV(e){if(0===e)return!1;const t=GB(e);if(1!==e){if(bV(t,"EXT_color_buffer_float"))return wV(t);const e="EXT_color_buffer_half_float";if(bV(t,e)){const n=t.getExtension(e);return function(e,t){const n=QB(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,i=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),o}(t,n)}return!1}if(!bV(t,"OES_texture_float"))return!1;if(!bV(t,"WEBGL_color_buffer_float"))return!1;return wV(t)}function wV(e){const t=QB(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function kV(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&B("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const SV=ke();function CV(){let e,t,n,r,s,i,a,o,l,u;return 2===ke().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o=ke().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function IV(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=le(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${t}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function _V(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=le(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / outShapeStrides[${s}]`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function TV(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let i=n-3;i>=0;--i)s[i]=`(${s[i+1]} * ${r[i+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${r[s]}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}function NV(e){const t=le(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}SV.registerFlag("HAS_WEBGL",(()=>SV.getNumber("WEBGL_VERSION")>0)),SV.registerFlag("WEBGL_VERSION",(()=>vV(2)?2:vV(1)?1:0)),SV.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),SV.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===SV.get("WEBGL_VERSION"))),SV.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),SV.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),SV.registerFlag("WEBGL_PACK",(()=>SV.getBool("HAS_WEBGL"))),SV.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>SV.getBool("WEBGL_PACK"))),SV.registerFlag("WEBGL_PACK_CLIP",(()=>SV.getBool("WEBGL_PACK"))),SV.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>SV.getBool("WEBGL_PACK"))),SV.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>SV.getBool("WEBGL_PACK"))),SV.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>SV.getBool("WEBGL_PACK"))),SV.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>SV.getBool("WEBGL_PACK"))),SV.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>SV.getBool("WEBGL_PACK"))),SV.registerFlag("WEBGL_PACK_REDUCE",(()=>SV.getBool("WEBGL_PACK"))),SV.registerFlag("WEBGL_LAZILY_UNPACK",(()=>SV.getBool("WEBGL_PACK"))),SV.registerFlag("WEBGL_CONV_IM2COL",(()=>SV.getBool("WEBGL_PACK"))),SV.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>SV.getBool("WEBGL_PACK"))),SV.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==gV){const t=GB(e);gV=t.getParameter(t.MAX_TEXTURE_SIZE)}return gV}(SV.getNumber("WEBGL_VERSION")))),SV.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==yV){const t=GB(e);yV=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,yV)}(SV.getNumber("WEBGL_VERSION")))),SV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=SV.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=GB(e);return t=bV(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:bV(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),SV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>SV.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Js())),SV.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=GB(e);if(1===e){if(!bV(t,"OES_texture_float"))return!1}else if(!bV(t,"EXT_color_buffer_float"))return!1;return wV(t)}(SV.getNumber("WEBGL_VERSION")))),SV.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!SV.getBool("WEBGL_FORCE_F16_TEXTURES")&&SV.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),SV.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>xV(SV.getNumber("WEBGL_VERSION")))),SV.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=SV.getNumber("WEBGL_VERSION"))&&null!=GB(e).fenceSync;var e})),SV.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>SV.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),SV.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),SV.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Js()?1:-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),SV.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),SV.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),SV.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),SV.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),SV.registerFlag("WEBGL_EXP_CONV",(()=>!1)),SV.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>SV.getBool("IS_TEST"))),SV.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),SV.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),SV.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),SV.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const EV="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:$V}=i;function AV(e,t,n){const r=[];if(e.forEach((e=>{const t=U(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=WV(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),i=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,s="";s+=n?OV(e,r):RV(e,r);const i=e.shapeInfo.logicalShape,a=t.logicalShape;i.length<=a.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,a=t.logicalShape.length,o=$V(e.shapeInfo.logicalShape,t.logicalShape),l=VV(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===U(e.shapeInfo.logicalShape),m=U(t.logicalShape),g=1===m;if(1!==i||f||g){if(f&&!g)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.texShape,a=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&j(a,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=VV(l),c=$V(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");return`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t));return s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=t.texShape,o=CV(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${DV}\n    ${FV}\n    ${MV}\n  `;return t}(o);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return zV();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(j(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),i=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),i=s*Math.ceil(e[e.length-2]/2);let a=i,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)a*=e[e.length-u-1],o=`\n      int b${u} = index / ${a};\n      index -= b${u} * ${a};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,a,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return zV();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(j(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${_V(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=IV(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${_V(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=IV(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=IV(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=IV(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,a,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=PV);return[h,l,c,s,u,i,n.userCode].join("\n")}function RV(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,i]=e.shapeInfo.texShape;if(1===s&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=LV(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${BV(e)}\n      }\n    `;const s=e.shapeInfo.texShape,i=s[0],a=s[1];if(1===a&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=LV(n);if(1===a)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&j(n,i)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=Z(n),l=a;if(l.length<n.length){const n=["row","col"];return`\n      ${RV(UV(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${GV(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${BV(e)}\n      }\n    `;const u=i[0],c=i[1],h=LV(r);if(1===c)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===u)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=Z(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${RV(UV(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${GV(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${a}, 1)));\n        ${BV(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=LV(r);if(t)return`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:l,keptDims:u}=Z(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${RV(UV(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${GV(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${i}, 1)));\n        ${BV(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===i&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=LV(r);if(t)return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,a=t[2]*i,o=t[1]*a,{newShape:l,keptDims:u}=Z(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${RV(UV(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${GV(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${BV(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=LV(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=Z(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${RV(UV(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${GV(t,i)});\n      }\n    `}const a=t[5],o=t[4]*a,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${BV(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=LV(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function OV(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=CV();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=CV();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,a=i[0],o=i[1],l=CV();if(null!=i&&j(n,i))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=[1,2],i=["b","row","col"];return`\n        ${OV(UV(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${GV(i,r)});\n        }\n      `}const o=CV();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=CV();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,a=i.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(i[a-1]/2);let d=h*Math.ceil(i[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<a-1;m++)p=`int b${m}, `+p,d*=i[a-m-1],f=`b${m} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const DV="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",FV="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",MV="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",PV="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function zV(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function LV(e){return`offset${e}`}function BV(e){const t=e.name,n=U(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function VV(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function WV(e,t,n){const{newShape:r,keptDims:s}=Z(t),i=t.length,a=e&&3===i&&1===t[0],o=a?t.slice(1):r,l=!e&&i>1&&!j(t,n)&&r.length<i||a;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function UV(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function GV(e,t){return t.map((t=>e[t])).join(", ")}function jV(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=AV(s,a,t),l=function(e,t){const n=uV(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(ZB(e,(()=>e.shaderSource(n,t))),ZB(e,(()=>e.compileShader(n))),ke().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw nV(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return ke().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a},HV(e,t,u)))}function HV(e,t,n){const r=[],s=[];let i,a,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===ke().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const h of t.variableNames){const s={name:h,uniform:e.getUniformLocation(n,h,c),offset:e.getUniformLocation(n,`offset${h}`,c)};t.enableShapeUniforms&&(s.shape=e.getUniformLocation(n,`${h}Shape`,c),s.texShape=e.getUniformLocation(n,`${h}TexShape`,c)),r.push(s)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),a=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const h of t.customUniforms)s.push(e.getUniformLocation(n,h.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:a}}function qV(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],i=s.shape;if(!j(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const a=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!j(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}function KV(e){return ke().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class XV{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=jB.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=CV();this.outputShape=e,this.enableShapeUniforms=KV(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?_V(["r","c","d"],e):IV(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class YV{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=jB.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=CV();this.outputShape=e,this.enableShapeUniforms=KV(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?_V(["r","c","d"],e):IV(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class QV{constructor(e){this.variableNames=["A"],this.outTexUsage=HB.DOWNLOAD;const t=CV();this.outputShape=e,this.userCode=`\n      ${EV}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ZV{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=HB.DOWNLOAD;const t=CV();this.outputShape=e,this.userCode=`\n      ${EV}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const JV={R:0,G:1,B:2,A:3};class eW{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=CV();this.outputShape=e,this.enableShapeUniforms=KV(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let i="";for(let a=0;a<n.length;a++){const e=n[a];i+=`\n          if(offset == ${a}) {\n            result = values[${JV[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":NV(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${i}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class tW{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=CV();this.outputShape=e,this.enableShapeUniforms=KV(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let t=0;t<=1;t++){const s=2*i+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":NV(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function nW(e){const t=CV();return function(e,t){const n=uV(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(ZB(e,(()=>e.shaderSource(n,t))),ZB(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function rW(e){return function(e,t){const n=uV(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ZB(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),ZB(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function sW(e){return function(e,t){const n=uV(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ZB(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),ZB(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function iW(e,t,n,r,s,i){!function(e,t){const n=ke().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const a=function(e){return uV(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return ZB(e,(()=>e.bindTexture(o,a))),ZB(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),ZB(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),ZB(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),ZB(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===ke().getNumber("WEBGL_VERSION")?ZB(e,(()=>e.texImage2D(o,0,r,t,n,0,s,i,null))):ZB(e,(()=>e.texStorage2D(o,1,r,t,n))),ZB(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:a,texShape:[n,t]}}function aW(e){return e.internalFormatFloat}function oW(e){return e.internalFormatHalfFloat}function lW(e){return e.downloadTextureFormat}function uW(e){return e.internalFormatPackedFloat}function cW(e){return e.internalFormatPackedHalfFloat}function hW(e,t,n,r,s,i,a,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=YB(e,t);return n*r*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}class dW{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=ke().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){WB[e]=t}(t,e)):this.gl=GB(t),e=this.gl,2===ke().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>ZB(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>ZB(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>ZB(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>ZB(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ZB(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>ZB(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>ZB(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>ZB(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ke().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=eV(this.gl,e),bV(this.gl,t))this.textureHalfFloatExtension=eV(this.gl,t);else if(ke().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),bV(this.gl,r))this.colorBufferHalfFloatExtension=eV(this.gl,r);else if(ke().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",bV(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!bV(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=rW(this.gl),this.indexBuffer=sW(this.gl),this.framebuffer=function(e){return uV(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=QB(this.gl,this.textureHalfFloatExtension)}get debug(){return ke().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ZB(e,(()=>e.finish())),ZB(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),ZB(e,(()=>e.deleteFramebuffer(this.framebuffer))),ZB(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),ZB(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),ZB(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=KB(t,n);return iW(e,s,i,aW(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=KB(t,n);return iW(e,s,i,oW(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=KB(t,n);return iW(e,s,i,lW(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){ZB(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===ke().getNumber("WEBGL_VERSION")?ZB(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):ZB(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===ke().getNumber("WEBGL_VERSION")?ZB(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):ZB(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),ZB(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,i){let a,o,l;ZB(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(a=new Float32Array(n*r*4),o=e.FLOAT,l=i.internalFormatPackedFloat),a.set(s),2===ke().getNumber("WEBGL_VERSION")?ZB(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,a))):ZB(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,a))),ZB(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=YB(t,n);return iW(e,s,i,cW(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=YB(t,n);return iW(e,s,i,uW(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(oV(this.gl,this.framebuffer),this.outputTexture=null),ZB(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,i]=KB(t,n),a=new Uint8Array(t*n*4);return ZB(e,(()=>e.readPixels(0,0,s,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,i){return hW(this.gl,e,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();ZB(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return ZB(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),ZB(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),ZB(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ke().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return ZB(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=nW(t));const n=function(e){return uV(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);ZB(t,(()=>t.attachShader(n,this.vertexShader))),ZB(t,(()=>t.attachShader(n,e))),function(e,t){if(ZB(e,(()=>e.linkProgram(t))),!ke().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&rV(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;ZB(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){ZB(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),sV(e,t,"clipSpacePos",n,3,20,0)&&sV(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(ZB(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&rV(this.gl,this.program),ZB(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return uV(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ZB(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),iV(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=YB(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&rV(this.gl,this.program),lV(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ZB(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ZB(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=eV(this.gl,2===ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await X((()=>this.disposed||this.isQueryAvailable(e,ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ke().platform&&(n=ke().platform.setTimeoutCustom.bind(ke().platform)),X((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),aV(this.gl,e,this.framebuffer),this.debug&&lV(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(aV(this.gl,this.outputTexture,this.framebuffer),this.debug&&lV(this.gl)):oV(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;aV(r,e,this.framebuffer),this.debug&&lV(r),this.outputTexture=e,ZB(r,(()=>r.viewport(0,0,t,n))),ZB(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),ZB(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:pW,XI:fW,Nk:mW,f6:gW,ct:yW,YG:bW,hH:vW,z3:xW,sG:wW,uM:kW,vS:SW,qB:CW,GG:IW,rq:_W,lg:TW,WR:NW,cu:EW,GE:$W,px:AW,jC:RW,He:OW,hE:DW,BF:FW,Dk:MW,cl:PW,_B:zW,ub:LW,_f:BW,Ku:VW,qy:WW,Zy:UW,bu:GW,zv:jW,dH:HW,HS:qW,yH:KW,l3:XW,z9:YW,x6:QW,_m:ZW,eW:JW,GK:eU,SP:tU,yr:nU,dl:rU,Dw:sU,xT:iU,_X:aU,wz:oU}=_;function lU(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function uU(e,t){return 1===t?[e]:lU(e,t)}class cU{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=KV(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=uU("rc",this.rank),t=VV(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class hU{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=KV(this.outputShape.length);let n="";for(let i=0;i<4;i++){let e="thisRC = rc;";i%2===1&&(e+="thisRC.z += 1;"),i>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?TV(["r","c","d"],"inputShape"):IV(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":NV(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class dU{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=fU(t,n),s=mU(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=pU(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let a;return r===qB.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===qB.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===qB.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===qB.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===qB.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=fU(n,r),i=mU(t,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=pU(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=ke().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function pU(e,t,n,r,s){const i=function(e,t){switch(e){case qB.PACKED_2X2_FLOAT32:return uW(t);case qB.PACKED_2X2_FLOAT16:return cW(t);case qB.UNPACKED_FLOAT32:return aW(t);case qB.UNPACKED_FLOAT16:return oW(t);case qB.PACKED_4X1_UNSIGNED_BYTE:return lW(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let a;if(s){const[t,n]=YB(e[0],e[1]);a=t*n}else{const[t,n]=KB(e[0],e[1]);a=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return a*o}function fU(e,t){if(e===HB.UPLOAD)return qB.PACKED_2X2_FLOAT32;if(e===HB.RENDER||null==e)return function(e){return ke().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?qB.PACKED_2X2_FLOAT32:qB.UNPACKED_FLOAT32:e?qB.PACKED_2X2_FLOAT16:qB.UNPACKED_FLOAT16}(t);if(e===HB.DOWNLOAD||e===HB.PIXELS)return qB.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function mU(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class gU{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=KV(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const yU="if (isnan(x)) return x;",bU="return abs(x);";const vU=yU+"\n  return (x < 0.0) ? 0.0 : x;\n",xU=yU+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",wU="return x;";class kU{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=KV(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class SU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=KV(this.outputShape.length);const t=e.length,n=uU("rc",t),r=VV(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const CU=Kh,IU={};const _U=ke().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class TU extends O{nextDataId(){return TU.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ke().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof dW)t=e;else{const n=GB(ke().getNumber("WEBGL_VERSION"),e);t=new dW(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=GB(ke().getNumber("WEBGL_VERSION"));t=new dW(e),this.binaryCache=((n=ke().getNumber("WEBGL_VERSION"))in IU||(IU[n]={}),IU[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new dU(this.gpgpu),this.numMBBeforeWarning=null==ke().global.screen?1024:ke().global.screen.height*ke().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new R(this,fi())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,i){const a=this.makeTensorInfo(t,n),o=this.texData.get(a.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const l=pV(t),u=new eW(l,!1,i),c=this.runWebGLProgram(u,[a],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(a),c.dataId}write(e,t,n){if((ke().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ke().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:HB.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,s){if(ke().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:HB.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:a,isPacked:o}=t;if(null!=i){let t;t=o?new kU(a,wU):new gU(a,wU);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=ds()),"complex64"===r){c=qp(this.readSync(s.real.dataId),this.readSync(s.imag.dataId))}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=ds()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:a,isPacked:o}=t;if(null!=s){let t;t=o?new kU(r,wU):new gU(r,wU);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(ke().getBool("DEBUG")&&!ke().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ke().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&ke().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...XB(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=qp(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=U(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;ZB(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&fi().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:r,shape:s,slice:i,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new kU(s,wU):new gU(s,wU);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:a}],a),i=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),i}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=fi().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>fs(e)));return _a(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return _a(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!JB(n)){if(ke().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=U(t);if(ke().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...XB(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=ke().getBool("WEBGL_PACK")&&!0===r,a=i?pV(t):t,o=i?new ZV(a):new QV(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=gs(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=gs(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);a.kernelMs=L(e),a.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ds(),endMs:null}}endTimer(e){return ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ds(),e)}async getQueryTime(e){if(ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(e),o=a&&a.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_U;return ke().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&U(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Lr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return CU(e.shape,t)}packedUnaryOp(e,t,n){const r=new kU(e.shape,t),s=this.compileAndRun(r,[e],n);return fi().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=HW(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ke().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,bU,e.dtype);const t=new gU(e.shape,bU),n=this.compileAndRun(t,[e]);return fi().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&re(n[0])){const s=n.map((e=>ps(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return fi().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new SU(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new cU(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[hV(e.shape),...dV(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[hV(t),...dV(t)],i=new hU(s,n),a=[n],o=this.runWebGLProgram(i,[r],e.dtype,a,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:i}=n;if(null!=t){B(U(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const a=pV(s);let o;o=r?new YV(a):new XV(a);const l=[null!=t?t:XB(a)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(o,[{shape:a,dtype:i,dataId:e}],i,l,!0,t).dataId}}runWebGLProgram(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5?arguments[5]:void 0;const a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===jB.DENSE){const t=null!=i?i:XB(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===U(a.shape))return o.values=J(a.dtype,0),a;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&U(t.shape)<=ke().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!mV(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=WV(e.packedInputs,t.shape,i);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=le(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&j(t.shape,i),f=1===U(t.shape),m=Za(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&j(i,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${g}_${a?l:""}_${o.length}_${f}_${m}_${p}_${u}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+s+`${ke().getNumber("WEBGL_VERSION")}`,i}(e,u,c),d=this.getAndSaveBinary(h,(()=>jV(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),ke().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(qV(t.inShapeInfos,n),qV([t.outShapeInfo],[r]));const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):e.setOutputMatrixTexture(i.texture,a[0],a[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===ke().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const r=n[l],{uniform:s,offset:i,shape:a,texShape:o}=t.variablesLocations[l];if(a){const{uniformShape:n}=WV(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(a,new Int32Array(n));break;case 2:e.gl.uniform2iv(a,new Int32Array(n));break;case 3:e.gl.uniform3iv(a,new Int32Array(n));break;case 4:e.gl.uniform4iv(a,new Int32Array(n))}}if(o&&e.gl.uniform2i(o,r.texData.texShape[0],r.texData.texShape[1]),null!=s)if(r.isUniform)if(U(r.shape)<2)e.gl.uniform1f(s,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=r.texData.slice&&null!=i&&e.gl.uniform1i(i,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,s,l)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=le(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let l=0;l<t.program.customUniforms.length;++l){const n=t.program.customUniforms[l],r=t.customUniformLocations[l],i=s[l];if("float"===n.type)e.gl.uniform1fv(r,i);else if("vec2"===n.type)e.gl.uniform2fv(r,i);else if("vec3"===n.type)e.gl.uniform3fv(r,i);else if("vec4"===n.type)e.gl.uniform4fv(r,i);else if("int"===n.type)e.gl.uniform1iv(r,i);else if("ivec2"===n.type)e.gl.uniform2iv(r,i);else if("ivec3"===n.type)e.gl.uniform3iv(r,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(r,i)}}e.executeProgram()}(this.gpgpu,d,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=ke().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=ds();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ke().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!ke().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=gi((()=>{if(!ke().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ke().getBool("DEBUG");ke().set("DEBUG",!1);const t=this.abs(za(1e-8)).dataSync()[0];if(ke().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=t;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=ds());let c=t.texShape;if(null==c&&(c=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=ke().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=ke().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&ke().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?P(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=Z(e);e=t.newShape}let s=U(e),i=null;e.length<=1&&s<=n?i=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const a=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||a)if(t){const t=hV(e);let n=2,r=2;e.length&&([n,r]=dV(e)),s=t*(n/2)*(r/2),i=q(s).map((e=>2*e))}else i=q(s);return i}(n,o),t.texShape=c),null!=s){const e=pV(n);let i,a=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([a,h]=YB(c[0],c[1])),i=o?new tW(e,d):new eW(e,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?HB.PIXELS:HB.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,s);const g=[[h,a]],y=!0,b=this.runWebGLProgram(i,[f],r,g,y),v=this.texData.get(b.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,ke().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=ds()-u)}else{const e=this.acquireTexture(c,a,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ne(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await kp(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw nV(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:o}=HV(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:i,channels:a}=e,o=fi().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(r,t,n,s,i,a);return fi().makeTensorFromDataId(l,t,n,o)}}TU.nextDataId=0;ei()&&ki("webgl",(()=>new TU),2);const NU="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class EU{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=eo(t,n),this.enableShapeUniforms=KV(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const $U="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class AU{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=eo(t,n);const s=this.outputShape.length;this.enableShapeUniforms=KV(s);let i="";if(r)if(0===s||1===U(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(i=`\n          ${VV(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=uU("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function RU(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const OU={kernelName:Wt,backendName:"webgl",kernelFunc:RU};function DU(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(i.dataId),o=RU({inputs:{x:r},backend:n}),l=RU({inputs:{x:s},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const FU={kernelName:Je,backendName:"webgl",kernelFunc:DU},MU="return (a < 0.) ? b * a : a;",PU="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const zU={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r,a=n.makeTensorInfo([],"float32",cs(i,"float32")),o=ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new AU(PU,s.shape,a.shape):new EU(MU,s.shape,a.shape),l=n.runWebGLProgram(o,[s,a],"float32");return n.disposeIntermediateTensorInfo(a),l}},LU="return (a < 0.) ? b * a : a;",BU="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const VU={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,i=ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new AU(BU,r.shape,s.shape):new EU(LU,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],"float32")}},WU="if (isnan(x)) return x;";function UU(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:s}=e;return e=>{let{inputs:i,backend:a}=e;const{x:o}=i,l=a,u=s||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=r){const e=l.texData.get(o.dataId),t=r(e.values,u);return l.makeTensorInfo(o.shape,u,t)}let c;return c=ke().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new kU(o.shape,n):new gU(o.shape,t),l.runWebGLProgram(c,[o],u)}}function GU(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:s=!1,cpuKernelImpl:i,dtype:a}=e;return e=>{let{inputs:o,backend:l}=e;const{a:u,b:c}=o,h=l;if(s&&"complex64"===u.dtype){const e=h.texData.get(u.dataId),n=h.texData.get(c.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:r.dataId,dtype:r.dtype,shape:c.shape},a=new EU(t,u.shape,c.shape);return h.runWebGLProgram(a,[s,i],zs(n.dtype,r.dtype))})),i=DU({inputs:{real:r,imag:s},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(s),i}const d=a||zs(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||h.shouldExecuteOnCPU([u,c]))&&null!=i){const e=h.texData.get(u.dataId).values,t=h.texData.get(c.dataId).values,n="string"===u.dtype?Nf(e):e,r="string"===u.dtype?Nf(t):t,[s,a]=i(u.shape,c.shape,n,r,d),o=h.makeTensorInfo(a,d);return h.texData.get(o.dataId).values=s,o}let p;return p=ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new AU(n,u.shape,c.shape,r):new EU(t,u.shape,c.shape),h.runWebGLProgram(p,[u,c],d)}}function jU(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":vU;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":xU;if("prelu"===e)return t?BU:LU;if("leakyrelu"===e)return t?PU:MU;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class HU{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=KV(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(v=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${v};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const qU="return areal * breal - aimag * bimag;",KU="return areal * bimag + aimag * breal;";class XU{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=eo(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const YU="return a * b;";function QU(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=zs(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),i=new XU(qU,r.shape,s.shape),a=new XU(KU,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=DU({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,o]=FW(r.shape,s.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let a;return a=ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new AU(YU,r.shape,s.shape):new EU(YU,r.shape,s.shape),n.runWebGLProgram(a,[r,s],i)}const ZU={kernelName:vn,backendName:"webgl",kernelFunc:QU};function JU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=n,o=U(s.shape),l=Y(i,o),u=U(l);B(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(s.dataId);return!c.isPacked||mV(s.shape,l)||null!==c.texture&&mV(c.shape,l)?(a.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[hV(e.shape),...dV(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},i=[hV(t),...dV(t)],a=new hU(i,r),o=[r],l=n.runWebGLProgram(a,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,a)}const eG={kernelName:Ln,backendName:"webgl",kernelFunc:JU};class tG{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${H(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class nG{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];let a="0.0",o="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",o="min"):"max"===t&&(a="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function rG(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Ap(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let c,h;c="mean"===n?0===a?new tG({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new tG({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new nG({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=i,i=r.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return i}class sG{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;const r=VV(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class iG{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=VV(this.rank),s=lU("rc",this.rank),i=new Array(this.rank);for(let u=0;u<t.length;u++)i[t[u]]=s[u];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function aG(e,t,n){const r=ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iG(e.shape,t):new sG(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function oG(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;return function(e,t,n,r){const s=t,i=e.shape.length,a=Q(s,e.shape);let o=a;const l=_u(o,i),u=null!=l;let c=e;u&&(c=aG(e,l,r),o=Nu(o.length,i)),Iu("sum",o,i);const[h,d]=Su(c.shape,o);let p=h;n&&(p=Cu(h,a));const f=U(d),m=JU({inputs:{x:c},attrs:{shape:[U(e.shape)/f,f]},backend:r}),g=rG(m,Ls(e.dtype),"sum",r),y=JU({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(s,i,a,n)}const lG={kernelName:ar,backendName:"webgl",kernelFunc:oG};function uG(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:i}=r,a=n,o=s.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=s.shape[i[c]];let u;if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,t=aU(e,s.shape,s.dtype,i,l);u=a.makeTensorInfo(l,s.dtype);a.texData.get(u.dataId).values=t}else u=aG(s,i,a);return u}const cG={kernelName:Nr,backendName:"webgl",kernelFunc:uG};function hG(e){let{a:t,b:n,transposeA:r,transposeB:s,backend:i,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e;const c=t.shape.length,h=n.shape.length,d=r?t.shape[c-2]:t.shape[c-1],p=s?n.shape[h-1]:n.shape[h-2],f=r?t.shape[c-1]:t.shape[c-2],m=s?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=U(g),v=U(y),x=eo(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);B(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${s} must match.`));const w=r?[b,d,f]:[b,f,d],k=s?[v,m,p]:[v,p,m],S=JU({inputs:{x:t},backend:i,attrs:{shape:w}}),C=JU({inputs:{x:n},backend:i,attrs:{shape:k}}),I=[S,C],_=Math.max(b,v),T=r?S.shape[1]:S.shape[2],N=null!=a,E=null!=o,$="leakyrelu"===u,A=null!=u?jU(u,!0):null;let R;if((1===f||1===m)&&T>1e3&&!1===(N||E||$||null!=A)){let e=S,t=C;r&&(e=uG({inputs:{x:S},backend:i,attrs:{perm:[0,2,1]}}),I.push(e)),s&&(t=uG({inputs:{x:C},backend:i,attrs:{perm:[0,2,1]}}),I.push(t));const n=1===m;let a=e;1!==m&&(a=JU({inputs:{x:e},backend:i,attrs:{shape:[_,T,1]}}),I.push(a));const o=1===m?2:1;let l=t;n&&(l=JU({inputs:{x:t},backend:i,attrs:{shape:[_,1,T]}}),I.push(l));const u=QU({inputs:{a:a,b:l},backend:i});R=oG({inputs:{x:u},backend:i,attrs:{axis:o,keepDims:!0}}),I.push(u)}else{const e=zs(t.dtype,n.dtype),u=new HU(w,k,[_,f,m],r,s,N,A,E,$),c=[S,C];if(null!=a&&c.push(a),E&&c.push(o),$){const e=i.makeTensorInfo([],"float32",cs(l,"float32"));c.push(e),I.push(e)}R=i.runWebGLProgram(u,c,e)}const O=JU({inputs:{x:R},backend:i,attrs:{shape:x}});I.push(R);for(const D of I)i.disposeIntermediateTensorInfo(D);return O}const dG={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return hG({a:s,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},pG="return abs(x);";const fG={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=HW(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=ke().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new kU(r.shape,pG):new gU(r.shape,pG),n.runWebGLProgram(s,[r],r.dtype)}},mG=UU({opSnippet:yU+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),gG={kernelName:Ne,backendName:"webgl",kernelFunc:mG},yG=UU({opSnippet:yU+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),bG={kernelName:Ee,backendName:"webgl",kernelFunc:yG},vG="return a + b;",xG=GU({opSnippet:vG,packedOpSnippet:vG,supportsComplex:!0,cpuKernelImpl:pW}),wG={kernelName:$e,backendName:"webgl",kernelFunc:xG};class kG{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class SG{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const CG={kernelName:Ae,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return RU({inputs:{x:s[0]},backend:r});if(s.length>ke().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),i=e({inputs:s.slice(t),backend:r});return e({inputs:[n,i],backend:r})}const i=s.map((e=>e.dtype)).reduce(((e,t)=>zs(e,t))),a=s.map((e=>e.shape)),o=ke().getBool("WEBGL_PACK")?new SG(s[0].shape,a):new kG(s[0].shape,a);return r.runWebGLProgram(o,s,i)}};const IG={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=Q(i,s.shape);let u=l;const c=_u(u,o);let h=s;null!=c&&(h=uG({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Nu(u.length,o)),Iu("all",u,o);const[d,p]=Su(h.shape,u),f=JU({inputs:{x:h},backend:n,attrs:{shape:[-1,U(p)]}}),m=rG(f,f.dtype,"all",n);let g;if(a){g=JU({inputs:{x:m},backend:n,attrs:{shape:Cu(d,l)}})}else g=JU({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};const _G={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=Q(i,s.shape);let u=l;const c=_u(u,o);let h=s;null!=c&&(h=uG({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Nu(u.length,o)),Iu("any",u,o);const[d,p]=Su(h.shape,u),f=JU({inputs:{x:h},backend:n,attrs:{shape:[-1,U(p)]}}),m=rG(f,f.dtype,"any",n);let g;if(a){g=JU({inputs:{x:m},backend:n,attrs:{shape:Cu(d,l)}})}else g=JU({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class TG{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class NG{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,B(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=VV(o),u=uU("coords",o);let c,h;if(1===i){h=o+1;const e=VV(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=uU("sourceLocR",h-1).concat("inIdx.r"),g=uU("sourceLocG",h-1).concat("inIdx.g"),y=uU("sourceLocB",h-1).concat("inIdx.b"),b=uU("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function EG(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=t.shape[0],i=t.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const a=Ap(i),o={windowSize:a,inSize:i,batchSize:s,outSize:Math.ceil(i/a)},l=new TG(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=EG(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function $G(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const s=null!=r?r.shape:t.shape,i=Ap(s[s.length-1]),a=new NG(s,i,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(a,o,"int32");if(l.shape.length===t.shape.length){const r=$G(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function AG(e,t,n,r){const s=[n];if(Iu("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!ke().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let a=t;null!==i&&i.isPacked&&(a=e.unpackTensor(t),n.push(a));const[o,l]=Su(a.shape,s),u=U(l),c=JU({inputs:{x:a},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=EG(e,c,r);n.push(h);const d=JU({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return $G(e,t,r)}const RG={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=Q(i,s.shape);const o=_u(a,s.shape.length);let l=s;const u=[];null!=o&&(l=uG({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=Nu(a.length,l.shape.length)),Iu("argMax",[a[0]],l.shape.length);const c=AG(n,l,a[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const OG={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=Q(i,s.shape);const o=_u(a,s.shape.length);let l=s;const u=[];null!=o&&(l=uG({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=Nu(a.length,l.shape.length)),Iu("argMin",[a[0]],l.shape.length);const c=AG(n,l,a[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},DG=UU({opSnippet:yU+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),FG={kernelName:Me,backendName:"webgl",kernelFunc:DG},MG=UU({opSnippet:yU+"return log(x + sqrt(x * x + 1.0));"}),PG={kernelName:Pe,backendName:"webgl",kernelFunc:MG},zG=UU({opSnippet:yU+"\n  return atan(x);\n"}),LG={kernelName:ze,backendName:"webgl",kernelFunc:zG},BG=GU({opSnippet:NU+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+$U+"\n  return result;\n"}),VG={kernelName:Be,backendName:"webgl",kernelFunc:BG},WG=UU({opSnippet:yU+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),UG={kernelName:Le,backendName:"webgl",kernelFunc:WG};class GG{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const v=4*Math.floor(i/4),x=i%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class jG{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(i/4),k=i%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${x});\n      }\n    `}}const HG={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;kV(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;B(Sl(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=pl(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&j(u.inShape,u.outShape))return RU({inputs:{x:s},backend:n});const c=new GG(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}};const qG={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=fl(s.shape,i,a,[1,1,1],o,l,u),h=new jG(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class KG{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class XG{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const YG={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=fl(a.shape,o,l,[1,1,1],u,c),d=new XG(h);return n.runWebGLProgram(d,[s],a.dtype)}};const QG={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;kV([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=pl(a.shape,o,l,1,u),h=new KG(c);return n.runWebGLProgram(h,[s],a.dtype)}};const ZG={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;return hG({a:s,b:i,transposeA:a,transposeB:o,backend:n})}};class JG{constructor(e,t,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],eo(e,t),eo(e,n);let a="0.0";null!=r&&(eo(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&(eo(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class ej{constructor(e,t,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],eo(e,t),eo(e,n);let a="vec4(0.0)";null!=r&&(eo(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(eo(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const tj={kernelName:Pt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,mean:i,variance:a,offset:o,scale:l}=t;B(i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),B(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),B(null==l||i.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=[s,i,a];let h=null;null!=o&&(h=o.shape,c.push(o));let d=null;null!=l&&(d=l.shape,c.push(l));const p=ke().getBool("WEBGL_PACK_NORMALIZATION")?new ej(s.shape,i.shape,a.shape,h,d,u):new JG(s.shape,i.shape,a.shape,h,d,u);return n.runWebGLProgram(p,c,c[0].dtype)}};class nj{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=VV(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return rj.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${rj[t]} = start[${t}] + coords.${rj[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const rj=["x","y","z","w","u","v"];class sj{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=VV(this.rank),n=uU("coords",this.rank),r=uU("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}function ij(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r,[o,l]=Qo(s,i,a);if(Po(s,o,l),0===U(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=qW(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=Xo(s.shape,o,l);if(u||!c){const e=ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sj(l):new nj(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),a=r.texData.get(i.dataId);Object.assign(a,s),a.refCount=1,a.shape=n,a.dtype=e.dtype;let o=Yo(t,le(e.shape));s.slice&&(o+=s.slice.flatOffset),a.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),i}(s,o,l,n)}const aj={kernelName:Jn,backendName:"webgl",kernelFunc:ij},oj={kernelName:He,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;B(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=Op(s.shape,i,o),u=Dp(l.length,i.length),c=Fp(s.shape,i,o),h=Mp(a,i.length),d=Pp(c,a,i.length),p=[],f=JU({inputs:{x:s},backend:n,attrs:{shape:l}}),m=uG({inputs:{x:f},backend:n,attrs:{perm:u}}),g=JU({inputs:{x:m},backend:n,attrs:{shape:c}}),y=ij({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const lj={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=n.readSync(s.dataId),l=n.readSync(i.dataId),u=fW(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}};const uj={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=ke().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=ke().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===a){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[i,a]=gW(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(a,r.dtype);return n.texData.get(o.dataId).values=i,o}let o;return o=i?new AU("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new EU("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}};const cj={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.readSync(r.dataId),a=n.readSync(s.dataId),o=eo(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},hj=GU({opSnippet:"return float(a != b);",cpuKernelImpl:PW,dtype:"bool"}),dj={kernelName:wn,backendName:"webgl",kernelFunc:hj};function pj(e){const{inputs:t,backend:n}=e,{input:r}=t;return RU({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const fj={kernelName:Mn,backendName:"webgl",kernelFunc:pj};const mj={kernelName:Ye,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:i}=n,{dtype:a}=s;if("complex64"===a){if("complex64"===i.dtype)return RU({inputs:{x:i},backend:r});const t=yc(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=DU({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const t=pj({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(t),n}if(!te(i.dtype,a)){const e=RU({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:a}}if(r.shouldExecuteOnCPU([i])){const e=r.texData.get(i.dataId).values,[t,n,s]=yW(e,i.shape,i.dtype,a);return r.makeTensorInfo(t,n,s)}if("int32"===a)return function(e,t){const n=new gU(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===a){const e=r.makeTensorInfo([],"bool",J("bool",1)),t=hj({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}},gj="return ceil(x);",yj=UU({opSnippet:gj,packedOpSnippet:gj,cpuKernelImpl:bW}),bj={kernelName:Qe,backendName:"webgl",kernelFunc:yj};class vj{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class xj{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const wj={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:i,clipValueMax:a}=r;let o;o=ke().getBool("WEBGL_PACK_CLIP")?new xj(s.shape):new vj(s.shape);const l=[[i],[a]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class kj{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Sj(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Cj={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),i=new kj(r.shape),a=[Sj(r,s.complexTensorInfos.real),Sj(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}};class Ij{constructor(e){this.outputShape=[],this.outputShape=Cp(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const e=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${e}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class _j{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Cp(e,t);const n=this.outputShape,r=n.length,s=VV(r),i=uU("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];const l=a[t],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){const e=o[f-1];h+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${Tj(a,l,e)}),\n            vec2(${Tj(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${Tj(a,l,p)}),\n          vec2(${Tj(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Tj(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Nj(e){const{inputs:t,backend:n}=e,{input:r}=t;return RU({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Ej={kernelName:Gt,backendName:"webgl",kernelFunc:Nj};function $j(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>pj({inputs:{input:e},backend:n}))),s=e.map((e=>Nj({inputs:{input:e},backend:n}))),i=$j(r,t,n),a=$j(s,t,n),o=DU({inputs:{real:i,imag:a},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=U(e.shape.slice(t));return JU({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),a=Cp(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=vW(i,a,r,o),u=Cp(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const i=e.filter((e=>U(e.shape)>0)),a=ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=a?new gU(e[0].shape,wU):new kU(e[0].shape,wU);return n.runWebGLProgram(t,e,r)}const o=ke().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const e=[];for(let s=0;s<i.length;s+=o){const r=i.slice(s,s+o);e.push($j(r,t,n))}const r=$j(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(a){const e=new _j(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,r)}const{tensors2D:l,outShape:u}=function(e,t,n){const r=Cp(e.map((e=>e.shape)),t),s=e.map((e=>JU({inputs:{x:e},attrs:{shape:[-1,U(e.shape.slice(t))]},backend:n})));return{tensors2D:s,outShape:r}}(i,t,n),c=new Ij(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=JU({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function Aj(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=Q(s,t[0].shape)[0],a=t.map((e=>e.shape));Sp(a,i);const o=Cp(t.map((e=>e.shape)),i);if(0===U(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>U(e.shape)>0));return 1===l.length?RU({inputs:{x:l[0]},backend:n}):$j(l,i,n)}const Rj={kernelName:tt,backendName:"webgl",kernelFunc:Aj};class Oj{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class Dj{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Fj{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=KV(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<u;m++)h+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<u;m++)h+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(c+1)/2;m++){const t=2*m;if(h+=`\n           xC = xCCorner + ${t*o};\n           `,1===a){if(t<u&&(i%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){const e=i%2===0?P(o):o;o%2===0&&i%2===1||o%2!==0&&i%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(i%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class Mj{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=KV(this.outputShape.length);const{dataFormat:n}=t,r=CV(),s="channelsLast"===n,i=s?1:2,a=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function Pj(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function zj(e){let{x:t,filter:n,convInfo:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}=e;const u=t.shape,c=s.texData.get(t.dataId),h=r.inChannels,d=u[0]*u[1]*u[2],p=r.outChannels,f="channelsLast"===r.dataFormat,m=!1;let g;const y=[];if(null!=a){const e=Pj(a.shape,f);null!=e&&(a=JU({inputs:{x:a},backend:s,attrs:{shape:e}}),y.push(a))}if(null!=i){const e=Pj(i.shape,f);null!=e&&(i=JU({inputs:{x:i},backend:s,attrs:{shape:e}}),y.push(i))}if(!((1===d||1===p)&&h>1e3)&&c.isPacked&&f&&null!=c.texture&&u[2]%2!==0&&j(c.shape.slice(-3),u.slice(-3))){const e=u[0]*u[1]*(u[2]+1),h={dataId:t.dataId,shape:[1,e,r.inChannels],dtype:t.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,B(mV(c.shape,h.shape),(()=>`packed reshape ${c.shape} to ${h.shape} isn't free`));const p=JU({inputs:{x:n},backend:s,attrs:{shape:[1,r.inChannels,r.outChannels]}});y.push(p);const f=hG({a:h,b:p,backend:s,transposeA:false,transposeB:m,bias:i,activation:l,preluActivationWeights:a,leakyreluAlpha:o}),b=s.texData.get(f.dataId);B(b.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,b.shape=r.outShape,g=RU({inputs:{x:f},backend:s}),g.shape=r.outShape,y.push(f)}else{const e=r.outHeight*r.outWidth,u=JU({inputs:{x:t},backend:s,attrs:{shape:f?[r.batchSize,e,r.inChannels]:[r.batchSize,r.inChannels,e]}}),c=JU({inputs:{x:n},backend:s,attrs:{shape:[1,r.inChannels,r.outChannels]}}),h=hG({a:f?u:c,b:f?c:u,transposeA:!f,transposeB:m,backend:s,bias:i,activation:l,preluActivationWeights:a,leakyreluAlpha:o});g=JU({inputs:{x:h},backend:s,attrs:{shape:r.outShape}}),y.push(u),y.push(c),y.push(h)}for(const b of y)s.disposeIntermediateTensorInfo(b);return g}function Lj(e){let{x:t,filter:n,convInfo:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}=e;const{filterWidth:u,filterHeight:c,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=r,m="channelsLast"===f,g=u*c*h,y=p*d,b=[r.batchSize,g,y],v=[];if(null!=a){const e=Pj(a.shape,m);null!=e&&(a=JU({inputs:{x:a},backend:s,attrs:{shape:e}}),v.push(a))}if(null!=i){const e=Pj(i.shape,m);null!=e&&(i=JU({inputs:{x:i},backend:s,attrs:{shape:e}}),v.push(i))}const x=JU({inputs:{x:n},backend:s,attrs:{shape:[1,g,U(n.shape)/g]}});v.push(x);const w=new Mj(b,r),k=[t.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],S=s.runWebGLProgram(w,[t],"float32",k),C=JU({inputs:{x:S},backend:s,attrs:{shape:b}});v.push(S),v.push(C);const I=null!=i,_=null!=a,T="leakyrelu"===l,N=l?jU(l,!0):null,E=new HU(m?C.shape:x.shape,m?x.shape:C.shape,m?[r.batchSize,y,r.outChannels]:[r.batchSize,r.outChannels,y],!0,!1,I,N,_,T),$=m?[C,x]:[x,C];if(i&&$.push(i),_&&$.push(a),T){const e=s.makeTensorInfo([],"float32",cs(o,"float32"));$.push(e),v.push(e)}const A=s.runWebGLProgram(E,$,"float32"),R=JU({inputs:{x:A},backend:s,attrs:{shape:r.outShape}});v.push(A);for(const O of v)s.disposeIntermediateTensorInfo(O);return R}const Bj={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Il(l),d=ml(s.shape,i.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&ke().getBool("WEBGL_EXP_CONV")){const e=new Fj(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,i],"float32",t)}else if(ke().getBool("WEBGL_CONV_IM2COL"))p=Lj({x:s,filter:i,convInfo:d,backend:n});else{const e=new Oj(d);p=n.runWebGLProgram(e,[s,i],"float32")}else p=zj({x:s,filter:i,convInfo:d,backend:n});const f=JU({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class Vj{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${i?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Wj{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Uj{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Gj{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jj={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Il(l),d=ml(s.shape,c,a,1,o,u,!1,h),p=new Vj(d);return n.runWebGLProgram(p,[s,i],"float32")}};class Hj{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=KV(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const qj={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Il(u),d=ml(a,i.shape,o,1,l,c,!1,h);if(ke().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new Hj(d);return n.runWebGLProgram(t,[s,i],"float32",e)}{const e=new Wj(d);return n.runWebGLProgram(e,[s,i],"float32")}}};const Kj={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r,u=gl(s.shape,i.shape,a,l,o),c=new Dj(u);return n.runWebGLProgram(c,[s,i],"float32")}};const Xj={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:l}=r,u=gl(s.shape,l,a,1,o),c=new Uj(u);return n.runWebGLProgram(c,[s,i],"float32")}};const Yj={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:l}=r,u=gl(l,i.shape,o,1,a),c=new Gj(u);return n.runWebGLProgram(c,[s,i],"float32")}},Qj=UU({opSnippet:WU+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${$U}\n  return result;\n`}),Zj={kernelName:lt,backendName:"webgl",kernelFunc:Qj},Jj=UU({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),eH={kernelName:ut,backendName:"webgl",kernelFunc:Jj};class tH{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,v,x]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const nH={kernelName:dt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new tH(s.shape,i.shape,o,l,u);return n.runWebGLProgram(c,[s,i,a],"float32")}};var rH;!function(e){e.Prod="*",e.Sum="+"}(rH||(rH={}));class sH{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,i=this.op===rH.Prod?"1.0":"0.0",a=n?i:`getX(${iH(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${VV(s)} coords = getOutputCoords();\n        int end = ${aH(s,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${aH(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${iH(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function iH(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function aH(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function oH(e,t,n,r,s,i){const a=t.shape.length,o=_u([r],a);let l=t;null!=o&&(l=uG({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Nu(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=RU({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const t=new sH(e,l.shape,!1,i),r=[[d]],s=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const t=new sH(e,l.shape,s,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=uG({inputs:{x:h},backend:n,attrs:{perm:Tu(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const lH={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return oH(rH.Prod,s,n,i,a,o)}};const uH={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return oH(rH.Sum,s,n,i,a,o)}};const cH={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(i.dataId),r=fW(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(i),r=mW(e,t,a,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class hH{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const dH={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r,o=s.shape[0],l=("NHWC"===a?s.shape[1]:s.shape[2])*i,u=("NHWC"===a?s.shape[2]:s.shape[3])*i,c=("NHWC"===a?s.shape[3]:s.shape[1])/(i*i),h=new hH("NHWC"===a?[o,l,u,c]:[o,c,l,u],i,a);return n.runWebGLProgram(h,[s],s.dtype)}};class pH{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=KV(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class fH{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=KV(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<c;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(a%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=a%2===0?P(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(a%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const mH={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),B(Sl(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=ml(s.shape,i.shape,a,c,o,u,!0);let d;d=ke().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new fH(h):new pH(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,i],"float32",p)}};class gH{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yH{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const bH={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=ml(s.shape,c,a,o,l,u,!0),d=new gH(h);return n.runWebGLProgram(d,[s,i],"float32")}};const vH={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=ml(c,i.shape,a,o,l,u,!0),d=new yH(h);return n.runWebGLProgram(d,[s,i],"float32")}};class xH{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const wH={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],i=U(r.shape),a=JU({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new xH(i),l=n.runWebGLProgram(o,[a],a.dtype),u=JU({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class kH{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const SH={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r,u=dl(s.shape,i.shape,a,o,"NHWC",l);let c;const h=new kH(u);c=n.runWebGLProgram(h,[s,i],"float32");const d=JU({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}};const CH={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:a,summedDims:o,idDims:l}=af(s,i.length);lf(a.length,l,i);const{path:u,steps:c}=uf(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=of(p,l[e]);let s;cf(t)?s=i[e]:(s=uG({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);j(s.shape,a)||(s=JU({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=QU({inputs:{a:s,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=oG({inputs:{x:d},backend:n,attrs:{axis:u[m]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},IH=UU({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),_H={kernelName:It,backendName:"webgl",kernelFunc:IH},TH={kernelName:_t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,i=ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new AU("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new EU("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},NH=GU({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:xW}),EH={kernelName:Nt,backendName:"webgl",kernelFunc:NH},$H=UU({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Vp};\n  float a1 = ${Wp};\n  float a2 = ${Up};\n  float a3 = ${Gp};\n  float a4 = ${jp};\n  float a5 = ${Hp};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),AH={kernelName:Tt,backendName:"webgl",kernelFunc:$H},RH=UU({opSnippet:WU+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:wW,dtype:"float32"}),OH={kernelName:Et,backendName:"webgl",kernelFunc:RH};function DH(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:i}=t,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(B(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+s+1),o.splice(l,0,1),JU({inputs:{x:i},backend:r,attrs:{shape:o}})}const FH={kernelName:$t,backendName:"webgl",kernelFunc:DH},MH="return exp(x) - 1.0;",PH=UU({opSnippet:MH,packedOpSnippet:MH,cpuKernelImpl:kW}),zH={kernelName:At,backendName:"webgl",kernelFunc:PH};class LH{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function BH(e,t,n){const r=n.texData.get(e.dataId),s=U(e.shape),i=e.shape[e.shape.length-1],a=JU({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}}),o=a.shape,l=new LH("real",o,t),u=new LH("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=DU({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=JU({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const VH={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return BH(r,!1,n)}};class WH{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function UH(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||ie(s),"string"===i){const e=ee(i,U(r));return e.fill(s),t.makeTensorInfo(r,i,e)}{const e=new WH(r,s),n=[[s]];return t.runWebGLProgram(e,[],i,n)}}const GH={kernelName:Ot,backendName:"webgl",kernelFunc:UH};class jH{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const HH={kernelName:Dt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:r}=t,s=n,i=new jH(r.shape);return s.runWebGLProgram(i,[r],r.dtype)}},qH="return floor(x);",KH=UU({opSnippet:qH,packedOpSnippet:qH,cpuKernelImpl:SW}),XH={kernelName:Ft,backendName:"webgl",kernelFunc:KH},YH=GU({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),QH={kernelName:Mt,backendName:"webgl",kernelFunc:YH};class ZH{constructor(e){this.variableNames=["A"];const t=CV(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class JH{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=CV(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const eq={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:i}=r,a="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,i];if(o||a){const e=ke().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=tq&&e===nq||(nq=e,tq=document.createElement("canvas").getContext("2d",{willReadFrequently:nq})),tq.canvas.width=l,tq.canvas.height=u,tq.drawImage(s,0,0,l,u),s=tq.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=HB.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=ke().getBool("WEBGL_PACK")?new JH(h):new ZH(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let tq,nq=ke().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const rq={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Il(c),g=ml(s.shape,i.shape,l,h,u,d,!1,m);let y;const b=[],v=null!=a,x=null!=o,w="leakyrelu"===p,k=()=>{const e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=JU({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(v&&e.push(t(a,c)),x&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",cs(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&ke().getBool("WEBGL_EXP_CONV")){const e=p?jU(p,!0):null,t=new Fj(g,v,e,x,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if(ke().getBool("WEBGL_CONV_IM2COL"))y=Lj({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?jU(p,!1):null,t=new Oj(g,v,e,x,w),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=zj({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const S=JU({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const sq={kernelName:zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),B(Sl(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=ml(s.shape,i.shape,l,m,u,h,!0),y=ke().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?jU(d,y):null,v=[s,i],x=null!=a,w=null!=o,k="leakyrelu"===d;if(x&&v.push(a),w&&v.push(o),k){const e=n.makeTensorInfo([],"float32",cs(p,"float32"));v.push(e),f.push(e)}let S;S=y?new fH(g,x,b,w,k):new pH(g,x,b,w,k);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],I=n.runWebGLProgram(S,v,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class iq{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=VV(n.length);let i="\n    int index;";for(let a=0;a<this.sliceDim;a++)i+=`\n          index = round(getIndices(coords[0], ${a}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};\n          flattenIndex += index * ${this.strides[a]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const aq={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=s.shape,a=i[i.length-1],o=U(r.shape),[l,u,c,h]=zp(r,s),d=JU({inputs:{x:s},backend:n,attrs:{shape:[u,a]}}),p=JU({inputs:{x:r},backend:n,attrs:{shape:[U(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),i=CW(e,t,r.dtype,u,a,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,i.values)}const f=new iq(a,h,[u,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=JU({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class oq{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=VV(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function lq(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r,l=Q(a,s.shape)[0];if(ke().get("DEBUG")){const e=n.readSync(i.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];B(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=Tf(s,i,l,o),c=U(i.shape),h=[],d=JU({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=JU({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=IW(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new oq(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=JU({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const uq={kernelName:zt,backendName:"webgl",kernelFunc:lq},cq=GU({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:_W,dtype:"bool"}),hq={kernelName:Bt,backendName:"webgl",kernelFunc:cq},dq=GU({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:TW}),pq={kernelName:Vt,backendName:"webgl",kernelFunc:dq};const fq={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return BH(r,!0,n)}},mq=UU({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),gq={kernelName:jt,backendName:"webgl",kernelFunc:mq},yq=UU({opSnippet:"return float(isinf(x));",dtype:"bool"}),bq={kernelName:Ht,backendName:"webgl",kernelFunc:yq},vq=UU({opSnippet:"return float(isnan(x));",dtype:"bool"}),xq={kernelName:qt,backendName:"webgl",kernelFunc:vq},wq=GU({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:NW,dtype:"bool"}),kq={kernelName:Xt,backendName:"webgl",kernelFunc:wq},Sq=GU({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:EW,dtype:"bool"}),Cq={kernelName:Yt,backendName:"webgl",kernelFunc:Sq};const Iq={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=$W(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}},_q=UU({opSnippet:WU+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:AW}),Tq={kernelName:Zt,backendName:"webgl",kernelFunc:_q},Nq=UU({opSnippet:WU+"\n  return log(1.0 + x);\n"}),Eq={kernelName:Jt,backendName:"webgl",kernelFunc:Nq},$q=GU({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Aq={kernelName:en,backendName:"webgl",kernelFunc:$q},Rq=UU({opSnippet:"return float(!(x >= 1.0));"}),Oq={kernelName:tn,backendName:"webgl",kernelFunc:Rq},Dq=GU({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Fq={kernelName:nn,backendName:"webgl",kernelFunc:Dq};class Mq{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Pq{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const zq={kernelName:rn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=r,u=ke().getBool("WEBGL_PACK_NORMALIZATION")?new Pq(s.shape,i,a,o,l):new Mq(s.shape,i,a,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class Lq{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Bq={kernelName:sn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new Lq(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,i,a],s.dtype)}};function Vq(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=s.shape.length,l=Q(i,s.shape);let u=l;const c=_u(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=s.shape[c[n]];const r=aU(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype);n.texData.get(p.dataId).values=r}else p=aG(s,c,n);u=Nu(u.length,o)}Iu("max",u,o);const[f,m]=Su(p.shape,u);let g,y=f;if(a&&(y=Cu(f,l)),d){const e=n.texData.get(p.dataId).values,t=RW(e,U(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=U(t),i=JU({inputs:{x:e},attrs:{shape:[U(e.shape)/s,s]},backend:r}),a=rG(i,e.dtype,"max",r),o=JU({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const Wq={kernelName:an,backendName:"webgl",kernelFunc:Vq},Uq=GU({opSnippet:NU+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+$U+"\n  return result;\n",cpuKernelImpl:OW}),Gq={kernelName:on,backendName:"webgl",kernelFunc:Uq};const jq={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;kV(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;B(Sl(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=pl(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&j(u.inShape,u.outShape))return RU({inputs:{x:s},backend:n});const c=new GG(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}};const Hq={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=fl(s.shape,i,a,[1,1,1],o,u,l),h=new jG(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class qq{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,o=i-1-e.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Kq{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Xq={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=fl(a.shape,o,l,[1,1,1],u,c),d=new jG(h,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new Kq(h),m=n.runWebGLProgram(f,[s,p],a.dtype);return n.disposeIntermediateTensorInfo(p),m}};const Yq={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;kV([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=pl(o.shape,l,u,1,c,h),p=new GG(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new qq(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const Qq={kernelName:dn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{filterSize:i,strides:a,pad:o,includeBatchInIndex:l}=n,u=r;B(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const c=[1,1];B(Sl(a,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=pl(s.shape,i,a,c,o),[d,p]=function(e,t,n,r){let s=new GG(n,"max",!1);const i=r.runWebGLProgram(s,[e],"float32");return s=new GG(n,"max",!0,!0,t),[i,r.runWebGLProgram(s,[e],"float32")]}(s,l,h,u);return[d,p]}};const Zq={kernelName:pn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{keepDims:i,axis:a}=n,o=r,l=s.shape.length,u=Q(a,s.shape);let c=u;const h=_u(c,l),d=null!=h,p=o.shouldExecuteOnCPU([s]),f=[];let m=s;if(d){if(p){const e=o.texData.get(m.dataId).values,t=new Array(l);for(let r=0;r<t.length;r++)t[r]=s.shape[h[r]];const n=aU(e,s.shape,s.dtype,h,t);m=o.makeTensorInfo(t,s.dtype);o.texData.get(m.dataId).values=n}else m=aG(s,h,o);f.push(m),c=Nu(c.length,l)}Iu("sum",c,l);const[g,y]=Su(m.shape,c);let b=g;i&&(b=Cu(g,u));const v=function(e,t,n,r){const s=U(t),i=JU({inputs:{x:e},attrs:{shape:[U(e.shape)/s,s]},backend:r}),a=rG(i,"float32","mean",r),o=JU({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(m,y,b,o);for(const x of f)o.disposeIntermediateTensorInfo(x);return v}};const Jq={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=Q(i,s.shape);let u=l;const c=_u(u,o);let h=s;null!=c&&(h=uG({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Nu(u.length,s.shape.length)),Iu("min",u,o);const[d,p]=Su(h.shape,u),f=JU({inputs:{x:h},backend:n,attrs:{shape:[-1,U(p)]}}),m=rG(f,f.dtype,"min",n);let g;if(a){g=JU({inputs:{x:m},backend:n,attrs:{shape:Cu(d,l)}})}else g=JU({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},eK=GU({opSnippet:NU+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+$U+"\n  return result;\n",cpuKernelImpl:DW}),tK={kernelName:mn,backendName:"webgl",kernelFunc:eK};class nK{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=VV(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class rK{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=VV(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=uU("rc",r),l=uU("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const sK={kernelName:gn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s}=t,{paddings:i,mode:a}=r,o=ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rK(s.shape,i,a):new nK(s.shape,i,a);return n.runWebGLProgram(o,[s],s.dtype)}},iK=GU({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+$U+"\n  return result;\n"}),aK={kernelName:yn,backendName:"webgl",kernelFunc:iK};class oK{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const lK=GU({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),uK={kernelName:St,backendName:"webgl",kernelFunc:lK},cK="return a - b;",hK=GU({opSnippet:cK,packedOpSnippet:cK,supportsComplex:!0,cpuKernelImpl:rU}),dK={kernelName:kr,backendName:"webgl",kernelFunc:hK};function pK(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=Q([i],s.shape),o=Vq({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=Cu(o.shape,a),u=JU({inputs:{x:o},backend:n,attrs:{shape:l}}),c=hK({inputs:{a:s,b:u},backend:n}),h=RH({inputs:{x:c},backend:n}),d=oG({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=JU({inputs:{x:d},backend:n,attrs:{shape:l}}),f=lK({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const fK={kernelName:ur,backendName:"webgl",kernelFunc:pK};const mK={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r,l=o?s:pK({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new oK(u,c,i),d=[[a]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},gK=yU+"\n  return -x;\n";const yK={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=MW(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=ke().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new kU(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new gU(r.shape,gK),n.runWebGLProgram(s,[r],r.dtype)}},bK=Ed;const vK={kernelName:kn,backendName:"webgl",kernelFunc:function(e){Lr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=bK(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},xK=$d;const wK={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){Lr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=xK(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},kK=Ad;const SK={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){Lr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=kK(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class CK{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const IK={kernelName:_n,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:a,onValue:o,offValue:l}=r,u=U(s.shape),c=new CK(u,a,o,l),h=JU({inputs:{x:s},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=JU({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(d),p}};function _K(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=pj({inputs:{input:r},backend:n}),t=_K({inputs:{x:e},backend:n}),s=Nj({inputs:{input:r},backend:n}),i=_K({inputs:{x:s},backend:n}),a=DU({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return UH({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const TK={kernelName:Rr,backendName:"webgl",kernelFunc:_K};const NK={kernelName:In,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=pj({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),i=Nj({inputs:{input:s},backend:r}),a=_K({inputs:{x:i},backend:r}),o=DU({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return UH({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const EK={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return DH({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{V(i,e.shape,"All tensors passed to stack must have matching shapes"),B(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=t.map((e=>{const t=DH({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),u=Aj({inputs:l,backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class $K{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=VV(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class AK{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=VV(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=uU("rc",r),l=uU("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const RK=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;if(0===U(s.shape)){const e=i.map(((e,t)=>e[0]+s.shape[t]+e[1]));return UH({backend:n,attrs:{shape:e,value:a,dtype:s.dtype}})}const o=ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AK(s.shape,i,a):new $K(s.shape,i,a),l=[[a]];return n.runWebGLProgram(o,[s],s.dtype,l)},OK={kernelName:Nn,backendName:"webgl",kernelFunc:RK},DK=GU({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+$U+"\n  return result;\n"}),FK={kernelName:En,backendName:"webgl",kernelFunc:DK};const MK={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=[],u=Q(i,s.shape);let c=u;const h=_u(c,o);let d,p=s;if(null!=h&&(p=uG({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Nu(c.length,o),l.push(p)),Iu("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=zW(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Su(p.shape,c),r=U(t),i=JU({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=rG(i,Ls(s.dtype),"prod",n);d=JU({inputs:{x:a},backend:n,attrs:{shape:e}}),l.push(i),l.push(a)}if(a){l.push(d);const e=Cu(d.shape,u);d=JU({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const PK={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(i.dataId),h=n.readSync(a.dataId),[d,p,f]=LW(l,u,c,i.shape,i.dtype,h,a.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}};const zK={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:i}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,c]=BW(a,r.shape,r.dtype,o,s.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};const LK={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(i.dataId),h=n.readSync(a.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=VW(u,s.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,m)}},BK=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:i,dtype:a}=n,o=WW(r,s,i,a);return t.makeTensorInfo([o.length],a,o)},VK={kernelName:Fn,backendName:"webgl",kernelFunc:BK},WK=UU({opSnippet:"return 1.0 / x;"}),UK={kernelName:Pn,backendName:"webgl",kernelFunc:WK},GK=UU({opSnippet:yU+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),jK={kernelName:zn,backendName:"webgl",kernelFunc:GK},HK=UU({opSnippet:yU+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),qK={kernelName:Gn,backendName:"webgl",kernelFunc:HK};class KK{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class XK{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const YK={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=ke().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new XK(s.shape,l,u,i,a):new KK(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],"float32")}};class QK{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const ZK={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new QK(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class JK{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class eX{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const tX={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=ke().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new eX(s.shape,l,u,i,a):new JK(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],s.dtype)}};class nX{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const rX={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new nX(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class sX{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=VV(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class iX{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=uU("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=VV(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const aX={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r,a=s.shape.length,o=Q(i,s.shape);if(0===a)return RU({inputs:{x:s},backend:n});const l=ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iX(s.shape,o):new sX(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class oX{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const lX={kernelName:Fr,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,{radians:i,fillValue:a,center:o}=n,l=r,u=new oX(s.shape,a),[c,h]=Rp(o,s.shape[1],s.shape[2]),d=[[c,h,Math.sin(i),Math.cos(i)]];return l.runWebGLProgram(u,[s],s.dtype,d)}},uX=UU({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),cX={kernelName:Hn,backendName:"webgl",kernelFunc:uX},hX=UU({opSnippet:"return inversesqrt(x);",cpuKernelImpl:UW}),dX={kernelName:qn,backendName:"webgl",kernelFunc:hX};class pX{constructor(e,t,n,r,s,i){let a=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=VV(s.length),l=VV(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`;let p="";a&&(p="coords[0], coords[1]");const f=`getDefaultValue(${p})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(${f}, sum, float(found)));\n        }\n      `}}class fX{constructor(e,t,n,r,s,i){let a=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const o=VV(s.length),l=VV(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`;let p="";a&&(p="coords[0], coords[1]");const f=`getDefaultValue(${p})`,m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${c});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${g};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${d};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${f}, sum, found));\n        }\n      `}}const mX={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Lh(0,s,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,s.dtype);const p=JU({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=JU({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=ke().getBool("WEBGL_PACK")?new fX(l,o,p.shape.length,f.shape.length,c,d):new pX(l,o,p.shape.length,f.shape.length,c,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=JU({inputs:{x:y},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class gX{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===ke().getNumber("WEBGL_VERSION")?"while (left < right) {":s,a="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${a} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const yX={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:a}=r,o=new gX(s.shape[0],s.shape[1],i.shape[1],a),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,i],"int32",l)}};class bX{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<t.length;r++)a.push(`${n[r]}`),r<e&&i.push(`${n[r]}`);r=i.join(),s=a.join()}const i=VV(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const vX={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t,a=new bX(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,i],zs(s.dtype,i.dtype))}},xX=UU({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Lp};\n  float scale = ${Bp};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),wX={kernelName:Zn,backendName:"webgl",kernelFunc:xX},kX=UU({opSnippet:WU+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:jW}),SX={kernelName:rr,backendName:"webgl",kernelFunc:kX},CX=UU({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),IX={kernelName:nr,backendName:"webgl",kernelFunc:CX},_X=UU({opSnippet:WU+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${$U}\n  return result;\n`}),TX={kernelName:er,backendName:"webgl",kernelFunc:_X},NX=UU({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),EX={kernelName:tr,backendName:"webgl",kernelFunc:NX},$X=UU({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),AX={kernelName:sr,backendName:"webgl",kernelFunc:$X},RX={kernelName:or,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;B(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...a);for(let y=1+i.length;y<s.shape.length;++y)l.push([0,0]);const u=[],c=RK({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Op(c.shape,i,o,!1),d=Dp(h.length,i.length,!1),p=Fp(c.shape,i,o,!1),f=JU({inputs:{x:c},backend:n,attrs:{shape:h}}),m=uG({inputs:{x:f},backend:n,attrs:{perm:d}}),g=JU({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const OX={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(i.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,m]=KW(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const DX={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(i.dataId)),[u,c,h]=XW(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};const FX={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,c]=YW(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const MX={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,c]=YW(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}};const PX={kernelName:fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Lh(0,s,o),p=!1;if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),r=fs(n.readSync(a.dataId)[0]),f=GW(e,t,o,d,c,u,l,h,r,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new pX(u,l,s.shape.length,i.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[i,s,a],i.dtype),g=JU({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}};const zX={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=Q(a,s.shape)[0],l=df(s,i,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=ij({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},LX="return sqrt(x);",BX=UU({opSnippet:LX,packedOpSnippet:LX,cpuKernelImpl:QW}),VX={kernelName:ir,backendName:"webgl",kernelFunc:BX},WX={kernelName:gr,backendName:"webgl",kernelFunc:UU({opSnippet:"return x * x;"})},UX="return (a - b) * (a - b);",GX=GU({opSnippet:UX,packedOpSnippet:UX}),jX={kernelName:mr,backendName:"webgl",kernelFunc:GX};const HX={kernelName:yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const i=Nf(n.readSync(s.dataId)),a=ZW(i,"string",r);return n.makeTensorInfo(s.shape,"string",a)}};const qX={kernelName:Or,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,i=yU+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,a=new gU(s.shape,i);return r.runWebGLProgram(a,[s],s.dtype)}};class KX{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=VV(n.length),i=VV(n.length);let a="";if(1===r)a="coords * strides + begin";else{let e=0;a=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const XX={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:x}=Zo(s.shape,i,a,o,l,u,c,h,d);let w;if(m)w=JU({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){B(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Lo(b,v,x),t=ij({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=JU({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=_a(s.shape,s.dtype,e),r=JW(p,t,x,b);w=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new KX(b,x,p);w=n.runWebGLProgram(e,[s],s.dtype)}}const k=JU({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const YX={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=eU(d,p,s,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const QX={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=tU(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const ZX={kernelName:wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=nU(a,s);return n.makeTensorInfo(i.shape,"int32",o)}},JX=UU({opSnippet:"return tan(x);"}),eY={kernelName:Sr,backendName:"webgl",kernelFunc:JX},tY=UU({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),nY={kernelName:Cr,backendName:"webgl",kernelFunc:tY};const rY={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:i,updates:a}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Lh(0,i,s.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(s.shape,i.dtype);const p=JU({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=JU({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=JU({inputs:{x:s},backend:n,attrs:{shape:d}}),g=new pX(l,o,p.shape.length,f.shape.length,c,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=JU({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class sY{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;const r=VV(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function iY(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>fs(e))):e,r=_a(s.shape,s.dtype,t),a=sU(r,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new sY(s.shape,i);return n.runWebGLProgram(a,[s],s.dtype)}const aY={kernelName:Ir,backendName:"webgl",kernelFunc:iY};class oY{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class lY{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function uY(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function cY(e){let t=1;for(;t<e;)t*=2;return t}const hY={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r,o=ke().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=ke().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||i>l){const e=n.readSync(s.dataId),[t,r]=iU(e,u,s.dtype,i,a);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,UH({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=U(u)/c,m=JU({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&uY(n,p);const g=cY(i),y=cY(c);let b=null;const v=()=>null===b?[m,m]:[m,b],x=(e,t,r)=>{const s=v(),i=new oY(r),a=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(i,s,"int32",a),uY(n,o)};for(let I=1;I<g;I*=2){const e=2*I;for(let t=I;t>=1;t/=2)x(e,t,[f,y])}for(let I=y;I>g;I/=2){const e=v(),t=new lY([f,I/2]),r=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(t,e,"int32",r),uY(n,s);const i=g/2,a=2*i;for(let n=i;n>=1;n/=2)x(a,n,b.shape)}let w=b;b=ij({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,i]}}),uY(n,w);let k=lq({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});uY(n,m);const S=u.slice(0,-1);S.push(i),w=b,b=JU({inputs:{x:b},attrs:{shape:S},backend:n}),uY(n,w);const C=k;return k=JU({inputs:{x:k},attrs:{shape:S},backend:n}),uY(n,C),[k,b]}};class dY{constructor(e,t,n,r,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const pY={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=new dY(h,d,a,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[s,i],"float32")}};const fY={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;kV(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=oU(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const mY={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,l=s.shape[i],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==i&&(u[c++]=a.shape[m]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[i]=m;const e=ij({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),t=JU({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class gY{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const yY={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r,o=s.shape.length,l=[];let u=0;const c=_u([u],o);let h=s;null!=c&&(h=uG({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Nu(1,o)[0]);const d=_f(h.shape,u,a),p=U([h.shape[u]]),f=JU({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Ls(s.dtype),g=(e,t,r,s,i)=>{const a=e.shape[0],o=e.shape[1],u=If(o,i),c=new gY({windowSize:u,inSize:o,batchSize:a,numSegments:i},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===i)return h;const d=BK({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=iY({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});l.push(d),l.push(p);return g(h,t,p,s,i)},y=JU({inputs:{x:g(f,"unsortedSegmentSum",i,m,a)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){l.push(y);const e=Tu(c);b=uG({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},bY=[dG,fG,gG,bG,wG,CG,IG,_G,RG,OG,FG,PG,LG,VG,UG,HG,qG,YG,QG,ZG,tj,oj,lj,uj,cj,mj,bj,wj,FU,Cj,Rj,Bj,jj,qj,Kj,Xj,Yj,Zj,eH,nH,lH,uH,cH,dH,mH,bH,vH,wH,SH,CH,_H,TH,EH,AH,OH,FH,zH,VH,GH,HH,XH,QH,eq,rq,sq,aq,uq,hq,pq,OU,fq,Ej,gq,bq,xq,zU,kq,Cq,Iq,Tq,Eq,Aq,Oq,Fq,zq,Bq,Wq,Gq,jq,Hq,Xq,Yq,Qq,Zq,Jq,tK,sK,aK,mK,ZU,yK,vK,wK,SK,dj,IK,NK,EK,OK,FK,VU,MK,PK,zK,LK,VK,fj,uK,UK,jK,qK,eG,YK,ZK,tX,rX,aX,lX,cX,dX,mX,yX,vX,wX,SX,IX,TX,EX,aj,fK,AX,RX,OX,DX,FX,MX,PX,zX,VX,WX,jX,HX,qX,XX,YX,QX,ZX,dK,lG,eY,nY,rY,aY,hY,pY,cG,fY,mY,yY,TK];for(const n of bY)Hr(n);var vY=n(579);const xY=$(),wY=[["nose","left_eye"],["nose","right_eye"],["left_eye","left_ear"],["right_eye","right_ear"],["left_shoulder","right_shoulder"],["left_shoulder","left_elbow"],["right_shoulder","right_elbow"],["left_elbow","left_wrist"],["right_elbow","right_wrist"],["left_wrist","left_thumb"],["left_wrist","left_index"],["left_wrist","left_pinky"],["right_wrist","right_thumb"],["right_wrist","right_index"],["right_wrist","right_pinky"],["nose","left_shoulder"],["nose","right_shoulder"],["left_shoulder","left_hip"],["right_shoulder","right_hip"],["left_hip","right_hip"],["left_hip","left_knee"],["right_hip","right_knee"],["left_knee","left_ankle"],["right_knee","right_ankle"]],kY=e=>{let{onPoseDetected:t,showDebugInfo:n=!0,highlightIntentional:r=!1,intentionalKeypoints:s=[]}=e;const i=(0,T.useRef)(null),a=(0,T.useRef)(null),o=(0,T.useRef)(null),[l,u]=(0,T.useState)(null),[c,h]=(0,T.useState)(!0),[d,p]=(0,T.useState)("MoveNet"),[f,m]=(0,T.useState)(!0),[g,y]=(0,T.useState)([]),[b,v]=(0,T.useState)({}),[x,w]=(0,T.useState)({width:640,height:480});(0,T.useEffect)((()=>((async()=>{try{console.log("Initializing TensorFlow.js..."),await xi(),"webgl"!==wi()&&await vi("webgl");const t=wi();t?console.log("TensorFlow.js initialized with backend:",t):(await vi("cpu"),console.log("Fallback to CPU backend"));try{"webgl"===t&&ke().set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)}catch(e){console.warn("Could not configure WebGL texture management",e)}}catch(t){console.error("TensorFlow initialization error:",t),alert("Error initializing TensorFlow.js. Please try reloading the page.")}})(),()=>{Ys.disposeVariables()})),[]),(0,T.useEffect)((()=>{if(!o.current)return;const e=()=>{if(o.current){const{width:e,height:t}=o.current.getBoundingClientRect();w({width:e,height:t})}};return e(),window.addEventListener("resize",e),()=>{window.removeEventListener("resize",e)}}),[]),(0,T.useEffect)((()=>((async()=>{try{let e;if(h(!0),await xi(),l&&l.dispose(),"BlazePose"===d){const t=FT.BlazePose,n={runtime:"tfjs",enableSmoothing:!0,modelType:"lite"};e=await zN(t,n),console.log("BlazePose detector created")}else{const t=FT.MoveNet,n={modelType:LN.SINGLEPOSE_LIGHTNING,enableSmoothing:!0,minPoseScore:.25};e=await zN(t,n),console.log("MoveNet detector created")}u(e),h(!1),console.log(`Pose detection model loaded: ${d}`)}catch(e){console.error("Error initializing pose detector:",e),h(!1)}})(),()=>{l&&l.dispose()})),[d]),(0,T.useEffect)((()=>{if(!l||c)return;let e;const n=async()=>{if(i.current&&i.current.video&&4===i.current.video.readyState)try{const e=i.current.video,n=await l.estimatePoses(e,{flipHorizontal:!1,maxPoses:1});if(n&&n.length>0){if(a.current){const t=e.videoWidth,r=e.videoHeight;a.current.width=t,a.current.height=r,k(n,t,r,s)}if(y((e=>{const t=[...e,n[0]];return t.length>30?t.slice(-30):t})),g.length>=2){const e=g[g.length-1],t=n[0],r={};t.keypoints.forEach((t=>{if(t.name){const n=e.keypoints.find((e=>e.name===t.name));if(n&&"number"===typeof n.x&&"number"===typeof n.y&&"number"===typeof t.x&&"number"===typeof t.y){const e=t.x-n.x,s=t.y-n.y;r[t.name]=Math.sqrt(e*e+s*s)}}})),v(r)}t(n)}}catch(r){console.error("Error detecting poses:",r)}e=requestAnimationFrame(n)};return n(),()=>{e&&cancelAnimationFrame(e)}}),[l,c,t,s,g]);const k=function(e,t,n){var s;let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];const o=null===(s=a.current)||void 0===s?void 0:s.getContext("2d");o&&(o.clearRect(0,0,t,n),e.forEach((e=>{const t=new Map;e.keypoints.forEach((e=>{e.name&&t.set(e.name,{...e,isIntentional:i.includes(e.name)})})),o.lineWidth=2,wY.forEach((e=>{let[n,s]=e;const i=t.get(n),a=t.get(s);if(i&&a&&i.score&&a.score&&i.score>.3&&a.score>.3){const e=r&&i.isIntentional&&a.isIntentional;o.beginPath(),o.moveTo(i.x,i.y),o.lineTo(a.x,a.y),e?(o.strokeStyle="rgba(255, 215, 0, 0.8)",o.lineWidth=4):(o.strokeStyle="rgba(0, 255, 0, 0.7)",o.lineWidth=2),o.stroke()}})),e.keypoints.forEach((e=>{if(e.score&&e.score>.3){const t=i.includes(e.name||"");if(o.beginPath(),o.arc(e.x,e.y,t?7:5,0,2*Math.PI),t?(o.fillStyle="#FFD700",o.strokeStyle="white",o.lineWidth=2,o.stroke()):e.score>.7?o.fillStyle="#00FF00":e.score>.5?o.fillStyle="#FFFF00":o.fillStyle="#FF0000",o.fill(),f&&e.name){const n=`${e.name}: ${Math.round(100*e.score)}%${t?" (I)":""}`,r=o.measureText(n).width;o.fillStyle=t?"rgba(255, 215, 0, 0.7)":"rgba(0, 0, 0, 0.7)",o.fillRect(e.x+10,e.y-10,r+6,20),o.font="12px Arial",o.fillStyle=t?"black":"white",o.fillText(n,e.x+13,e.y+5)}}}))})))};return(0,vY.jsxs)("div",{ref:o,className:"webcam-container",style:{position:"relative",width:"100%",maxWidth:"640px",margin:"0 auto",overflow:"hidden",borderRadius:"10px",boxShadow:"0 4px 15px rgba(0, 0, 0, 0.3)"},children:[c&&(0,vY.jsx)("div",{className:"loading-indicator",style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",backgroundColor:"rgba(0,0,0,0.7)",color:"white",padding:"10px 20px",borderRadius:"5px",zIndex:50},children:"Loading pose detection model..."}),(0,vY.jsx)(xY,{ref:i,audio:!1,screenshotFormat:"image/jpeg",width:640,height:480,videoConstraints:{width:640,height:480,facingMode:"user"},className:"webcam-video",style:{width:"100%",height:"auto",filter:c?"blur(4px)":"none"}}),(0,vY.jsx)("canvas",{ref:a,className:"webcam-canvas",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"}}),(()=>{if(!n||0===g.length)return null;const e=g[g.length-1];return(0,vY.jsxs)("div",{style:{position:"absolute",top:10,right:10,background:"rgba(0,0,0,0.7)",color:"white",padding:10,borderRadius:5,maxHeight:300,overflow:"auto",fontSize:12,zIndex:30},children:[(0,vY.jsx)("h3",{style:{margin:"0 0 8px 0"},children:"Keypoints & Velocities"}),e.keypoints.filter((e=>e.score&&e.score>.5&&e.name)).map(((e,t)=>{var n;const r=s.includes(e.name||"");return(0,vY.jsxs)("div",{style:{display:"flex",justifyContent:"space-between",marginBottom:"4px",borderBottom:"1px solid rgba(255,255,255,0.2)",backgroundColor:r?"rgba(255, 215, 0, 0.3)":"transparent"},children:[(0,vY.jsxs)("span",{children:[e.name,": ",Math.round(100*(e.score||0)),"%"]}),(0,vY.jsxs)("span",{children:["Vel: ",(null===(n=b[e.name||""])||void 0===n?void 0:n.toFixed(1))||"N/A"]})]},t)}))]})})(),(0,vY.jsxs)("div",{style:{position:"absolute",bottom:"10px",right:"10px",display:"flex",gap:"10px",zIndex:40},children:[(0,vY.jsxs)("button",{onClick:()=>{p((e=>"BlazePose"===e?"MoveNet":"BlazePose"))},className:"model-switch-button",style:{backgroundColor:"rgba(0,0,0,0.7)",color:"white",border:"none",padding:"8px 12px",borderRadius:"5px",cursor:"pointer",fontSize:"14px"},children:["Switch to ","BlazePose"===d?"MoveNet":"BlazePose"," Model"]}),(0,vY.jsxs)("button",{onClick:()=>{m((e=>!e))},className:"labels-button",style:{backgroundColor:"rgba(0,0,0,0.7)",color:"white",border:"none",padding:"8px 12px",borderRadius:"5px",cursor:"pointer",fontSize:"14px"},children:[f?"Hide":"Show"," Labels"]})]})]})},SY=["left_wrist","right_wrist","left_elbow","right_elbow","left_shoulder","right_shoulder","left_index","right_index","left_thumb","right_thumb","left_pinky","right_pinky","nose","left_eye","right_eye"];class CY{constructor(){this.posesHistory=[],this.historyLength=60,this.lastIntentionalMovements=new Map,this.cooldownPeriod=200,this.minConfidence=.5,this.movementStart=new Map,this.isInMovement=new Map,this.movementPatterns=new Map,this.model=null,this.calibrationSamples=[],this.isModelTrained=!1,this.useMLPrediction=!1,this.isTfInitialized=!1,this.trainingProgressCallback=null,this.azureConfig={apiKey:"",endpoint:"",enabled:!1},this.calibrationDuration=15,this.calibrationQuality=0,this.initTensorflow()}async initTensorflow(){try{await xi(),await vi("webgl"),console.log("TensorFlow.js initialized with backend:",wi()),this.isTfInitialized=!0,this.initModel()}catch(e){console.error("Error initializing TensorFlow:",e)}}configureAzureServices(e){this.azureConfig=e,console.log("Azure Computer Vision integration "+(e.enabled?"enabled":"disabled"))}setTrainingProgressCallback(e){this.trainingProgressCallback=e}async initModel(){this.isTfInitialized||(console.warn("TensorFlow.js not initialized yet, waiting..."),await this.waitForTensorflow());try{const e=OO();e.add(JF({units:64,activation:"relu",inputShape:[15]})),e.add(eM({rate:.3})),e.add(JF({units:32,activation:"relu"})),e.add(eM({rate:.2})),e.add(JF({units:16,activation:"relu"})),e.add(JF({units:1,activation:"sigmoid"})),e.compile({optimizer:xp.adam(5e-4),loss:"binaryCrossentropy",metrics:["accuracy"]}),this.model=e,console.log("Enhanced ML Intention Detection model initialized")}catch(e){console.error("Error creating model:",e)}}async waitForTensorflow(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,t=0;for(;!this.isTfInitialized&&t<e;)await new Promise((e=>setTimeout(e,500))),t++;if(!this.isTfInitialized)throw new Error("TensorFlow initialization timed out")}processPoses(e){for(this.posesHistory.push({poses:e,timestamp:Date.now()});this.posesHistory.length>this.historyLength;)this.posesHistory.shift();if(this.posesHistory.length<10)return[];const t=[];if(0===e.length)return t;for(const n of SY){const r=this.findKeypointByName(e[0],n);if(r&&r.score&&r.score>this.minConfidence){const e=this.extractFeatures(n);if(!e)continue;let r=!1,s=.5;if(this.isModelTrained&&this.useMLPrediction){const t=this.predictWithModel(e);r=t.isIntentional,s=t.confidence}else r=this.heuristicIntentionality(e);this.azureConfig.enabled&&e.magnitudeOfMovement>10&&this.tryAzurePrediction(n,e).then((e=>{null!==e&&(r=e.confidence>s?e.isIntentional:r,s=Math.max(s,e.confidence))})).catch((e=>{console.warn("Azure prediction failed, using local prediction",e)})),r&&!this.isNotOnCooldown(n)&&(r=!1),r&&this.lastIntentionalMovements.set(n,Date.now());const i=Math.sqrt(e.velocityX*e.velocityX+e.velocityY*e.velocityY);(r||i>5)&&t.push({keypoint:n,isIntentional:r,velocity:i,direction:e.direction,confidence:s})}}return t}async tryAzurePrediction(e,t){if(!this.azureConfig.enabled||!this.azureConfig.apiKey||!this.azureConfig.endpoint)return null;try{const n={features:{velocityX:t.velocityX,velocityY:t.velocityY,acceleration:t.acceleration,jitter:t.jitter,isSmooth:t.isSmooth,direction:t.direction,magnitudeOfMovement:t.magnitudeOfMovement,frequencyOfMovement:t.frequencyOfMovement,steadiness:t.steadiness,patternScore:t.patternScore,continuity:t.continuity},keypoint:e},r=await fetch(`${this.azureConfig.endpoint}/intention/detect`,{method:"POST",headers:{"Content-Type":"application/json","Ocp-Apim-Subscription-Key":this.azureConfig.apiKey},body:JSON.stringify(n)});if(!r.ok){const e=await r.text();throw new Error(`Azure API error: ${r.status} - ${e}`)}const s=await r.json();return{isIntentional:s.predictions.intentional>s.predictions.unintentional,confidence:Math.max(s.predictions.intentional,s.predictions.unintentional)}}catch(n){return console.error("Error calling Azure Computer Vision API:",n),null}}extractFeatures(e){if(this.posesHistory.length<10)return null;const t=this.posesHistory.slice(-15),n=t[0].poses[0],r=t[t.length-1].poses[0],s=this.findKeypointByName(n,e),i=this.findKeypointByName(r,e);if(!s||!i||void 0===s.x||void 0===i.x)return null;const a=t[t.length-1].timestamp-t[0].timestamp,o=(i.x-s.x)/(a/1e3),l=(i.y-s.y)/(a/1e3),u=i.x-s.x,c=i.y-s.y,h=Math.sqrt(u*u+c*c);let d=0;if(t.length>=3){const n=Math.floor(t.length/2),r=t[n].poses[0],o=this.findKeypointByName(r,e);if(o&&void 0!==o.x){const e=t[n].timestamp,r=(o.x-s.x)/((e-t[0].timestamp)/1e3),l=(o.y-s.y)/((e-t[0].timestamp)/1e3),u=((i.x-o.x)/((t[t.length-1].timestamp-e)/1e3)-r)/(a/1e3),c=((i.y-o.y)/((t[t.length-1].timestamp-e)/1e3)-l)/(a/1e3);d=Math.sqrt(u*u+c*c)}}h>5&&!this.isInMovement.get(e)&&(this.movementStart.set(e,{x:s.x,y:s.y,time:t[0].timestamp}),this.isInMovement.set(e,!0));let p=0,f=!1;if(h<3&&this.isInMovement.get(e)){const n=this.movementStart.get(e);if(n){p=(t[t.length-1].timestamp-n.time)/1e3;const e=i.x-n.x,r=i.y-n.y;Math.sqrt(e*e+r*r)<.5*h&&(f=!0)}this.isInMovement.set(e,!1)}else if(this.isInMovement.get(e)){const n=this.movementStart.get(e);n&&(p=(t[t.length-1].timestamp-n.time)/1e3)}const m=this.calculateJitter(e);let g="none";g=Math.abs(u)>Math.abs(c)?u>0?"right":"left":c>0?"down":"up";const y=m<10,b=this.calculateFrequencyOfMovement(e),v=this.calculateSteadiness(e),x=this.calculatePatternScore(e),w=this.calculateContinuity(e);return{keypoint:e,velocityX:o,velocityY:l,acceleration:d,jitter:m,direction:g,isSmooth:y,timestamp:Date.now(),magnitudeOfMovement:h,durationOfMovement:p,isReversing:f,frequencyOfMovement:b,steadiness:v,patternScore:x,continuity:w}}calculateJitter(e){if(this.posesHistory.length<10)return 0;const t=this.posesHistory.slice(-15),n=[];if(t.forEach((t=>{const r=this.findKeypointByName(t.poses[0],e);r&&void 0!==r.x&&void 0!==r.y&&n.push({x:r.x,y:r.y,timestamp:t.timestamp})})),n.length<5)return 0;const r=n[0],s=n[n.length-1],i=s.x-r.x,a=s.y-r.y;if(Math.sqrt(i*i+a*a)<2)return 0;let o=0;for(let l=1;l<n.length-1;l++){const e=n[l],t=(e.timestamp-r.timestamp)/(s.timestamp-r.timestamp),u=r.x+i*t,c=r.y+a*t,h=e.x-u,d=e.y-c;o+=Math.sqrt(h*h+d*d)}return o/(n.length-2)}calculateFrequencyOfMovement(e){if(this.posesHistory.length<10)return 0;const t=this.posesHistory.slice(-15),n=[];if(t.forEach((t=>{const r=this.findKeypointByName(t.poses[0],e);r&&void 0!==r.x&&void 0!==r.y&&n.push({x:r.x,y:r.y,timestamp:t.timestamp})})),n.length<5)return 0;let r=0,s=0,i=0;for(let o=1;o<n.length;o++){const e=n[o].x-n[o-1].x,t=n[o].y-n[o-1].y;(e>0&&s<0||e<0&&s>0)&&r++,(t>0&&i<0||t<0&&i>0)&&r++,s=e,i=t}const a=(n[n.length-1].timestamp-n[0].timestamp)/1e3;return a>0?r/a:0}async trainAzureModel(e){if(!this.azureConfig.enabled||!this.azureConfig.apiKey||!this.azureConfig.endpoint)return!1;try{const t=this.calibrationSamples.map((e=>({features:{velocityX:e.features.velocityX,velocityY:e.features.velocityY,acceleration:e.features.acceleration,jitter:e.features.jitter,isSmooth:e.features.isSmooth,direction:e.features.direction,magnitudeOfMovement:e.features.magnitudeOfMovement,frequencyOfMovement:e.features.frequencyOfMovement,steadiness:e.features.steadiness,patternScore:e.features.patternScore,continuity:e.features.continuity},keypoint:e.features.keypoint,isIntentional:e.isIntentional}))),n=await fetch(`${this.azureConfig.endpoint}/model/train/${e}`,{method:"POST",headers:{"Content-Type":"application/json","Ocp-Apim-Subscription-Key":this.azureConfig.apiKey},body:JSON.stringify({samples:t})});if(!n.ok)throw new Error(`Azure train API error: ${n.status}`);const r=await n.json();return console.log("Azure model trained successfully:",r),localStorage.setItem(`user-azure-model-${e}`,"true"),!0}catch(t){return console.error("Error training Azure model:",t),!1}}calculateSteadiness(e){if(this.posesHistory.length<10)return 0;const t=this.posesHistory.slice(-15),n=[];for(let i=1;i<t.length;i++){const r=t[i-1].poses[0],s=t[i].poses[0],a=this.findKeypointByName(r,e),o=this.findKeypointByName(s,e);if(a&&o&&void 0!==a.x&&void 0!==a.y&&void 0!==o.x&&void 0!==o.y){const e=o.x-a.x,t=o.y-a.y,r=Math.sqrt(e*e+t*t);n.push(r)}}if(n.length<3)return 0;const r=n.reduce(((e,t)=>e+t),0)/n.length,s=n.reduce(((e,t)=>e+Math.pow(t-r,2)),0)/n.length;return Math.max(0,1-Math.min(1,s/100))}calculatePatternScore(e){if(this.posesHistory.length<10)return 0;const t=this.posesHistory.slice(-15),n=[];for(let o=1;o<t.length;o++){const r=t[o-1].poses[0],s=t[o].poses[0],i=this.findKeypointByName(r,e),a=this.findKeypointByName(s,e);if(i&&a&&void 0!==i.x&&void 0!==i.y&&void 0!==a.x&&void 0!==a.y){const e=a.x-i.x,t=a.y-i.y;n.push([e,t])}}if(n.length<5)return 0;this.movementPatterns.set(e,n.reduce(((e,t)=>e.concat(t)),[]));let r=!0,s=!0;const i=n[0][0],a=n[0][1];for(let o=1;o<n.length;o++)n[o][0]>0!==i>0&&(r=!1),n[o][1]>0!==a>0&&(s=!1);return r||s?.8:.2}calculateContinuity(e){if(this.posesHistory.length<10)return 0;const t=this.posesHistory.slice(-15),n=[];for(let s=1;s<t.length;s++){const r=t[s-1].poses[0],i=t[s].poses[0],a=(t[s].timestamp-t[s-1].timestamp)/1e3,o=this.findKeypointByName(r,e),l=this.findKeypointByName(i,e);if(o&&l&&void 0!==o.x&&void 0!==o.y&&void 0!==l.x&&void 0!==l.y&&a>0){const e=l.x-o.x,t=l.y-o.y,r=Math.sqrt(e*e+t*t)/a;n.push(r)}}if(n.length<3)return 0;const r=n.filter((e=>e<5)).length;return Math.max(0,1-r/n.length)}heuristicIntentionality(e){const t=Math.sqrt(e.velocityX*e.velocityX+e.velocityY*e.velocityY)>20,n=e.jitter<12&&e.isSmooth,r=e.acceleration>15,s=e.durationOfMovement>.2&&e.durationOfMovement<1.5,i=!e.isReversing,a=e.frequencyOfMovement<4,o=e.steadiness>.6,l=e.patternScore>.5,u=e.continuity>.7,c=e.magnitudeOfMovement>15;let h=0,d=0;[{value:t,weight:1},{value:n,weight:1.5},{value:r,weight:.8},{value:s,weight:1},{value:i,weight:.7},{value:a,weight:1.2},{value:o,weight:1.2},{value:l,weight:.9},{value:u,weight:1},{value:c,weight:.7}].forEach((e=>{h+=e.value?e.weight:0,d+=e.weight}));const p=h/d;return console.log(`Intentionality for ${e.keypoint}: ${p.toFixed(2)}`),console.log(`  Speed: ${t}, Smooth: ${n}, Accel: ${r}`),console.log(`  Duration: ${s}, Direction: ${i}, Frequency: ${a}`),console.log(`  Steadiness: ${o}, Pattern: ${l}, Continuity: ${u}`),p>.55}isNotOnCooldown(e){const t=this.lastIntentionalMovements.get(e);if(!t)return!0;return Date.now()-t>this.cooldownPeriod}findKeypointByName(e,t){return e.keypoints.find((e=>e.name===t))}addCalibrationSample(e){let t=0;SY.forEach((n=>{const r=this.extractFeatures(n);r?(this.calibrationSamples.push({features:r,isIntentional:e}),t++):console.warn(`Could not extract features for keypoint: ${n}`)})),0===t?console.warn("No features could be extracted for any keypoints in this frame"):console.log(`Added ${t} calibration samples (${e?"intentional":"unintentional"})`);const n=this.calibrationSamples.filter((e=>e.isIntentional)).length,r=this.calibrationSamples.filter((e=>!e.isIntentional)).length;console.log(`Total calibration samples: ${this.calibrationSamples.length} (${n} intentional, ${r} unintentional)`)}async trainModel(){if(!this.isTfInitialized){console.warn("TensorFlow.js not initialized yet, waiting...");try{await this.waitForTensorflow()}catch(l){return console.error("TensorFlow initialization failed:",l),!1}}if(!this.model)return console.error("ML model not initialized"),!1;if(this.calibrationSamples.length<10)return console.warn("Not enough calibration samples to train the model"),!1;await this.calculateCalibrationQuality(),this.calibrationQuality<50&&console.warn("Low calibration quality. Consider recalibrating with more distinct movements.");const e=this.calibrationSamples.map((e=>[e.features.velocityX,e.features.velocityY,e.features.acceleration,e.features.jitter,e.features.isSmooth?1:0,"up"===e.features.direction?1:0,"down"===e.features.direction?1:0,"left"===e.features.direction?1:0,"right"===e.features.direction?1:0,e.features.magnitudeOfMovement/100,e.features.isReversing?1:0,e.features.frequencyOfMovement/10,e.features.steadiness,e.features.patternScore,e.features.continuity])),t=this.calibrationSamples.map((e=>e.isIntentional?1:0)),n=[...e],r=[...t],s=t.filter((e=>1===e)).length,i=t.filter((e=>0===e)).length;if(s<i){for(let u=0;u<e.length;u++)if(1===t[u])for(let t=0;t<Math.min(5,Math.floor(i/s));t++){const t=[...e[u]];t[0]*=.9+.2*Math.random(),t[1]*=.9+.2*Math.random(),t[2]*=.9+.2*Math.random(),t[3]*=.9+.2*Math.random(),t[9]*=.9+.2*Math.random(),n.push(t),r.push(1)}}else if(i<s)for(let u=0;u<e.length;u++)if(0===t[u])for(let t=0;t<Math.min(5,Math.floor(s/i));t++){const t=[...e[u]];t[0]*=.9+.2*Math.random(),t[1]*=.9+.2*Math.random(),t[2]*=.9+.2*Math.random(),t[3]*=.9+.2*Math.random(),t[9]*=.9+.2*Math.random(),n.push(t),r.push(0)}console.log(`Augmented dataset: ${n.length} samples (original: ${e.length})`);const a=Oh(n),o=Oh(r,[r.length,1]);try{console.log("Training model with",n.length,"samples");const e=100,t={epochs:e,batchSize:32,validationSplit:.2,callbacks:{onEpochEnd:(t,n)=>{if(console.log(`Epoch ${t}: loss = ${n.loss}, accuracy = ${n.acc}, val_loss = ${n.val_loss}, val_acc = ${n.val_acc}`),this.trainingProgressCallback){const n=(t+1)/e;this.trainingProgressCallback(n)}}}};await this.model.fit(a,o,t);const r=this.model.evaluate(a,o),s=r[1].dataSync()[0];return console.log(`Model training complete. Final accuracy: ${s}`),this.isModelTrained=!0,this.useMLPrediction=!0,a.dispose(),o.dispose(),r.forEach((e=>e.dispose())),this.trainingProgressCallback&&this.trainingProgressCallback(1),!0}catch(l){return console.error("Error training model:",l),a.dispose(),o.dispose(),!1}}async calculateCalibrationQuality(){const e=this.calibrationSamples.filter((e=>e.isIntentional)).length,t=this.calibrationSamples.filter((e=>!e.isIntentional)).length,n=this.calibrationSamples.length,r=Math.min(25,Math.round(n/100*25)),s=Math.min(e,t)/Math.max(e,t),i=Math.min(25,Math.round(s/.7*25)),a=this.calculateMovementDiversity(),o=await this.calculateIntentionalDistinction();this.calibrationQuality=r+i+a+o,console.log(`Calibration quality: ${this.calibrationQuality}/100`),console.log(`- Sample count: ${r}/25 (${n} samples)`),console.log(`- Balance: ${i}/25 (${e} intentional, ${t} unintentional)`),console.log(`- Diversity: ${a}/25`),console.log(`- Distinction: ${o}/25`)}calculateMovementDiversity(){const e=this.calibrationSamples.filter((e=>e.isIntentional)).map((e=>[e.features.direction,Math.round(e.features.magnitudeOfMovement/10)])),t=this.calibrationSamples.filter((e=>!e.isIntentional)).map((e=>[e.features.direction,Math.round(e.features.magnitudeOfMovement/10)])),n=new Set(e.map((e=>e.join("-")))).size,r=new Set(t.map((e=>e.join("-")))).size;return Math.min(25,Math.round(n/Math.max(5,e.length/3)*12.5+r/Math.max(5,t.length/3)*12.5))}async calculateIntentionalDistinction(){if(this.calibrationSamples.length<20)return 10;try{const e=this.calibrationSamples.map((e=>[e.features.jitter,e.features.isSmooth?1:0,e.features.magnitudeOfMovement/100,e.features.isReversing?1:0])),t=this.calibrationSamples.map((e=>e.isIntentional?1:0)),n=Math.floor(.7*e.length),r=e.slice(0,n),s=e.slice(n),i=t.slice(0,n),a=t.slice(n),o=a.some((e=>1===e)),l=a.some((e=>0===e));if(!o||!l)return 15;const u=Oh(r),c=Oh(i,[i.length,1]),h=Oh(s),d=Oh(a,[a.length,1]),p=OO();p.add(JF({units:8,activation:"relu",inputShape:[4]})),p.add(JF({units:1,activation:"sigmoid"})),p.compile({optimizer:xp.adam(.01),loss:"binaryCrossentropy",metrics:["accuracy"]}),await p.fit(u,c,{epochs:20,batchSize:16,verbose:0});const f=p.evaluate(h,d),m=f[1].dataSync()[0];u.dispose(),c.dispose(),h.dispose(),d.dispose(),f.forEach((e=>e.dispose())),p.dispose();const g=Math.round(25*(m-.5)*2);return Math.max(0,Math.min(25,g))}catch(e){return console.error("Error calculating distinction score:",e),10}}predictWithModel(e){if(!this.model||!this.isModelTrained||!this.isTfInitialized)return{isIntentional:!1,confidence:.5};const t=Oh([[e.velocityX,e.velocityY,e.acceleration,e.jitter,e.isSmooth?1:0,"up"===e.direction?1:0,"down"===e.direction?1:0,"left"===e.direction?1:0,"right"===e.direction?1:0,e.magnitudeOfMovement/100,e.isReversing?1:0,e.frequencyOfMovement/10,e.steadiness,e.patternScore,e.continuity]]);try{const e=this.model.predict(t),n=e.dataSync()[0];return t.dispose(),e.dispose(),{isIntentional:n>.65,confidence:n}}catch(n){return console.error("Prediction error:",n),t.dispose(),{isIntentional:!1,confidence:.5}}}async saveModel(e){if(!this.model||!this.isModelTrained||!this.isTfInitialized)return console.error("No trained model to save"),!1;try{const t=await this.model.save(`localstorage://user-model-${e}`);return console.log("Model saved:",t),localStorage.setItem(`user-calibration-quality-${e}`,this.calibrationQuality.toString()),!0}catch(t){return console.error("Error saving model:",t),!1}}async loadModel(e){if(!this.isTfInitialized){console.warn("TensorFlow.js not initialized yet, waiting...");try{await this.waitForTensorflow()}catch(t){return console.error("TensorFlow initialization failed:",t),!1}}try{const t=localStorage.getItem(`user-calibration-quality-${e}`);t&&(this.calibrationQuality=parseInt(t,10));const n=await AO(`localstorage://user-model-${e}`);return!!n&&(this.model&&this.model.dispose(),this.model=n,this.isModelTrained=!0,this.useMLPrediction=!0,console.log("Loaded saved model for user",e),console.log(`Calibration quality: ${this.calibrationQuality}/100`),!0)}catch(t){return console.error("Error loading model:",t),!1}}clearCalibration(){this.calibrationSamples=[],this.calibrationQuality=0,console.log("Calibration samples cleared")}setCalibrationDuration(e){this.calibrationDuration=Math.max(5,e),console.log(`Calibration duration set to ${this.calibrationDuration} seconds`)}getCalibrationDuration(){return this.calibrationDuration}getStatus(){const e=this.calibrationSamples.filter((e=>e.isIntentional)).length;return{isModelTrained:this.isModelTrained,calibrationSamples:this.calibrationSamples.length,intentionalSamples:e,unintentionalSamples:this.calibrationSamples.length-e,isTfInitialized:this.isTfInitialized,calibrationQuality:this.calibrationQuality,azureEnabled:this.azureConfig.enabled}}}const IY={computerVisionEndpoint:"https://reactmusicvision.cognitiveservices.azure.com/",computerVisionKey1:"9ZWwcipd56k45lgE5KYEGMJyGQ5HgfrcDbjaJHta1L4C0Bn671BwJQQJ99BCACYeBjFXJ3w3AAAFACOGlFcE",computerVisionKey2:"43nfYXDI17ZvFFsSA88zpH9ohdtwRfLOQDU5TaHLpp0bJa5fFPNUJQQJ99BCACYeBjFXJ3w3AAAFACOGzPB5",computerVisionLocation:"eastus",get computerVisionKey(){return this.computerVisionKey1}},_Y=e=>{let{detector:t,onCalibrationComplete:n}=e;const[r,s]=(0,T.useState)(0),[i,a]=(0,T.useState)(!1),[o,l]=(0,T.useState)(0),[u,c]=(0,T.useState)(""),[h,d]=(0,T.useState)({isModelTrained:!1,calibrationSamples:0,intentionalSamples:0,unintentionalSamples:0,isTfInitialized:!1,calibrationQuality:0,azureEnabled:!1}),[p,f]=(0,T.useState)(!1),[m,g]=(0,T.useState)(0),[y,b]=(0,T.useState)(!0),[v,x]=(0,T.useState)(15),[w,k]=(0,T.useState)([]),[S,C]=(0,T.useState)(""),[I,_]=(0,T.useState)(!0),[N,E]=(0,T.useState)(!1),[$,A]=(0,T.useState)(0),[R,O]=(0,T.useState)([]),[D,F]=(0,T.useState)(!1);(0,T.useEffect)((()=>{t&&(x(t.getCalibrationDuration()),I&&(t.configureAzureServices({apiKey:IY.computerVisionKey,endpoint:IY.computerVisionEndpoint,enabled:!0}),d((e=>({...e,azureEnabled:!0})))))}),[t]),(0,T.useEffect)((()=>{let e;return o>0?e=setTimeout((()=>l(o-1)),1e3):0===o&&i&&(a(!1),M(),r<5&&s(r+1)),()=>{e&&clearTimeout(e)}}),[o,i,r]),(0,T.useEffect)((()=>{const e=setInterval((()=>{t&&d(t.getStatus())}),1e3);return()=>clearInterval(e)}),[t]);const M=()=>{const e=t.getStatus();if(e.calibrationSamples<10)return void C("Need more calibration samples. Please continue.");const n=e.intentionalSamples/e.calibrationSamples;n<.3||n>.7?C("Your calibration is imbalanced. Try to provide both intentional and unintentional movements."):e.calibrationQuality<40?C("Low calibration quality. Try making more varied and distinct movements."):e.calibrationQuality<70?C("Moderate calibration quality. Additional samples may improve accuracy."):C("Good calibration quality. Ready for training!")},P=e=>{const n=parseInt(e.target.value,10);x(n),t.setCalibrationDuration(n)},z=()=>{F(!D)};return(0,vY.jsxs)("div",{className:"calibration-container",children:[(0,vY.jsxs)("div",{className:"calibration-layout",children:[(0,vY.jsxs)("div",{className:"webcam-section",children:[(0,vY.jsx)(kY,{onPoseDetected:e=>{if(e&&0!==e.length&&i){const n=r>=3&&r<=4;t.addCalibrationSample(n);const s=e[0].keypoints.filter((e=>e.score&&e.score>.5&&e.name)).map((e=>e.name||""));k(s),n&&s.length>0&&O((e=>{const t=[...e];return s.forEach((e=>{t.includes(e)||t.push(e)})),t}))}},showDebugInfo:y,highlightIntentional:r>=3,intentionalKeypoints:R}),(0,vY.jsxs)("div",{className:"sample-counters",children:[(0,vY.jsxs)("div",{className:"sample-counter",children:[(0,vY.jsx)("div",{className:"sample-label intentional",children:"Intentional:"}),(0,vY.jsx)("div",{className:"sample-value",children:h.intentionalSamples})]}),(0,vY.jsxs)("div",{className:"sample-counter",children:[(0,vY.jsx)("div",{className:"sample-label unintentional",children:"Unintentional:"}),(0,vY.jsx)("div",{className:"sample-value",children:h.unintentionalSamples})]}),h.calibrationQuality>0&&(0,vY.jsxs)("div",{className:"sample-counter",children:[(0,vY.jsx)("div",{className:"sample-label quality",children:"Quality:"}),(0,vY.jsxs)("div",{className:"sample-value quality-"+(h.calibrationQuality>70?"good":h.calibrationQuality>40?"medium":"poor"),children:[h.calibrationQuality,"/100"]})]})]})]}),(0,vY.jsxs)("div",{className:"instructions-section",children:[0===r?(0,vY.jsxs)("div",{className:"calibration-intro",children:[(0,vY.jsx)("h2",{children:"Welcome to Movement Calibration"}),(0,vY.jsx)("p",{children:"This process will train the system to recognize your intentional movements."}),(0,vY.jsx)("p",{children:"We'll record samples of both your unintentional and intentional movements."}),(0,vY.jsx)("p",{children:"Please enter a unique user ID to save your calibration:"}),(0,vY.jsx)("input",{type:"text",value:u,onChange:e=>c(e.target.value),placeholder:"Your name or ID",className:"user-id-input"}),(0,vY.jsxs)("div",{className:"settings-panel",children:[(0,vY.jsx)("div",{className:"settings-header",onClick:z,children:(0,vY.jsxs)("h3",{children:["Calibration Settings ",D?"\u25bc":"\u25b6"]})}),D&&(0,vY.jsxs)("div",{className:"advanced-settings",children:[(0,vY.jsxs)("div",{className:"setting-item",children:[(0,vY.jsx)("label",{children:"Sample Duration:"}),(0,vY.jsxs)("select",{value:v,onChange:P,className:"duration-select",children:[(0,vY.jsx)("option",{value:"5",children:"5 seconds"}),(0,vY.jsx)("option",{value:"10",children:"10 seconds"}),(0,vY.jsx)("option",{value:"15",children:"15 seconds (recommended)"}),(0,vY.jsx)("option",{value:"20",children:"20 seconds"}),(0,vY.jsx)("option",{value:"30",children:"30 seconds (best quality)"})]})]}),(0,vY.jsxs)("div",{className:"setting-item",children:[(0,vY.jsx)("label",{children:"Use Azure AI Services:"}),(0,vY.jsxs)("div",{className:"toggle-container",children:[(0,vY.jsx)("input",{type:"checkbox",checked:I,onChange:e=>_(e.target.checked),id:"azure-toggle"}),(0,vY.jsx)("label",{htmlFor:"azure-toggle",className:"toggle-label"})]}),(0,vY.jsx)("div",{className:"setting-description",children:"Using Azure Computer Vision for enhanced gesture recognition"})]})]})]}),(0,vY.jsx)("button",{onClick:()=>s(1),disabled:!u,className:"next-button",children:"Begin Calibration"})]}):null,r>0&&r<5&&(0,vY.jsxs)("div",{className:"progress-indicator",children:[(0,vY.jsx)("p",{children:"Calibration Progress:"}),(0,vY.jsx)("div",{className:"progress-bar",children:(0,vY.jsx)("div",{className:"progress-fill",style:{width:r/5*100+"%"}})}),(0,vY.jsxs)("p",{children:[r," of 5 steps complete"]})]})]})]}),i&&(0,vY.jsxs)("div",{className:"recording-overlay",children:[(0,vY.jsx)("div",{className:"countdown-timer",children:o}),r>=3?(0,vY.jsx)("div",{className:"recording-message intentional",children:"Recording Intentional Movements"}):(0,vY.jsx)("div",{className:"recording-message unintentional",children:"Recording Unintentional Movements"}),w.length>0&&(0,vY.jsxs)("div",{className:"overlay-keypoints",children:["Detected keypoints: ",w.join(", ")]})]}),(0,vY.jsxs)("button",{onClick:()=>b(!y),className:"debug-toggle",children:[y?"Hide":"Show"," Debug Info"]})]})},TY=$(),NY=e=>{let{onMotionDetected:t}=e;const n=(0,T.useRef)(null),r=(0,T.useRef)(null),s=(0,T.useRef)(null),i=(0,T.useRef)(void 0),a=(0,T.useRef)(0),[o,l]=(0,T.useState)(!1);(0,T.useEffect)((()=>{const e=()=>{n.current&&n.current.video&&4===n.current.video.readyState&&r.current?(l(!0),u()):setTimeout(e,100)};return e(),()=>{i.current&&cancelAnimationFrame(i.current)}}),[]);const u=()=>{const e=o=>{if(o-a.current<100)i.current=requestAnimationFrame(e);else{a.current=o;try{var l;const a=null===(l=n.current)||void 0===l?void 0:l.video,o=r.current;if(!a||!o)return void(i.current=requestAnimationFrame(e));const u=o.getContext("2d");if(!u)return void(i.current=requestAnimationFrame(e));o.width===a.videoWidth&&o.height===a.videoHeight||(o.width=a.videoWidth,o.height=a.videoHeight),u.drawImage(a,0,0);const c=u.getImageData(0,0,o.width,o.height);if(!s.current)return s.current=c,void(i.current=requestAnimationFrame(e));const h=Math.floor(o.width/8),d=Math.floor(o.height/8);let p={x:0,y:0,diff:0};for(let e=0;e<8;e++)for(let t=0;t<8;t++){const n=t*h,r=e*d,i=Math.min(n+h,o.width),a=Math.min(r+d,o.height);let l=0,u=0;for(let e=r;e<a;e+=4)for(let t=n;t<i;t+=4){const n=4*(e*o.width+t),r=Math.abs(c.data[n]-s.current.data[n]),i=Math.abs(c.data[n+1]-s.current.data[n+1]),a=Math.abs(c.data[n+2]-s.current.data[n+2]);l+=(r+i+a)/3,u++}const f=u>0?l/u:0;f>p.diff&&(p={x:t,y:e,diff:f})}if(p.diff>30){const e=(p.x+.5)*h,n=(p.y+.5)*d;let r="none";const s=3.5,i=3.5;r=Math.abs(p.x-s)>Math.abs(p.y-i)?p.x>s?"right":"left":p.y>i?"down":"up";const a=Math.min(p.diff,100);t(e,n,r,a),u.fillStyle="rgba(255, 0, 0, 0.3)",u.fillRect(p.x*h,p.y*d,h,d)}s.current=c}catch(u){console.error("Error in motion detection:",u)}i.current=requestAnimationFrame(e)}};i.current=requestAnimationFrame(e)};return(0,vY.jsxs)("div",{className:"webcam-container",children:[(0,vY.jsx)(TY,{ref:n,audio:!1,screenshotFormat:"image/jpeg",width:320,height:240,videoConstraints:{width:320,height:240,facingMode:"user"},className:"webcam-video"}),(0,vY.jsx)("canvas",{ref:r,className:"webcam-canvas",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",visibility:"hidden"}}),(0,vY.jsx)("div",{className:"webcam-status",children:o?"Ready":"Loading..."})]})},EY=e=>{let{soundEngine:t,onBack:n}=e;const[r,s]=(0,T.useState)("Piano"),[i,a]=(0,T.useState)(""),[o,l]=(0,T.useState)(!0),[u,c]=(0,T.useState)(""),h=(0,T.useRef)(!0),d=(0,T.useRef)({}),p=(0,T.useRef)(300);(0,T.useEffect)((()=>{let e=!0;return(async()=>{try{await t.initialize(),t.loadPreset("Piano");const n=t.getPresets().find((e=>"Piano"===e.name));n&&e&&a(n.description),setTimeout((()=>{e&&t.playTestTone()}),500)}catch(n){console.error("Error initializing app:",n)}})(),()=>{e=!1;try{t.stopAllSounds()}catch(n){console.error("Error cleaning up:",n)}}}),[t]),(0,T.useEffect)((()=>{h.current=o}),[o]);return(0,vY.jsxs)("div",{className:"calibration-container",children:[(0,vY.jsx)("h1",{children:"Quick Play Mode"}),(0,vY.jsx)("p",{className:"quick-play-description",children:"Move in the webcam view to create music! No calibration needed."}),(0,vY.jsx)("div",{className:"webcam-section",style:{marginBottom:"20px"},children:(0,vY.jsx)(NY,{onMotionDetected:(e,n,r,s)=>{if(h.current)try{const i=320,a=240;let o;o=n<a/3?e<i/2?"left_shoulder":"right_shoulder":n<2*a/3?e<i/2?"left_wrist":"right_wrist":"nose",Math.random()<.2&&c(`${o} ${r}`);const l=Date.now();if(l-(d.current[o]||0)<p.current)return;d.current[o]=l,t.processMovement(o,!0,r,s)}catch(i){console.error("Error processing motion:",i)}}})}),(0,vY.jsxs)("div",{className:"controls-panel",children:[(0,vY.jsx)("h2",{children:"Music Controls"}),(0,vY.jsxs)("div",{className:"preset-selector",children:[(0,vY.jsx)("label",{children:"Sound Preset:"}),(0,vY.jsx)("select",{value:r,onChange:e=>{try{const n=e.target.value;console.log(`Changing preset to: ${n}`),s(n);const r=t.getPresets().find((e=>e.name===n));a(r?r.description:""),setTimeout((()=>{try{t.stopAllSounds(),t.loadPreset(n),setTimeout((()=>{h.current&&t.playTestTone()}),300),console.log(`Preset changed successfully to: ${n}`)}catch(e){console.error("Error applying preset:",e)}}),100)}catch(n){console.error("Error in preset change handler:",n)}},children:t.getPresets().map((e=>(0,vY.jsx)("option",{value:e.name,children:e.name},e.name)))})]}),(0,vY.jsx)("div",{className:"preset-description",children:i}),u&&(0,vY.jsxs)("div",{className:"motion-detected",children:["Last detected: ",u]}),(0,vY.jsxs)("div",{className:"action-buttons",children:[(0,vY.jsx)("button",{onClick:()=>{try{const e=!o;l(e),h.current=e,e||setTimeout((()=>{t.stopAllSounds()}),50)}catch(e){console.error("Error toggling sound:",e)}},children:o?"Mute Sound":"Unmute Sound"}),(0,vY.jsx)("button",{onClick:()=>{try{t.playTestTone()}catch(e){console.error("Error playing test sound:",e)}},children:"Play Test Sound"}),(0,vY.jsx)("button",{className:"back-button",onClick:n,children:"Back to Menu"})]}),(0,vY.jsxs)("div",{className:"quick-play-instructions",children:[(0,vY.jsx)("h3",{children:"How to Play:"}),(0,vY.jsxs)("ul",{children:[(0,vY.jsxs)("li",{children:["Move in the ",(0,vY.jsx)("strong",{children:"left area"})," for left hand sounds"]}),(0,vY.jsxs)("li",{children:["Move in the ",(0,vY.jsx)("strong",{children:"right area"})," for right hand sounds"]}),(0,vY.jsxs)("li",{children:["Move in the ",(0,vY.jsx)("strong",{children:"center"})," for special effects"]}),(0,vY.jsx)("li",{children:"Change presets to explore different instruments"})]}),(0,vY.jsxs)("div",{className:"sound-status "+(o?"on":"off"),children:["Sound is currently ",o?"ON":"OFF"]})]})]})]})},$Y="15.0.4";var AY=n(998);const RY=new WeakSet,OY=new WeakMap,DY=new WeakMap,FY=new WeakMap,MY=new WeakMap,PY=new WeakMap,zY=new WeakMap,LY=new WeakMap,BY=new WeakMap,VY=new WeakMap,WY={construct:()=>WY},UY=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,GY=(e,t)=>{const n=[];let r=e.replace(/^[\s]+/,""),s=r.match(UY);for(;null!==s;){const e=s[1].slice(1,-1),i=s[0].replace(/([\s]+)?;?$/,"").replace(e,new URL(e,t).toString());n.push(i),r=r.slice(s[0].length).replace(/^[\s]+/,""),s=r.match(UY)}return[n.join(";"),r]},jY=e=>{if(void 0!==e&&!Array.isArray(e))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},HY=e=>{if(!(e=>{try{new new Proxy(e,WY)}catch{return!1}return!0})(e))throw new TypeError("The given value for processorCtor should be a constructor.");if(null===e.prototype||"object"!==typeof e.prototype)throw new TypeError("The given value for processorCtor should have a prototype.")},qY=(e,t)=>{const n=e.get(t);if(void 0===n)throw new Error("A value with the given key could not be found.");return n},KY=(e,t)=>{const n=Array.from(e).filter(t);if(n.length>1)throw Error("More than one element was found.");if(0===n.length)throw Error("No element was found.");const[r]=n;return e.delete(r),r},XY=(e,t,n,r)=>{const s=qY(e,t),i=KY(s,(e=>e[0]===n&&e[1]===r));return 0===s.size&&e.delete(t),i},YY=e=>qY(zY,e),QY=e=>{if(RY.has(e))throw new Error("The AudioNode is already stored.");RY.add(e),YY(e).forEach((e=>e(!0)))},ZY=e=>"port"in e,JY=e=>{if(!RY.has(e))throw new Error("The AudioNode is not stored.");RY.delete(e),YY(e).forEach((e=>e(!1)))},eQ=(e,t)=>{!ZY(e)&&t.every((e=>0===e.size))&&JY(e)},tQ={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},nQ=(e,t)=>e.context===t,rQ=e=>{try{e.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},sQ=()=>new DOMException("","IndexSizeError"),iQ=e=>{var t;e.getChannelData=(t=e.getChannelData,n=>{try{return t.call(e,n)}catch(Q3){if(12===Q3.code)throw sQ();throw Q3}})},aQ={numberOfChannels:1},oQ=-34028234663852886e22,lQ=-oQ,uQ=e=>RY.has(e),cQ={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},hQ=e=>qY(OY,e),dQ=e=>qY(FY,e),pQ=(e,t)=>{const{activeInputs:n}=hQ(e);n.forEach((n=>n.forEach((n=>{let[r]=n;t.includes(e)||pQ(r,[...t,e])}))));const r=(e=>"playbackRate"in e)(e)?[e.playbackRate]:ZY(e)?Array.from(e.parameters.values()):(e=>"frequency"in e&&"gain"in e)(e)?[e.Q,e.detune,e.frequency,e.gain]:(e=>"offset"in e)(e)?[e.offset]:(e=>!("frequency"in e)&&"gain"in e)(e)?[e.gain]:(e=>"detune"in e&&"frequency"in e&&!("gain"in e))(e)?[e.detune,e.frequency]:(e=>"pan"in e)(e)?[e.pan]:[];for(const s of r){const e=dQ(s);void 0!==e&&e.activeInputs.forEach((e=>{let[n]=e;return pQ(n,t)}))}uQ(e)&&JY(e)},fQ=e=>{pQ(e.destination,[])},mQ=e=>void 0===e||"number"===typeof e||"string"===typeof e&&("balanced"===e||"interactive"===e||"playback"===e),gQ=e=>"context"in e,yQ=e=>gQ(e[0]),bQ=(e,t,n,r)=>{for(const s of e)if(n(s)){if(r)return!1;throw Error("The set contains at least one similar element.")}return e.add(t),!0},vQ=(e,t,n,r)=>{let[s,i]=n;bQ(e,[t,s,i],(e=>e[0]===t&&e[1]===s),r)},xQ=(e,t,n)=>{let[r,s,i]=t;const a=e.get(r);void 0===a?e.set(r,new Set([[s,i]])):bQ(a,[s,i],(e=>e[0]===s),n)},wQ=e=>"inputs"in e,kQ=(e,t,n,r)=>{if(wQ(t)){const s=t.inputs[r];return e.connect(s,n,0),[s,n,0]}return e.connect(t,n,r),[t,n,r]},SQ=(e,t,n)=>{for(const r of e)if(r[0]===t&&r[1]===n)return e.delete(r),r;return null},CQ=(e,t)=>{if(!YY(e).delete(t))throw new Error("Missing the expected event listener.")},IQ=(e,t,n)=>{const r=qY(e,t),s=KY(r,(e=>e[0]===n));return 0===r.size&&e.delete(t),s},_Q=(e,t,n,r)=>{wQ(t)?e.disconnect(t.inputs[r],n,0):e.disconnect(t,n,r)},TQ=e=>qY(DY,e),NQ=e=>qY(MY,e),EQ=e=>LY.has(e),$Q=e=>!RY.has(e),AQ=(e,t)=>new Promise((n=>{if(null!==t)n(!0);else{const t=e.createScriptProcessor(256,1,1),r=e.createGain(),s=e.createBuffer(1,2,44100),i=s.getChannelData(0);i[0]=1,i[1]=1;const a=e.createBufferSource();a.buffer=s,a.loop=!0,a.connect(t).connect(e.destination),a.connect(r),a.disconnect(r),t.onaudioprocess=r=>{const s=r.inputBuffer.getChannelData(0);Array.prototype.some.call(s,(e=>1===e))?n(!0):n(!1),a.stop(),t.onaudioprocess=null,a.disconnect(t),t.disconnect(e.destination)},a.start()}})),RQ=(e,t)=>{const n=new Map;for(const r of e)for(const e of r){const t=n.get(e);n.set(e,void 0===t?1:t+1)}n.forEach(((e,n)=>t(n,e)))},OQ=e=>"context"in e,DQ=e=>{const t=new Map;e.connect=(e=>function(n){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const i=OQ(n)?e(n,r,s):e(n,r),a=t.get(n);return void 0===a?t.set(n,[{input:s,output:r}]):a.every((e=>e.input!==s||e.output!==r))&&a.push({input:s,output:r}),i})(e.connect.bind(e)),e.disconnect=(n=>(r,s,i)=>{if(n.apply(e),void 0===r)t.clear();else if("number"===typeof r)for(const[e,n]of t){const s=n.filter((e=>e.output!==r));0===s.length?t.delete(e):t.set(e,s)}else if(t.has(r))if(void 0===s)t.delete(r);else{const e=t.get(r);if(void 0!==e){const n=e.filter((e=>e.output!==s&&(e.input!==i||void 0===i)));0===n.length?t.delete(r):t.set(r,n)}}for(const[n,a]of t)a.forEach((t=>{OQ(n)?e.connect(n,t.output,t.input):e.connect(n,t.output)}))})(e.disconnect)},FQ=(e,t,n,r)=>{const{activeInputs:s,passiveInputs:i}=dQ(t),{outputs:a}=hQ(e),o=YY(e),l=a=>{const o=TQ(e),l=NQ(t);if(a){const t=IQ(i,e,n);vQ(s,e,t,!1),r||EQ(e)||o.connect(l,n)}else{const t=((e,t,n)=>KY(e,(e=>e[0]===t&&e[1]===n)))(s,e,n);xQ(i,t,!1),r||EQ(e)||o.disconnect(l,n)}};return!!bQ(a,[t,n],(e=>e[0]===t&&e[1]===n),!0)&&(o.add(l),uQ(e)?vQ(s,e,[n,l],!0):xQ(i,[e,n,l],!0),!0)},MQ=(e,t,n,r,s)=>{const[i,a]=((e,t,n,r)=>{const{activeInputs:s,passiveInputs:i}=hQ(t),a=SQ(s[r],e,n);if(null===a)return[XY(i,e,n,r)[2],!1];return[a[2],!0]})(e,n,r,s);if(null!==i&&(CQ(e,i),!a||t||EQ(e)||_Q(TQ(e),TQ(n),r,s)),uQ(n)){const{activeInputs:e}=hQ(n);eQ(n,e)}},PQ=(e,t,n,r)=>{const[s,i]=((e,t,n)=>{const{activeInputs:r,passiveInputs:s}=dQ(t),i=SQ(r,e,n);if(null===i)return[IQ(s,e,n)[1],!1];return[i[2],!0]})(e,n,r);null!==s&&(CQ(e,s),!i||t||EQ(e)||TQ(e).disconnect(NQ(n),r))};class zQ{constructor(e){this._map=new Map(e)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this._map.forEach(((n,r)=>e.call(t,n,r,this)))}get(e){return this._map.get(e)}has(e){return this._map.has(e)}keys(){return this._map.keys()}values(){return this._map.values()}}const LQ={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}};function BQ(e,t,n,r,s){if("function"===typeof e.copyFromChannel)0===t[n].byteLength&&(t[n]=new Float32Array(128)),e.copyFromChannel(t[n],r,s);else{const i=e.getChannelData(r);if(0===t[n].byteLength)t[n]=i.slice(s,s+128);else{const e=new Float32Array(i.buffer,s*Float32Array.BYTES_PER_ELEMENT,128);t[n].set(e)}}}const VQ=(e,t,n,r,s)=>{"function"===typeof e.copyToChannel?0!==t[n].byteLength&&e.copyToChannel(t[n],r,s):0!==t[n].byteLength&&e.getChannelData(r).set(t[n],s)},WQ=(e,t)=>{const n=[];for(let r=0;r<e;r+=1){const e=[],s="number"===typeof t?t:t[r];for(let t=0;t<s;t+=1)e.push(new Float32Array(128));n.push(e)}return n},UQ=async(e,t,n,r,s,i,a)=>{const o=null===t?128*Math.ceil(e.context.length/128):t.length,l=r.channelCount*r.numberOfInputs,u=s.reduce(((e,t)=>e+t),0),c=0===u?null:n.createBuffer(u,o,n.sampleRate);if(void 0===i)throw new Error("Missing the processor constructor.");const h=hQ(e),d=await((e,t)=>{const n=qY(VY,e),r=TQ(t);return qY(n,r)})(n,e),p=WQ(r.numberOfInputs,r.channelCount),f=WQ(r.numberOfOutputs,s),m=Array.from(e.parameters.keys()).reduce(((e,t)=>({...e,[t]:new Float32Array(128)})),{});for(let y=0;y<o;y+=128){if(r.numberOfInputs>0&&null!==t)for(let e=0;e<r.numberOfInputs;e+=1)for(let n=0;n<r.channelCount;n+=1)BQ(t,p[e],n,n,y);void 0!==i.parameterDescriptors&&null!==t&&i.parameterDescriptors.forEach(((e,n)=>{let{name:r}=e;BQ(t,m,r,l+n,y)}));for(let e=0;e<r.numberOfInputs;e+=1)for(let t=0;t<s[e];t+=1)0===f[e][t].byteLength&&(f[e][t]=new Float32Array(128));try{const e=p.map(((e,t)=>0===h.activeInputs[t].size?[]:e)),t=a(y/n.sampleRate,n.sampleRate,(()=>d.process(e,f,m)));if(null!==c)for(let n=0,i=0;n<r.numberOfOutputs;n+=1){for(let e=0;e<s[n];e+=1)VQ(c,f[n],e,i+e,y);i+=s[n]}if(!t)break}catch(g){e.dispatchEvent(new ErrorEvent("processorerror",{colno:g.colno,filename:g.filename,lineno:g.lineno,message:g.message}));break}}return c},GQ={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},jQ={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},HQ={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},qQ={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},KQ={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},XQ=e=>{const{port1:t,port2:n}=new MessageChannel;return new Promise((r=>{const s=()=>{n.onmessage=null,t.close(),n.close(),r()};n.onmessage=()=>s();try{t.postMessage(e,[e])}catch{}finally{s()}}))},YQ={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},QQ=(e,t,n)=>{const r=t[n];if(void 0===r)throw e();return r},ZQ={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},JQ={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},eZ=()=>new DOMException("","InvalidStateError"),tZ=()=>new DOMException("","InvalidAccessError"),nZ={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},rZ=(e,t,n,r,s,i,a,o,l,u,c)=>{const h=u.length;let d=o;for(let p=0;p<h;p+=1){let o=n[0]*u[p];for(let t=1;t<s;t+=1){const r=d-t&l-1;o+=n[t]*i[r],o-=e[t]*a[r]}for(let e=s;e<r;e+=1)o+=n[e]*i[d-e&l-1];for(let n=s;n<t;n+=1)o-=e[n]*a[d-n&l-1];i[d]=u[p],a[d]=o,d=d+1&l-1,c[p]=o}return d},sZ={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},iZ=e=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const n=e.decodeAudioData(t.buffer,(()=>{}));return void 0!==n&&(n.catch((()=>{})),!0)}catch{}return!1},aZ={numberOfChannels:1},oZ=(e,t,n)=>{const r=t[n];void 0!==r&&r!==e[n]&&(e[n]=r)},lZ=(e,t)=>{oZ(e,t,"channelCount"),oZ(e,t,"channelCountMode"),oZ(e,t,"channelInterpretation")},uZ=e=>"function"===typeof e.getFloatTimeDomainData,cZ=(e,t,n)=>{const r=t[n];void 0!==r&&r!==e[n].value&&(e[n].value=r)},hZ=e=>{e.start=(t=>function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=arguments.length>2?arguments[2]:void 0;if("number"===typeof s&&s<0||r<0||n<0)throw new RangeError("The parameters can't be negative.");t.call(e,n,r,s)})(e.start)},dZ=e=>{var t;e.stop=(t=e.stop,function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(n<0)throw new RangeError("The parameter can't be negative.");t.call(e,n)})},pZ=(e,t)=>null===e?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(e*t))))),fZ=async(e,t)=>{const n=await(e=>new Promise(((t,n)=>{const{port1:r,port2:s}=new MessageChannel;r.onmessage=e=>{let{data:n}=e;r.close(),s.close(),t(n)},r.onmessageerror=e=>{let{data:t}=e;r.close(),s.close(),n(t)},s.postMessage(e)})))(t);return new e(n)},mZ=(e,t)=>{const n=e.createBiquadFilter();return lZ(n,t),cZ(n,t,"Q"),cZ(n,t,"detune"),cZ(n,t,"frequency"),cZ(n,t,"gain"),oZ(n,t,"type"),n},gZ=(e,t)=>{const n=e.createChannelSplitter(t.numberOfOutputs);return lZ(n,t),(e=>{const t=e.numberOfOutputs;Object.defineProperty(e,"channelCount",{get:()=>t,set:e=>{if(e!==t)throw eZ()}}),Object.defineProperty(e,"channelCountMode",{get:()=>"explicit",set:e=>{if("explicit"!==e)throw eZ()}}),Object.defineProperty(e,"channelInterpretation",{get:()=>"discrete",set:e=>{if("discrete"!==e)throw eZ()}})})(n),n},yZ=(e,t)=>(e.connect=t.connect.bind(t),e.disconnect=t.disconnect.bind(t),e),bZ=(e,t)=>{const n=e.createDelay(t.maxDelayTime);return lZ(n,t),cZ(n,t,"delayTime"),n},vZ=(e,t)=>{const n=e.createGain();return lZ(n,t),cZ(n,t,"gain"),n};function xZ(e,t){const n=t[0]*t[0]+t[1]*t[1];return[(e[0]*t[0]+e[1]*t[1])/n,(e[1]*t[0]-e[0]*t[1])/n]}function wZ(e,t){let n=[0,0];for(let i=e.length-1;i>=0;i-=1)s=t,n=[(r=n)[0]*s[0]-r[1]*s[1],r[0]*s[1]+r[1]*s[0]],n[0]+=e[i];var r,s;return n}const kZ=(e,t,n,r)=>e.createScriptProcessor(t,n,r),SZ=()=>new DOMException("","NotSupportedError"),CZ={numberOfChannels:1},IZ={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},_Z={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},TZ={disableNormalization:!1},NZ={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},EZ=()=>new DOMException("","UnknownError"),$Z={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},AZ=(e,t,n)=>void 0===e.copyFromChannel?e.getChannelData(n)[0]:(e.copyFromChannel(t,n),t[0]),RZ=e=>{if(null===e)return!1;const t=e.length;return t%2!==0?0!==e[Math.floor(t/2)]:e[t/2-1]+e[t/2]!==0},OZ=(e,t,n,r)=>{let s=e;for(;!s.hasOwnProperty(t);)s=Object.getPrototypeOf(s);const{get:i,set:a}=Object.getOwnPropertyDescriptor(s,t);Object.defineProperty(e,t,{get:n(i),set:r(a)})},DZ=(e,t,n)=>{try{e.setValueAtTime(t,n)}catch(Q3){if(9!==Q3.code)throw Q3;DZ(e,t,n+1e-7)}},FZ=e=>{const t=e.createOscillator();try{t.start(-1)}catch(Q3){return Q3 instanceof RangeError}return!1},MZ=e=>{const t=e.createBuffer(1,1,44100),n=e.createBufferSource();n.buffer=t,n.start(),n.stop();try{return n.stop(),!0}catch{return!1}},PZ=e=>{const t=e.createOscillator();try{t.stop(-1)}catch(Q3){return Q3 instanceof RangeError}return!1},zZ=(e,t)=>{const n=t.createGain();e.connect(n);const r=(t=>()=>{t.call(e,n),e.removeEventListener("ended",r)})(e.disconnect);e.addEventListener("ended",r),yZ(e,n),e.stop=(t=>{let r=!1;return function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(r)try{t.call(e,s)}catch{n.gain.setValueAtTime(0,s)}else t.call(e,s),r=!0}})(e.stop)},LZ=(e,t)=>n=>{const r={value:e};return Object.defineProperties(n,{currentTarget:r,target:r}),"function"===typeof t?t.call(e,n):t.handleEvent.call(e,n)},BZ=(e=>(t,n,r,s)=>{let[i,a,o]=r;e(t[a],[n,i,o],(e=>e[0]===n&&e[1]===i),s)})(bQ),VZ=(e=>(t,n,r,s)=>{let[i,a,o]=r;const l=t.get(i);void 0===l?t.set(i,new Set([[a,n,o]])):e(l,[a,n,o],(e=>e[0]===a&&e[1]===n),s)})(bQ),WZ=(e=>(t,n,r,s)=>e(t[s],(e=>e[0]===n&&e[1]===r)))(KY),UZ=new WeakMap,GZ=(e=>t=>{var n;return null!==(n=e.get(t))&&void 0!==n?n:0})(UZ),jZ=(HZ=new Map,qZ=new WeakMap,(e,t)=>{const n=qZ.get(e);if(void 0!==n)return n;const r=HZ.get(e);if(void 0!==r)return r;try{const n=t();return n instanceof Promise?(HZ.set(e,n),n.catch((()=>!1)).then((t=>(HZ.delete(e),qZ.set(e,t),t)))):(qZ.set(e,n),n)}catch{return qZ.set(e,!1),!1}});var HZ,qZ;const KZ="undefined"===typeof window?null:window,XZ=((e,t)=>(n,r)=>{const s=n.createAnalyser();if(lZ(s,r),!(r.maxDecibels>r.minDecibels))throw t();return oZ(s,r,"fftSize"),oZ(s,r,"maxDecibels"),oZ(s,r,"minDecibels"),oZ(s,r,"smoothingTimeConstant"),e(uZ,(()=>uZ(s)))||(e=>{e.getFloatTimeDomainData=t=>{const n=new Uint8Array(t.length);e.getByteTimeDomainData(n);const r=Math.max(n.length,e.fftSize);for(let e=0;e<r;e+=1)t[e]=.0078125*(n[e]-128);return t}})(s),s})(jZ,sQ),YZ=(e=>t=>{const n=e(t);if(null===n.renderer)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return n.renderer})(hQ),QZ=((e,t,n)=>async(r,s,i)=>{const a=e(r);await Promise.all(a.activeInputs.map(((e,a)=>Array.from(e).map((async e=>{let[o,l]=e;const u=t(o),c=await u.render(o,s),h=r.context.destination;n(o)||r===h&&n(r)||c.connect(i,l,a)})))).reduce(((e,t)=>[...e,...t]),[]))})(hQ,YZ,EQ),ZZ=((e,t,n)=>()=>{const r=new WeakMap;return{render(s,i){const a=r.get(i);return void 0!==a?Promise.resolve(a):(async(s,i)=>{let a=t(s);if(!nQ(a,i)){const t={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=e(i,t)}return r.set(i,a),await n(s,i,a),a})(s,i)}}})(XZ,TQ,QZ),JZ=(eJ=PY,e=>{const t=eJ.get(e);if(void 0===t)throw eZ();return t});var eJ;const tJ=(e=>null===e?null:e.hasOwnProperty("OfflineAudioContext")?e.OfflineAudioContext:e.hasOwnProperty("webkitOfflineAudioContext")?e.webkitOfflineAudioContext:null)(KZ),nJ=(e=>t=>null!==e&&t instanceof e)(tJ),rJ=new WeakMap,sJ=(e=>class{constructor(e){this._nativeEventTarget=e,this._listeners=new WeakMap}addEventListener(t,n,r){if(null!==n){let s=this._listeners.get(n);void 0===s&&(s=e(this,n),"function"===typeof n&&this._listeners.set(n,s)),this._nativeEventTarget.addEventListener(t,s,r)}}dispatchEvent(e){return this._nativeEventTarget.dispatchEvent(e)}removeEventListener(e,t,n){const r=null===t?void 0:this._listeners.get(t);this._nativeEventTarget.removeEventListener(e,void 0===r?null:r,n)}})(LZ),iJ=(e=>null===e?null:e.hasOwnProperty("AudioContext")?e.AudioContext:e.hasOwnProperty("webkitAudioContext")?e.webkitAudioContext:null)(KZ),aJ=(e=>t=>null!==e&&t instanceof e)(iJ),oJ=(e=>t=>null!==e&&"function"===typeof e.AudioNode&&t instanceof e.AudioNode)(KZ),lJ=(e=>t=>null!==e&&"function"===typeof e.AudioParam&&t instanceof e.AudioParam)(KZ),uJ=(e=>null===e?null:e.hasOwnProperty("AudioWorkletNode")?e.AudioWorkletNode:null)(KZ),cJ=((e,t,n,r,s,i,a,o,l,u,c,h,d,p,f,m)=>class extends u{constructor(t,r,s,i){super(s),this._context=t,this._nativeAudioNode=s;const a=c(t);h(a)&&!0!==n(AQ,(()=>AQ(a,m)))&&DQ(s),DY.set(this,s),zY.set(this,new Set),"closed"!==t.state&&r&&QY(this),e(this,i,s)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(e){this._nativeAudioNode.channelCount=e}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(e){this._nativeAudioNode.channelCountMode=e}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(e){this._nativeAudioNode.channelInterpretation=e}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(n<0||n>=this._nativeAudioNode.numberOfOutputs)throw s();const u=c(this._context),h=f(u);if(d(e)||p(e))throw i();if(gQ(e)){const s=TQ(e);try{const t=kQ(this._nativeAudioNode,s,n,o),r=$Q(this);(h||r)&&this._nativeAudioNode.disconnect(...t),"closed"!==this.context.state&&!r&&$Q(e)&&QY(e)}catch(Q3){if(12===Q3.code)throw i();throw Q3}if(t(this,e,n,o,h)){const t=l([this],e);RQ(t,r(h))}return e}const m=NQ(e);if("playbackRate"===m.name&&1024===m.maxValue)throw a();try{this._nativeAudioNode.connect(m,n),(h||$Q(this))&&this._nativeAudioNode.disconnect(m,n)}catch(Q3){if(12===Q3.code)throw i();throw Q3}if(FQ(this,e,n,h)){const t=l([this],e);RQ(t,r(h))}}disconnect(e,t,n){let r;const a=c(this._context),u=f(a);if(void 0===e)r=((e,t)=>{const n=hQ(e),r=[];for(const s of n.outputs)yQ(s)?MQ(e,t,...s):PQ(e,t,...s),r.push(s[0]);return n.outputs.clear(),r})(this,u);else if("number"===typeof e){if(e<0||e>=this.numberOfOutputs)throw s();r=((e,t,n)=>{const r=hQ(e),s=[];for(const i of r.outputs)i[1]===n&&(yQ(i)?MQ(e,t,...i):PQ(e,t,...i),s.push(i[0]),r.outputs.delete(i));return s})(this,u,e)}else{if(void 0!==t&&(t<0||t>=this.numberOfOutputs))throw s();if(gQ(e)&&void 0!==n&&(n<0||n>=e.numberOfInputs))throw s();if(r=((e,t,n,r,s)=>{const i=hQ(e);return Array.from(i.outputs).filter((e=>e[0]===n&&(void 0===r||e[1]===r)&&(void 0===s||e[2]===s))).map((n=>(yQ(n)?MQ(e,t,...n):PQ(e,t,...n),i.outputs.delete(n),n[0])))})(this,u,e,t,n),0===r.length)throw i()}for(const s of r){const e=l([this],s);RQ(e,o)}}})((hJ=OY,(e,t,n)=>{const r=[];for(let s=0;s<n.numberOfInputs;s+=1)r.push(new Set);hJ.set(e,{activeInputs:r,outputs:new Set,passiveInputs:new WeakMap,renderer:t})}),((e,t,n,r,s,i,a,o,l,u,c,h,d)=>{const p=new WeakMap;return(f,m,g,y,b)=>{const{activeInputs:v,passiveInputs:x}=i(m),{outputs:w}=i(f),k=o(f),S=i=>{const o=l(m),u=l(f);if(i){const t=XY(x,f,g,y);e(v,f,t,!1),b||h(f)||n(u,o,g,y),d(m)&&QY(m)}else{const e=r(v,f,g,y);t(x,y,e,!1),b||h(f)||s(u,o,g,y);const n=a(m);if(0===n)c(m)&&eQ(m,v);else{const e=p.get(m);void 0!==e&&clearTimeout(e),p.set(m,setTimeout((()=>{c(m)&&eQ(m,v)}),1e3*n))}}};return!!u(w,[m,g,y],(e=>e[0]===m&&e[1]===g&&e[2]===y),!0)&&(k.add(S),c(f)?e(v,f,[g,y,S],!0):t(x,y,[f,g,S],!0),!0)}})(BZ,VZ,kQ,WZ,_Q,hQ,GZ,YY,TQ,bQ,uQ,EQ,$Q),jZ,((e,t,n,r,s,i)=>a=>(o,l)=>{const u=e.get(o);if(void 0===u){if(!a&&i(o)){const e=r(o),{outputs:i}=n(o);for(const n of i)if(yQ(n)){const s=r(n[0]);t(e,s,n[1],n[2])}else{const t=s(n[0]);e.disconnect(t,n[1])}}e.set(o,l)}else e.set(o,u+l)})(LY,_Q,hQ,TQ,NQ,uQ),sQ,tZ,SZ,((e,t,n,r,s,i,a,o)=>(l,u)=>{const c=t.get(l);if(void 0===c)throw new Error("Missing the expected cycle count.");const h=i(l.context),d=o(h);if(c===u){if(t.delete(l),!d&&a(l)){const t=r(l),{outputs:i}=n(l);for(const n of i)if(yQ(n)){const s=r(n[0]);e(t,s,n[1],n[2])}else{const e=s(n[0]);t.connect(e,n[1])}}}else t.set(l,c-u)})(kQ,LY,hQ,TQ,NQ,JZ,uQ,nJ),((e,t,n)=>function r(s,i){const a=gQ(i)?i:n(e,i);if((e=>"delayTime"in e)(a))return[];if(s[0]===a)return[s];if(s.includes(a))return[];const{outputs:o}=t(a);return Array.from(o).map((e=>r([...s,a],e[0]))).reduce(((e,t)=>e.concat(t)),[])})(rJ,hQ,qY),sJ,JZ,aJ,oJ,lJ,nJ,uJ);var hJ;const dJ=((e,t,n,r,s,i)=>class extends e{constructor(e,n){const a=s(e),o={...tQ,...n},l=r(a,o);super(e,!1,l,i(a)?t():null),this._nativeAnalyserNode=l}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(e){this._nativeAnalyserNode.fftSize=e}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(e){const t=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=e,!(e>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=t,n()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(e){const t=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=e,!(this._nativeAnalyserNode.maxDecibels>e))throw this._nativeAnalyserNode.minDecibels=t,n()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(e){this._nativeAnalyserNode.smoothingTimeConstant=e}getByteFrequencyData(e){this._nativeAnalyserNode.getByteFrequencyData(e)}getByteTimeDomainData(e){this._nativeAnalyserNode.getByteTimeDomainData(e)}getFloatFrequencyData(e){this._nativeAnalyserNode.getFloatFrequencyData(e)}getFloatTimeDomainData(e){this._nativeAnalyserNode.getFloatTimeDomainData(e)}})(cJ,ZZ,sQ,XZ,JZ,nJ),pJ=new WeakSet,fJ=(e=>null===e?null:e.hasOwnProperty("AudioBuffer")?e.AudioBuffer:null)(KZ),mJ=(gJ=new Uint32Array(1),e=>(gJ[0]=e,gJ[0]));var gJ;const yJ=((e,t)=>n=>{n.copyFromChannel=function(r,s){const i=e(arguments.length>2&&void 0!==arguments[2]?arguments[2]:0),a=e(s);if(a>=n.numberOfChannels)throw t();const o=n.length,l=n.getChannelData(a),u=r.length;for(let e=i<0?-i:0;e+i<o&&e<u;e+=1)r[e]=l[e+i]},n.copyToChannel=function(r,s){const i=e(arguments.length>2&&void 0!==arguments[2]?arguments[2]:0),a=e(s);if(a>=n.numberOfChannels)throw t();const o=n.length,l=n.getChannelData(a),u=r.length;for(let e=i<0?-i:0;e+i<o&&e<u;e+=1)l[e+i]=r[e]}})(mJ,sQ),bJ=(e=>t=>{t.copyFromChannel=(n=>function(r,s){const i=e(arguments.length>2&&void 0!==arguments[2]?arguments[2]:0),a=e(s);if(i<t.length)return n.call(t,r,a,i)})(t.copyFromChannel),t.copyToChannel=(n=>function(r,s){const i=e(arguments.length>2&&void 0!==arguments[2]?arguments[2]:0),a=e(s);if(i<t.length)return n.call(t,r,a,i)})(t.copyToChannel)})(mJ),vJ=((e,t,n,r,s,i,a,o)=>{let l=null;return class u{constructor(u){if(null===s)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:c,numberOfChannels:h,sampleRate:d}={...aQ,...u};null===l&&(l=new s(1,1,44100));const p=null!==r&&t(i,i)?new r({length:c,numberOfChannels:h,sampleRate:d}):l.createBuffer(h,c,d);if(0===p.numberOfChannels)throw n();return"function"!==typeof p.copyFromChannel?(a(p),iQ(p)):t(rQ,(()=>rQ(p)))||o(p),e.add(p),p}static[Symbol.hasInstance](t){return null!==t&&"object"===typeof t&&Object.getPrototypeOf(t)===u.prototype||e.has(t)}}})(pJ,jZ,SZ,fJ,tJ,(e=>()=>{if(null===e)return!1;try{new e({length:1,sampleRate:44100})}catch{return!1}return!0})(fJ),yJ,bJ),xJ=(e=>(t,n)=>{const r=e(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});n.connect(r).connect(t.destination);const s=()=>{n.removeEventListener("ended",s),n.disconnect(r),r.disconnect()};n.addEventListener("ended",s)})(vZ),wJ=((e,t,n)=>async(r,s,i)=>{const a=t(r);await Promise.all(Array.from(a.activeInputs).map((async t=>{let[r,a]=t;const o=e(r),l=await o.render(r,s);n(r)||l.connect(i,a)})))})(YZ,dQ,EQ),kJ=(e=>(t,n,r)=>e(n,t,r))(wJ),SJ=((e,t,n,r,s,i,a,o,l,u,c)=>(h,d)=>{const p=h.createBufferSource();return lZ(p,d),cZ(p,d,"playbackRate"),oZ(p,d,"buffer"),oZ(p,d,"loop"),oZ(p,d,"loopEnd"),oZ(p,d,"loopStart"),t(n,(()=>n(h)))||(e=>{e.start=(t=>{let n=!1;return function(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2?arguments[2]:void 0;if(n)throw eZ();t.call(e,r,s,i),n=!0}})(e.start)})(p),t(r,(()=>r(h)))||l(p),t(s,(()=>s(h)))||u(p,h),t(i,(()=>i(h)))||hZ(p),t(a,(()=>a(h)))||c(p,h),t(o,(()=>o(h)))||dZ(p),e(h,p),p})(xJ,jZ,(e=>{const t=e.createBufferSource();t.start();try{t.start()}catch{return!0}return!1}),(e=>{const t=e.createBufferSource(),n=e.createBuffer(1,1,44100);t.buffer=n;try{t.start(0,1)}catch{return!1}return!0}),(e=>{const t=e.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0}),FZ,MZ,PZ,(e=>{e.start=(t=>function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=arguments.length>2?arguments[2]:void 0;const i=e.buffer,a=null===i?r:Math.min(i.duration,r);null!==i&&a>i.duration-.5/e.context.sampleRate?t.call(e,n,0,0):t.call(e,n,a,s)})(e.start)}),(e=>(t,n)=>{const r=n.createBuffer(1,1,44100);null===t.buffer&&(t.buffer=r),e(t,"buffer",(e=>()=>{const n=e.call(t);return n===r?null:n}),(e=>n=>e.call(t,null===n?r:n)))})(OZ),zZ),CJ=((e,t)=>(n,r,s)=>(e(r).replay(s),t(r,n,s)))((e=>t=>{const n=e(t);if(null===n.renderer)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return n.renderer})(dQ),wJ),IJ=((e,t,n,r,s)=>()=>{const i=new WeakMap;let a=null,o=null;return{set start(e){a=e},set stop(e){o=e},render(l,u){const c=i.get(u);return void 0!==c?Promise.resolve(c):(async(l,u)=>{let c=n(l);const h=nQ(c,u);if(!h){const e={buffer:c.buffer,channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,loop:c.loop,loopEnd:c.loopEnd,loopStart:c.loopStart,playbackRate:c.playbackRate.value};c=t(u,e),null!==a&&c.start(...a),null!==o&&c.stop(o)}return i.set(u,c),h?await e(u,l.playbackRate,c.playbackRate):await r(u,l.playbackRate,c.playbackRate),await s(l,u,c),c})(l,u)}}})(kJ,SJ,TQ,CJ,QZ),_J=((e,t,n,r,s,i,a,o,l,u,c,h,d)=>function(p,f,m){let g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const b=m.value,v=new AY.AutomationEventList(b),x=f?r(v):null,w={get defaultValue(){return b},get maxValue(){return null===g?m.maxValue:g},get minValue(){return null===y?m.minValue:y},get value(){return m.value},set value(e){m.value=e,w.setValueAtTime(e,p.context.currentTime)},cancelAndHoldAtTime(e){if("function"===typeof m.cancelAndHoldAtTime)null===x&&v.flush(p.context.currentTime),v.add(s(e)),m.cancelAndHoldAtTime(e);else{const t=Array.from(v).pop();null===x&&v.flush(p.context.currentTime),v.add(s(e));const n=Array.from(v).pop();m.cancelScheduledValues(e),t!==n&&void 0!==n&&("exponentialRampToValue"===n.type?m.exponentialRampToValueAtTime(n.value,n.endTime):"linearRampToValue"===n.type?m.linearRampToValueAtTime(n.value,n.endTime):"setValue"===n.type?m.setValueAtTime(n.value,n.startTime):"setValueCurve"===n.type&&m.setValueCurveAtTime(n.values,n.startTime,n.duration))}return w},cancelScheduledValues:e=>(null===x&&v.flush(p.context.currentTime),v.add(i(e)),m.cancelScheduledValues(e),w),exponentialRampToValueAtTime(e,t){if(0===e)throw new RangeError;if(!Number.isFinite(t)||t<0)throw new RangeError;const n=p.context.currentTime;return null===x&&v.flush(n),0===Array.from(v).length&&(v.add(u(b,n)),m.setValueAtTime(b,n)),v.add(a(e,t)),m.exponentialRampToValueAtTime(e,t),w},linearRampToValueAtTime(e,t){const n=p.context.currentTime;return null===x&&v.flush(n),0===Array.from(v).length&&(v.add(u(b,n)),m.setValueAtTime(b,n)),v.add(o(e,t)),m.linearRampToValueAtTime(e,t),w},setTargetAtTime:(e,t,n)=>(null===x&&v.flush(p.context.currentTime),v.add(l(e,t,n)),m.setTargetAtTime(e,t,n),w),setValueAtTime:(e,t)=>(null===x&&v.flush(p.context.currentTime),v.add(u(e,t)),m.setValueAtTime(e,t),w),setValueCurveAtTime(e,t,n){const r=e instanceof Float32Array?e:new Float32Array(e);if(null!==h&&"webkitAudioContext"===h.name){const e=t+n,s=p.context.sampleRate,i=Math.ceil(t*s),a=Math.floor(e*s),o=a-i,l=new Float32Array(o);for(let c=0;c<o;c+=1){const e=(r.length-1)/n*((i+c)/s-t),a=Math.floor(e),o=Math.ceil(e);l[c]=a===o?r[a]:(1-(e-a))*r[a]+(1-(o-e))*r[o]}null===x&&v.flush(p.context.currentTime),v.add(c(l,t,n)),m.setValueCurveAtTime(l,t,n);const u=a/s;u<e&&d(w,l[l.length-1],u),d(w,r[r.length-1],e)}else null===x&&v.flush(p.context.currentTime),v.add(c(r,t,n)),m.setValueCurveAtTime(r,t,n);return w}};return n.set(w,m),t.set(w,p),e(w,x),w})((TJ=FY,(e,t)=>{TJ.set(e,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:t})}),rJ,MY,(e=>({replay(t){for(const n of e)if("exponentialRampToValue"===n.type){const{endTime:e,value:r}=n;t.exponentialRampToValueAtTime(r,e)}else if("linearRampToValue"===n.type){const{endTime:e,value:r}=n;t.linearRampToValueAtTime(r,e)}else if("setTarget"===n.type){const{startTime:e,target:r,timeConstant:s}=n;t.setTargetAtTime(r,e,s)}else if("setValue"===n.type){const{startTime:e,value:r}=n;t.setValueAtTime(r,e)}else{if("setValueCurve"!==n.type)throw new Error("Can't apply an unknown automation.");{const{duration:e,startTime:r,values:s}=n;t.setValueCurveAtTime(s,r,e)}}}})),AY.createCancelAndHoldAutomationEvent,AY.createCancelScheduledValuesAutomationEvent,AY.createExponentialRampToValueAutomationEvent,AY.createLinearRampToValueAutomationEvent,AY.createSetTargetAutomationEvent,AY.createSetValueAutomationEvent,AY.createSetValueCurveAutomationEvent,iJ,DZ);var TJ;const NJ=((e,t,n,r,s,i,a,o)=>class extends e{constructor(e,r){const o=i(e),l={...cQ,...r},u=s(o,l),c=a(o),h=c?t():null;super(e,!1,u,h),this._audioBufferSourceNodeRenderer=h,this._isBufferNullified=!1,this._isBufferSet=null!==l.buffer,this._nativeAudioBufferSourceNode=u,this._onended=null,this._playbackRate=n(this,c,u.playbackRate,lQ,oQ)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(e){if(this._nativeAudioBufferSourceNode.buffer=e,null!==e){if(this._isBufferSet)throw r();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(e){this._nativeAudioBufferSourceNode.loop=e}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(e){this._nativeAudioBufferSourceNode.loopEnd=e}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(e){this._nativeAudioBufferSourceNode.loopStart=e}get onended(){return this._onended}set onended(e){const t="function"===typeof e?o(this,e):null;this._nativeAudioBufferSourceNode.onended=t;const n=this._nativeAudioBufferSourceNode.onended;this._onended=null!==n&&n===t?e:n}get playbackRate(){return this._playbackRate}start(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2?arguments[2]:void 0;if(this._nativeAudioBufferSourceNode.start(e,t,n),null!==this._audioBufferSourceNodeRenderer&&(this._audioBufferSourceNodeRenderer.start=void 0===n?[e,t]:[e,t,n]),"closed"!==this.context.state){QY(this);const e=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",e),uQ(this)&&JY(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",e)}}stop(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this._nativeAudioBufferSourceNode.stop(e),null!==this._audioBufferSourceNodeRenderer&&(this._audioBufferSourceNodeRenderer.stop=e)}})(cJ,IJ,_J,eZ,SJ,JZ,nJ,LZ),EJ=((e,t,n,r,s,i,a,o)=>class extends e{constructor(e,n){const r=i(e),l=a(r),u=s(r,n,l);super(e,!1,u,l?t(o):null),this._isNodeOfNativeOfflineAudioContext=l,this._nativeAudioDestinationNode=u}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(e){if(this._isNodeOfNativeOfflineAudioContext)throw r();if(e>this._nativeAudioDestinationNode.maxChannelCount)throw n();this._nativeAudioDestinationNode.channelCount=e}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(e){if(this._isNodeOfNativeOfflineAudioContext)throw r();this._nativeAudioDestinationNode.channelCountMode=e}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}})(cJ,(e=>{const t=new WeakMap;return{render(n,r){const s=t.get(r);return void 0!==s?Promise.resolve(s):(async(n,r)=>{const s=r.destination;return t.set(r,s),await e(n,r,s),s})(n,r)}}}),sQ,eZ,((e,t)=>(n,r,s)=>{const i=n.destination;if(i.channelCount!==r)try{i.channelCount=r}catch{}s&&"explicit"!==i.channelCountMode&&(i.channelCountMode="explicit"),0===i.maxChannelCount&&Object.defineProperty(i,"maxChannelCount",{value:r});const a=e(n,{channelCount:r,channelCountMode:i.channelCountMode,channelInterpretation:i.channelInterpretation,gain:1});return t(a,"channelCount",(e=>()=>e.call(a)),(e=>t=>{e.call(a,t);try{i.channelCount=t}catch(Q3){if(t>i.maxChannelCount)throw Q3}})),t(a,"channelCountMode",(e=>()=>e.call(a)),(e=>t=>{e.call(a,t),i.channelCountMode=t})),t(a,"channelInterpretation",(e=>()=>e.call(a)),(e=>t=>{e.call(a,t),i.channelInterpretation=t})),Object.defineProperty(a,"maxChannelCount",{get:()=>i.maxChannelCount}),a.connect(i),a})(vZ,OZ),JZ,nJ,QZ),$J=((e,t,n,r,s)=>()=>{const i=new WeakMap;return{render(a,o){const l=i.get(o);return void 0!==l?Promise.resolve(l):(async(a,o)=>{let l=n(a);const u=nQ(l,o);if(!u){const e={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=t(o,e)}return i.set(o,l),u?(await e(o,a.Q,l.Q),await e(o,a.detune,l.detune),await e(o,a.frequency,l.frequency),await e(o,a.gain,l.gain)):(await r(o,a.Q,l.Q),await r(o,a.detune,l.detune),await r(o,a.frequency,l.frequency),await r(o,a.gain,l.gain)),await s(a,o,l),l})(a,o)}}})(kJ,mZ,TQ,CJ,QZ),AJ=(e=>(t,n)=>e.set(t,n))(UZ),RJ=((e,t,n,r,s,i,a,o)=>class extends e{constructor(e,r){const l=i(e),u={...GQ,...r},c=s(l,u),h=a(l);super(e,!1,c,h?n():null),this._Q=t(this,h,c.Q,lQ,oQ),this._detune=t(this,h,c.detune,1200*Math.log2(lQ),-1200*Math.log2(lQ)),this._frequency=t(this,h,c.frequency,e.sampleRate/2,0),this._gain=t(this,h,c.gain,40*Math.log10(lQ),oQ),this._nativeBiquadFilterNode=c,o(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(e){this._nativeBiquadFilterNode.type=e}getFrequencyResponse(e,t,n){try{this._nativeBiquadFilterNode.getFrequencyResponse(e,t,n)}catch(Q3){if(11===Q3.code)throw r();throw Q3}if(e.length!==t.length||t.length!==n.length)throw r()}})(cJ,_J,$J,tZ,mZ,JZ,nJ,AJ),OJ=((e,t)=>(n,r,s)=>{const i=new Set;return n.connect=(s=>function(a){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const u=0===i.size;if(t(a))return s.call(n,a,o,l),e(i,[a,o,l],(e=>e[0]===a&&e[1]===o&&e[2]===l),!0),u&&r(),a;s.call(n,a,o),e(i,[a,o],(e=>e[0]===a&&e[1]===o),!0),u&&r()})(n.connect),n.disconnect=(e=>(r,a,o)=>{const l=i.size>0;if(void 0===r)e.apply(n),i.clear();else if("number"===typeof r){e.call(n,r);for(const e of i)e[1]===r&&i.delete(e)}else{t(r)?e.call(n,r,a,o):e.call(n,r,a);for(const e of i)e[0]!==r||void 0!==a&&e[1]!==a||void 0!==o&&e[2]!==o||i.delete(e)}const u=0===i.size;l&&u&&s()})(n.disconnect),n})(bQ,oJ),DJ=((e,t)=>(n,r)=>{r.channelCount=1,r.channelCountMode="explicit",Object.defineProperty(r,"channelCount",{get:()=>1,set:()=>{throw e()}}),Object.defineProperty(r,"channelCountMode",{get:()=>"explicit",set:()=>{throw e()}});const s=n.createBufferSource();t(r,(()=>{const e=r.numberOfInputs;for(let t=0;t<e;t+=1)s.connect(r,0,t)}),(()=>s.disconnect(r)))})(eZ,OJ),FJ=((e,t)=>(n,r)=>{const s=n.createChannelMerger(r.numberOfInputs);return null!==e&&"webkitAudioContext"===e.name&&t(n,s),lZ(s,r),s})(iJ,DJ),MJ=((e,t,n)=>()=>{const r=new WeakMap;return{render(s,i){const a=r.get(i);return void 0!==a?Promise.resolve(a):(async(s,i)=>{let a=t(s);if(!nQ(a,i)){const t={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=e(i,t)}return r.set(i,a),await n(s,i,a),a})(s,i)}}})(FJ,TQ,QZ),PJ=((e,t,n,r,s)=>class extends e{constructor(e,i){const a=r(e),o={...jQ,...i};super(e,!1,n(a,o),s(a)?t():null)}})(cJ,MJ,FJ,JZ,nJ),zJ=((e,t,n)=>()=>{const r=new WeakMap;return{render(s,i){const a=r.get(i);return void 0!==a?Promise.resolve(a):(async(s,i)=>{let a=t(s);if(!nQ(a,i)){const t={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=e(i,t)}return r.set(i,a),await n(s,i,a),a})(s,i)}}})(gZ,TQ,QZ),LJ=((e,t,n,r,s,i)=>class extends e{constructor(e,a){const o=r(e),l=i({...HQ,...a});super(e,!1,n(o,l),s(o)?t():null)}})(cJ,zJ,gZ,JZ,nJ,(e=>({...e,channelCount:e.numberOfOutputs}))),BJ=((e,t,n,r)=>(s,i)=>{let{offset:a,...o}=i;const l=s.createBuffer(1,2,44100),u=t(s,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),c=n(s,{...o,gain:a}),h=l.getChannelData(0);h[0]=1,h[1]=1,u.buffer=l,u.loop=!0;const d={get bufferSize(){},get channelCount(){return c.channelCount},set channelCount(e){c.channelCount=e},get channelCountMode(){return c.channelCountMode},set channelCountMode(e){c.channelCountMode=e},get channelInterpretation(){return c.channelInterpretation},set channelInterpretation(e){c.channelInterpretation=e},get context(){return c.context},get inputs(){return[]},get numberOfInputs(){return u.numberOfInputs},get numberOfOutputs(){return c.numberOfOutputs},get offset(){return c.gain},get onended(){return u.onended},set onended(e){u.onended=e},addEventListener(){return u.addEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])},dispatchEvent(){return u.dispatchEvent(arguments.length<=0?void 0:arguments[0])},removeEventListener(){return u.removeEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])},start(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;u.start.call(u,e)},stop(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;u.stop.call(u,e)}};return e(s,u),r(yZ(d,c),(()=>u.connect(c)),(()=>u.disconnect(c)))})(xJ,SJ,vZ,OJ),VJ=((e,t,n,r,s)=>(i,a)=>{if(void 0===i.createConstantSource)return n(i,a);const o=i.createConstantSource();return lZ(o,a),cZ(o,a,"offset"),t(r,(()=>r(i)))||hZ(o),t(s,(()=>s(i)))||dZ(o),e(i,o),o})(xJ,jZ,BJ,FZ,PZ),WJ=((e,t,n,r,s)=>()=>{const i=new WeakMap;let a=null,o=null;return{set start(e){a=e},set stop(e){o=e},render(l,u){const c=i.get(u);return void 0!==c?Promise.resolve(c):(async(l,u)=>{let c=n(l);const h=nQ(c,u);if(!h){const e={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,offset:c.offset.value};c=t(u,e),null!==a&&c.start(a),null!==o&&c.stop(o)}return i.set(u,c),h?await e(u,l.offset,c.offset):await r(u,l.offset,c.offset),await s(l,u,c),c})(l,u)}}})(kJ,VJ,TQ,CJ,QZ),UJ=((e,t,n,r,s,i,a)=>class extends e{constructor(e,a){const o=s(e),l={...qQ,...a},u=r(o,l),c=i(o),h=c?n():null;super(e,!1,u,h),this._constantSourceNodeRenderer=h,this._nativeConstantSourceNode=u,this._offset=t(this,c,u.offset,lQ,oQ),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(e){const t="function"===typeof e?a(this,e):null;this._nativeConstantSourceNode.onended=t;const n=this._nativeConstantSourceNode.onended;this._onended=null!==n&&n===t?e:n}start(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(this._nativeConstantSourceNode.start(e),null!==this._constantSourceNodeRenderer&&(this._constantSourceNodeRenderer.start=e),"closed"!==this.context.state){QY(this);const e=()=>{this._nativeConstantSourceNode.removeEventListener("ended",e),uQ(this)&&JY(this)};this._nativeConstantSourceNode.addEventListener("ended",e)}}stop(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this._nativeConstantSourceNode.stop(e),null!==this._constantSourceNodeRenderer&&(this._constantSourceNodeRenderer.stop=e)}})(cJ,_J,WJ,VJ,JZ,nJ,LZ),GJ=((e,t)=>(n,r)=>{const s=n.createConvolver();if(lZ(s,r),r.disableNormalization===s.normalize&&(s.normalize=!r.disableNormalization),oZ(s,r,"buffer"),r.channelCount>2)throw e();if(t(s,"channelCount",(e=>()=>e.call(s)),(t=>n=>{if(n>2)throw e();return t.call(s,n)})),"max"===r.channelCountMode)throw e();return t(s,"channelCountMode",(e=>()=>e.call(s)),(t=>n=>{if("max"===n)throw e();return t.call(s,n)})),s})(SZ,OZ),jJ=((e,t,n)=>()=>{const r=new WeakMap;return{render(s,i){const a=r.get(i);return void 0!==a?Promise.resolve(a):(async(s,i)=>{let a=t(s);if(!nQ(a,i)){const t={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=e(i,t)}return r.set(i,a),wQ(a)?await n(s,i,a.inputs[0]):await n(s,i,a),a})(s,i)}}})(GJ,TQ,QZ),HJ=((e,t,n,r,s,i)=>class extends e{constructor(e,a){const o=r(e),l={...KQ,...a},u=n(o,l);super(e,!1,u,s(o)?t():null),this._isBufferNullified=!1,this._nativeConvolverNode=u,null!==l.buffer&&i(this,l.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(e){if(this._nativeConvolverNode.buffer=e,null===e&&null!==this._nativeConvolverNode.buffer){const e=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=e.createBuffer(1,1,e.sampleRate),this._isBufferNullified=!0,i(this,0)}else this._isBufferNullified=!1,i(this,null===this._nativeConvolverNode.buffer?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(e){this._nativeConvolverNode.normalize=e}})(cJ,jJ,GJ,JZ,nJ,AJ),qJ=((e,t,n,r,s)=>i=>{const a=new WeakMap;return{render(o,l){const u=a.get(l);return void 0!==u?Promise.resolve(u):(async(o,l)=>{let u=n(o);const c=nQ(u,l);if(!c){const e={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,delayTime:u.delayTime.value,maxDelayTime:i};u=t(l,e)}return a.set(l,u),c?await e(l,o.delayTime,u.delayTime):await r(l,o.delayTime,u.delayTime),await s(o,l,u),u})(o,l)}}})(kJ,bZ,TQ,CJ,QZ),KJ=((e,t,n,r,s,i,a)=>class extends e{constructor(e,o){const l=s(e),u={...YQ,...o},c=r(l,u),h=i(l);super(e,!1,c,h?n(u.maxDelayTime):null),this._delayTime=t(this,h,c.delayTime),a(this,u.maxDelayTime)}get delayTime(){return this._delayTime}})(cJ,_J,qJ,bZ,JZ,nJ,AJ),XJ=(e=>(t,n)=>{const r=t.createDynamicsCompressor();if(lZ(r,n),n.channelCount>2)throw e();if("max"===n.channelCountMode)throw e();return cZ(r,n,"attack"),cZ(r,n,"knee"),cZ(r,n,"ratio"),cZ(r,n,"release"),cZ(r,n,"threshold"),r})(SZ),YJ=((e,t,n,r,s)=>()=>{const i=new WeakMap;return{render(a,o){const l=i.get(o);return void 0!==l?Promise.resolve(l):(async(a,o)=>{let l=n(a);const u=nQ(l,o);if(!u){const e={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=t(o,e)}return i.set(o,l),u?(await e(o,a.attack,l.attack),await e(o,a.knee,l.knee),await e(o,a.ratio,l.ratio),await e(o,a.release,l.release),await e(o,a.threshold,l.threshold)):(await r(o,a.attack,l.attack),await r(o,a.knee,l.knee),await r(o,a.ratio,l.ratio),await r(o,a.release,l.release),await r(o,a.threshold,l.threshold)),await s(a,o,l),l})(a,o)}}})(kJ,XJ,TQ,CJ,QZ),QJ=((e,t,n,r,s,i,a,o)=>class extends e{constructor(e,s){const l=i(e),u={...ZQ,...s},c=r(l,u),h=a(l);super(e,!1,c,h?n():null),this._attack=t(this,h,c.attack),this._knee=t(this,h,c.knee),this._nativeDynamicsCompressorNode=c,this._ratio=t(this,h,c.ratio),this._release=t(this,h,c.release),this._threshold=t(this,h,c.threshold),o(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(e){const t=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=e,e>2)throw this._nativeDynamicsCompressorNode.channelCount=t,s()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(e){const t=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=e,"max"===e)throw this._nativeDynamicsCompressorNode.channelCountMode=t,s()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return"number"===typeof this._nativeDynamicsCompressorNode.reduction.value?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}})(cJ,_J,YJ,XJ,SZ,JZ,nJ,AJ),ZJ=((e,t,n,r,s)=>()=>{const i=new WeakMap;return{render(a,o){const l=i.get(o);return void 0!==l?Promise.resolve(l):(async(a,o)=>{let l=n(a);const u=nQ(l,o);if(!u){const e={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=t(o,e)}return i.set(o,l),u?await e(o,a.gain,l.gain):await r(o,a.gain,l.gain),await s(a,o,l),l})(a,o)}}})(kJ,vZ,TQ,CJ,QZ),JJ=((e,t,n,r,s,i)=>class extends e{constructor(e,a){const o=s(e),l={...JQ,...a},u=r(o,l),c=i(o);super(e,!1,u,c?n():null),this._gain=t(this,c,u.gain,lQ,oQ)}get gain(){return this._gain}})(cJ,_J,ZJ,vZ,JZ,nJ),e0=((e,t,n,r)=>(s,i,a)=>{let{channelCount:o,channelCountMode:l,channelInterpretation:u,feedback:c,feedforward:h}=a;const d=pZ(i,s.sampleRate),p=c instanceof Float64Array?c:new Float64Array(c),f=h instanceof Float64Array?h:new Float64Array(h),m=p.length,g=f.length,y=Math.min(m,g);if(0===m||m>20)throw r();if(0===p[0])throw t();if(0===g||g>20)throw r();if(0===f[0])throw t();if(1!==p[0]){for(let e=0;e<g;e+=1)f[e]/=p[0];for(let e=1;e<m;e+=1)p[e]/=p[0]}const b=n(s,d,o,o);b.channelCount=o,b.channelCountMode=l,b.channelInterpretation=u;const v=[],x=[],w=[];for(let e=0;e<o;e+=1){v.push(0);const e=new Float32Array(32),t=new Float32Array(32);e.fill(0),t.fill(0),x.push(e),w.push(t)}b.onaudioprocess=e=>{const t=e.inputBuffer,n=e.outputBuffer,r=t.numberOfChannels;for(let s=0;s<r;s+=1){const e=t.getChannelData(s),r=n.getChannelData(s);v[s]=rZ(p,m,f,g,y,x[s],w[s],v[s],32,e,r)}};const k=s.sampleRate/2;return yZ({get bufferSize(){return d},get channelCount(){return b.channelCount},set channelCount(e){b.channelCount=e},get channelCountMode(){return b.channelCountMode},set channelCountMode(e){b.channelCountMode=e},get channelInterpretation(){return b.channelInterpretation},set channelInterpretation(e){b.channelInterpretation=e},get context(){return b.context},get inputs(){return[b]},get numberOfInputs(){return b.numberOfInputs},get numberOfOutputs(){return b.numberOfOutputs},addEventListener(){return b.addEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])},dispatchEvent(){return b.dispatchEvent(arguments.length<=0?void 0:arguments[0])},getFrequencyResponse(t,n,r){if(t.length!==n.length||n.length!==r.length)throw e();const s=t.length;for(let e=0;e<s;e+=1){const s=-Math.PI*(t[e]/k),i=[Math.cos(s),Math.sin(s)],a=xZ(wZ(f,i),wZ(p,i));n[e]=Math.sqrt(a[0]*a[0]+a[1]*a[1]),r[e]=Math.atan2(a[1],a[0])}},removeEventListener(){return b.removeEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])}},b)})(tZ,eZ,kZ,SZ),t0=((e,t,n,r)=>s=>e(iZ,(()=>iZ(s)))?Promise.resolve(e(r,r)).then((e=>{if(!e){const e=n(s,512,0,1);s.oncomplete=()=>{e.onaudioprocess=null,e.disconnect()},e.onaudioprocess=()=>s.currentTime,e.connect(s.destination)}return s.startRendering()})):new Promise((e=>{const n=t(s,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});s.oncomplete=t=>{n.disconnect(),e(t.renderedBuffer)},n.connect(s.destination),s.startRendering()})))(jZ,vZ,kZ,((e,t)=>()=>{if(null===t)return Promise.resolve(!1);const n=new t(1,1,44100),r=e(n,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise((e=>{n.oncomplete=()=>{r.disconnect(),e(0!==n.currentTime)},n.startRendering()}))})(vZ,tJ)),n0=((e,t,n,r,s)=>(i,a)=>{const o=new WeakMap;let l=null;const u=async(u,c)=>{let h=null,d=t(u);const p=nQ(d,c);if(void 0===c.createIIRFilter?h=e(c,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):p||(d=c.createIIRFilter(a,i)),o.set(c,null===h?d:h),null!==h){if(null===l){if(null===n)throw new Error("Missing the native OfflineAudioContext constructor.");const e=new n(u.context.destination.channelCount,u.context.length,c.sampleRate);l=(async()=>{await r(u,e,e.destination);return((e,t,n,r)=>{const s=n instanceof Float64Array?n:new Float64Array(n),i=r instanceof Float64Array?r:new Float64Array(r),a=s.length,o=i.length,l=Math.min(a,o);if(1!==s[0]){for(let e=0;e<a;e+=1)i[e]/=s[0];for(let e=1;e<o;e+=1)s[e]/=s[0]}const u=new Float32Array(32),c=new Float32Array(32),h=t.createBuffer(e.numberOfChannels,e.length,e.sampleRate),d=e.numberOfChannels;for(let p=0;p<d;p+=1){const t=e.getChannelData(p),n=h.getChannelData(p);u.fill(0),c.fill(0),rZ(s,a,i,o,l,u,c,0,32,t,n)}return h})(await s(e),c,i,a)})()}const e=await l;return h.buffer=e,h.start(0),h}return await r(u,c,d),d};return{render(e,t){const n=o.get(t);return void 0!==n?Promise.resolve(n):u(e,t)}}})(SJ,TQ,tJ,QZ,t0),r0=(e=>(t,n,r)=>{if(void 0===t.createIIRFilter)return e(t,n,r);const s=t.createIIRFilter(r.feedforward,r.feedback);return lZ(s,r),s})(e0),s0=((e,t,n,r,s,i)=>class extends e{constructor(e,a){const o=r(e),l=s(o),u={...nZ,...a},c=t(o,l?null:e.baseLatency,u);super(e,!1,c,l?n(u.feedback,u.feedforward):null),(e=>{var t;e.getFrequencyResponse=(t=e.getFrequencyResponse,(n,r,s)=>{if(n.length!==r.length||r.length!==s.length)throw tZ();return t.call(e,n,r,s)})})(c),this._nativeIIRFilterNode=c,i(this,1)}getFrequencyResponse(e,t,n){return this._nativeIIRFilterNode.getFrequencyResponse(e,t,n)}})(cJ,r0,n0,JZ,nJ,AJ),i0=((e,t,n,r,s,i,a,o)=>(l,u)=>{const c=u.listener,{forwardX:h,forwardY:d,forwardZ:p,positionX:f,positionY:m,positionZ:g,upX:y,upY:b,upZ:v}=void 0===c.forwardX?(()=>{const h=new Float32Array(1),d=t(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),p=a(u);let f=!1,m=[0,0,-1,0,1,0],g=[0,0,0];const y=()=>{if(f)return;f=!0;const e=r(u,256,9,0);e.onaudioprocess=e=>{let{inputBuffer:t}=e;const n=[i(t,h,0),i(t,h,1),i(t,h,2),i(t,h,3),i(t,h,4),i(t,h,5)];n.some(((e,t)=>e!==m[t]))&&(c.setOrientation(...n),m=n);const r=[i(t,h,6),i(t,h,7),i(t,h,8)];r.some(((e,t)=>e!==g[t]))&&(c.setPosition(...r),g=r)},d.connect(e)},b=e=>t=>{t!==m[e]&&(m[e]=t,c.setOrientation(...m))},v=e=>t=>{t!==g[e]&&(g[e]=t,c.setPosition(...g))},x=(t,r,i)=>{const a=n(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:r});a.connect(d,0,t),a.start(),Object.defineProperty(a.offset,"defaultValue",{get:()=>r});const c=e({context:l},p,a.offset,lQ,oQ);var h,f,m,g,b,v,x;return o(c,"value",(e=>()=>e.call(c)),(e=>t=>{try{e.call(c,t)}catch(Q3){if(9!==Q3.code)throw Q3}y(),p&&i(t)})),c.cancelAndHoldAtTime=(h=c.cancelAndHoldAtTime,p?()=>{throw s()}:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=h.apply(c,t);return y(),r}),c.cancelScheduledValues=(f=c.cancelScheduledValues,p?()=>{throw s()}:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=f.apply(c,t);return y(),r}),c.exponentialRampToValueAtTime=(m=c.exponentialRampToValueAtTime,p?()=>{throw s()}:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=m.apply(c,t);return y(),r}),c.linearRampToValueAtTime=(g=c.linearRampToValueAtTime,p?()=>{throw s()}:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=g.apply(c,t);return y(),r}),c.setTargetAtTime=(b=c.setTargetAtTime,p?()=>{throw s()}:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=b.apply(c,t);return y(),r}),c.setValueAtTime=(v=c.setValueAtTime,p?()=>{throw s()}:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=v.apply(c,t);return y(),r}),c.setValueCurveAtTime=(x=c.setValueCurveAtTime,p?()=>{throw s()}:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=x.apply(c,t);return y(),r}),c};return{forwardX:x(0,0,b(0)),forwardY:x(1,0,b(1)),forwardZ:x(2,-1,b(2)),positionX:x(6,0,v(0)),positionY:x(7,0,v(1)),positionZ:x(8,0,v(2)),upX:x(3,0,b(3)),upY:x(4,1,b(4)),upZ:x(5,0,b(5))}})():c;return{get forwardX(){return h},get forwardY(){return d},get forwardZ(){return p},get positionX(){return f},get positionY(){return m},get positionZ(){return g},get upX(){return y},get upY(){return b},get upZ(){return v}}})(_J,FJ,VJ,kZ,SZ,AZ,nJ,OZ),a0=new WeakMap,o0=((e,t,n,r,s,i)=>class extends n{constructor(n,i){super(n),this._nativeContext=n,PY.set(this,n),r(n)&&s.set(n,new Set),this._destination=new e(this,i),this._listener=t(this,n),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(e){const t="function"===typeof e?i(this,e):null;this._nativeContext.onstatechange=t;const n=this._nativeContext.onstatechange;this._onstatechange=null!==n&&n===t?e:n}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}})(EJ,i0,sJ,nJ,a0,LZ),l0=((e,t,n,r,s,i)=>(a,o)=>{const l=a.createOscillator();return lZ(l,o),cZ(l,o,"detune"),cZ(l,o,"frequency"),void 0!==o.periodicWave?l.setPeriodicWave(o.periodicWave):oZ(l,o,"type"),t(n,(()=>n(a)))||hZ(l),t(r,(()=>r(a)))||i(l,a),t(s,(()=>s(a)))||dZ(l),e(a,l),l})(xJ,jZ,FZ,MZ,PZ,zZ),u0=((e,t,n,r,s)=>()=>{const i=new WeakMap;let a=null,o=null,l=null;return{set periodicWave(e){a=e},set start(e){o=e},set stop(e){l=e},render(u,c){const h=i.get(c);return void 0!==h?Promise.resolve(h):(async(u,c)=>{let h=n(u);const d=nQ(h,c);if(!d){const e={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,detune:h.detune.value,frequency:h.frequency.value,periodicWave:null===a?void 0:a,type:h.type};h=t(c,e),null!==o&&h.start(o),null!==l&&h.stop(l)}return i.set(c,h),d?(await e(c,u.detune,h.detune),await e(c,u.frequency,h.frequency)):(await r(c,u.detune,h.detune),await r(c,u.frequency,h.frequency)),await s(u,c,h),h})(u,c)}}})(kJ,l0,TQ,CJ,QZ),c0=((e,t,n,r,s,i,a)=>class extends e{constructor(e,a){const o=s(e),l={...IZ,...a},u=n(o,l),c=i(o),h=c?r():null,d=e.sampleRate/2;super(e,!1,u,h),this._detune=t(this,c,u.detune,153600,-153600),this._frequency=t(this,c,u.frequency,d,-d),this._nativeOscillatorNode=u,this._onended=null,this._oscillatorNodeRenderer=h,null!==this._oscillatorNodeRenderer&&void 0!==l.periodicWave&&(this._oscillatorNodeRenderer.periodicWave=l.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(e){const t="function"===typeof e?a(this,e):null;this._nativeOscillatorNode.onended=t;const n=this._nativeOscillatorNode.onended;this._onended=null!==n&&n===t?e:n}get type(){return this._nativeOscillatorNode.type}set type(e){this._nativeOscillatorNode.type=e,null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(e){this._nativeOscillatorNode.setPeriodicWave(e),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.periodicWave=e)}start(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(this._nativeOscillatorNode.start(e),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.start=e),"closed"!==this.context.state){QY(this);const e=()=>{this._nativeOscillatorNode.removeEventListener("ended",e),uQ(this)&&JY(this)};this._nativeOscillatorNode.addEventListener("ended",e)}}stop(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this._nativeOscillatorNode.stop(e),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.stop=e)}})(cJ,_J,l0,u0,JZ,nJ,LZ),h0=(e=>(t,n)=>{const r=e(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),s=t.createBuffer(1,2,44100);return r.buffer=s,r.loop=!0,r.connect(n),r.start(),()=>{r.stop(),r.disconnect(n)}})(SJ),d0=((e,t,n,r,s)=>(i,a)=>{let{curve:o,oversample:l,...u}=a;const c=i.createWaveShaper(),h=i.createWaveShaper();lZ(c,u),lZ(h,u);const d=n(i,{...u,gain:1}),p=n(i,{...u,gain:-1}),f=n(i,{...u,gain:1}),m=n(i,{...u,gain:-1});let g=null,y=!1,b=null;const v={get bufferSize(){},get channelCount(){return c.channelCount},set channelCount(e){d.channelCount=e,p.channelCount=e,c.channelCount=e,f.channelCount=e,h.channelCount=e,m.channelCount=e},get channelCountMode(){return c.channelCountMode},set channelCountMode(e){d.channelCountMode=e,p.channelCountMode=e,c.channelCountMode=e,f.channelCountMode=e,h.channelCountMode=e,m.channelCountMode=e},get channelInterpretation(){return c.channelInterpretation},set channelInterpretation(e){d.channelInterpretation=e,p.channelInterpretation=e,c.channelInterpretation=e,f.channelInterpretation=e,h.channelInterpretation=e,m.channelInterpretation=e},get context(){return c.context},get curve(){return b},set curve(n){if(null!==n&&n.length<2)throw t();if(null===n)c.curve=n,h.curve=n;else{const e=n.length,t=new Float32Array(e+2-e%2),r=new Float32Array(e+2-e%2);t[0]=n[0],r[0]=-n[e-1];const s=Math.ceil((e+1)/2),i=(e+1)/2-1;for(let a=1;a<s;a+=1){const o=a/s*i,l=Math.floor(o),u=Math.ceil(o);t[a]=l===u?n[l]:(1-(o-l))*n[l]+(1-(u-o))*n[u],r[a]=l===u?-n[e-1-l]:-(1-(o-l))*n[e-1-l]-(1-(u-o))*n[e-1-u]}t[s]=e%2===1?n[s-1]:(n[s-2]+n[s-1])/2,c.curve=t,h.curve=r}b=n,y&&(r(b)&&null===g?g=e(i,d):null!==g&&(g(),g=null))},get inputs(){return[d]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return c.numberOfOutputs},get oversample(){return c.oversample},set oversample(e){c.oversample=e,h.oversample=e},addEventListener(){return d.addEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])},dispatchEvent(){return d.dispatchEvent(arguments.length<=0?void 0:arguments[0])},removeEventListener(){return d.removeEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])}};null!==o&&(v.curve=o instanceof Float32Array?o:new Float32Array(o)),l!==v.oversample&&(v.oversample=l);return s(yZ(v,f),(()=>{d.connect(c).connect(f),d.connect(p).connect(h).connect(m).connect(f),y=!0,r(b)&&(g=e(i,d))}),(()=>{d.disconnect(c),c.disconnect(f),d.disconnect(p),p.disconnect(h),h.disconnect(m),m.disconnect(f),y=!1,null!==g&&(g(),g=null)}))})(h0,eZ,vZ,RZ,OJ),p0=((e,t,n,r,s,i,a)=>(o,l)=>{const u=o.createWaveShaper();if(null!==i&&"webkitAudioContext"===i.name&&void 0===o.createGain().gain.automationRate)return n(o,l);lZ(u,l);const c=null===l.curve||l.curve instanceof Float32Array?l.curve:new Float32Array(l.curve);if(null!==c&&c.length<2)throw t();oZ(u,{curve:c},"curve"),oZ(u,l,"oversample");let h=null,d=!1;a(u,"curve",(e=>()=>e.call(u)),(t=>n=>(t.call(u,n),d&&(r(n)&&null===h?h=e(o,u):r(n)||null===h||(h(),h=null)),n)));return s(u,(()=>{d=!0,r(u.curve)&&(h=e(o,u))}),(()=>{d=!1,null!==h&&(h(),h=null)}))})(h0,eZ,d0,RZ,OJ,iJ,OZ),f0=((e,t,n,r,s,i,a,o,l,u)=>(c,h)=>{let{coneInnerAngle:d,coneOuterAngle:p,coneOuterGain:f,distanceModel:m,maxDistance:g,orientationX:y,orientationY:b,orientationZ:v,panningModel:x,positionX:w,positionY:k,positionZ:S,refDistance:C,rolloffFactor:I,..._}=h;const T=c.createPanner();if(_.channelCount>2)throw a();if("max"===_.channelCountMode)throw a();lZ(T,_);const N={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},E=n(c,{...N,channelInterpretation:"speakers",numberOfInputs:6}),$=r(c,{..._,gain:1}),A=r(c,{...N,gain:1}),R=r(c,{...N,gain:0}),O=r(c,{...N,gain:0}),D=r(c,{...N,gain:0}),F=r(c,{...N,gain:0}),M=r(c,{...N,gain:0}),P=s(c,256,6,1),z=i(c,{...N,curve:new Float32Array([1,1]),oversample:"none"});let L=[y,b,v],B=[w,k,S];const V=new Float32Array(1);P.onaudioprocess=e=>{let{inputBuffer:t}=e;const n=[l(t,V,0),l(t,V,1),l(t,V,2)];n.some(((e,t)=>e!==L[t]))&&(T.setOrientation(...n),L=n);const r=[l(t,V,3),l(t,V,4),l(t,V,5)];r.some(((e,t)=>e!==B[t]))&&(T.setPosition(...r),B=r)},Object.defineProperty(R.gain,"defaultValue",{get:()=>0}),Object.defineProperty(O.gain,"defaultValue",{get:()=>0}),Object.defineProperty(D.gain,"defaultValue",{get:()=>0}),Object.defineProperty(F.gain,"defaultValue",{get:()=>0}),Object.defineProperty(M.gain,"defaultValue",{get:()=>0});const W={get bufferSize(){},get channelCount(){return T.channelCount},set channelCount(e){if(e>2)throw a();$.channelCount=e,T.channelCount=e},get channelCountMode(){return T.channelCountMode},set channelCountMode(e){if("max"===e)throw a();$.channelCountMode=e,T.channelCountMode=e},get channelInterpretation(){return T.channelInterpretation},set channelInterpretation(e){$.channelInterpretation=e,T.channelInterpretation=e},get coneInnerAngle(){return T.coneInnerAngle},set coneInnerAngle(e){T.coneInnerAngle=e},get coneOuterAngle(){return T.coneOuterAngle},set coneOuterAngle(e){T.coneOuterAngle=e},get coneOuterGain(){return T.coneOuterGain},set coneOuterGain(e){if(e<0||e>1)throw t();T.coneOuterGain=e},get context(){return T.context},get distanceModel(){return T.distanceModel},set distanceModel(e){T.distanceModel=e},get inputs(){return[$]},get maxDistance(){return T.maxDistance},set maxDistance(e){if(e<0)throw new RangeError;T.maxDistance=e},get numberOfInputs(){return T.numberOfInputs},get numberOfOutputs(){return T.numberOfOutputs},get orientationX(){return A.gain},get orientationY(){return R.gain},get orientationZ(){return O.gain},get panningModel(){return T.panningModel},set panningModel(e){T.panningModel=e},get positionX(){return D.gain},get positionY(){return F.gain},get positionZ(){return M.gain},get refDistance(){return T.refDistance},set refDistance(e){if(e<0)throw new RangeError;T.refDistance=e},get rolloffFactor(){return T.rolloffFactor},set rolloffFactor(e){if(e<0)throw new RangeError;T.rolloffFactor=e},addEventListener(){return $.addEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])},dispatchEvent(){return $.dispatchEvent(arguments.length<=0?void 0:arguments[0])},removeEventListener(){return $.removeEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])}};d!==W.coneInnerAngle&&(W.coneInnerAngle=d),p!==W.coneOuterAngle&&(W.coneOuterAngle=p),f!==W.coneOuterGain&&(W.coneOuterGain=f),m!==W.distanceModel&&(W.distanceModel=m),g!==W.maxDistance&&(W.maxDistance=g),y!==W.orientationX.value&&(W.orientationX.value=y),b!==W.orientationY.value&&(W.orientationY.value=b),v!==W.orientationZ.value&&(W.orientationZ.value=v),x!==W.panningModel&&(W.panningModel=x),w!==W.positionX.value&&(W.positionX.value=w),k!==W.positionY.value&&(W.positionY.value=k),S!==W.positionZ.value&&(W.positionZ.value=S),C!==W.refDistance&&(W.refDistance=C),I!==W.rolloffFactor&&(W.rolloffFactor=I),1===L[0]&&0===L[1]&&0===L[2]||T.setOrientation(...L),0===B[0]&&0===B[1]&&0===B[2]||T.setPosition(...B);return u(yZ(W,T),(()=>{$.connect(T),e($,z,0,0),z.connect(A).connect(E,0,0),z.connect(R).connect(E,0,1),z.connect(O).connect(E,0,2),z.connect(D).connect(E,0,3),z.connect(F).connect(E,0,4),z.connect(M).connect(E,0,5),E.connect(P).connect(c.destination)}),(()=>{$.disconnect(T),o($,z,0,0),z.disconnect(A),A.disconnect(E),z.disconnect(R),R.disconnect(E),z.disconnect(O),O.disconnect(E),z.disconnect(D),D.disconnect(E),z.disconnect(F),F.disconnect(E),z.disconnect(M),M.disconnect(E),E.disconnect(P),P.disconnect(c.destination)}))})(kQ,eZ,FJ,vZ,kZ,p0,SZ,_Q,AZ,OJ),m0=(e=>(t,n)=>{const r=t.createPanner();return void 0===r.orientationX?e(t,n):(lZ(r,n),cZ(r,n,"orientationX"),cZ(r,n,"orientationY"),cZ(r,n,"orientationZ"),cZ(r,n,"positionX"),cZ(r,n,"positionY"),cZ(r,n,"positionZ"),oZ(r,n,"coneInnerAngle"),oZ(r,n,"coneOuterAngle"),oZ(r,n,"coneOuterGain"),oZ(r,n,"distanceModel"),oZ(r,n,"maxDistance"),oZ(r,n,"panningModel"),oZ(r,n,"refDistance"),oZ(r,n,"rolloffFactor"),r)})(f0),g0=((e,t,n,r,s,i,a,o,l,u)=>()=>{const c=new WeakMap;let h=null;return{render(d,p){const f=c.get(p);return void 0!==f?Promise.resolve(f):(async(d,p)=>{let f=null,m=i(d);const g={channelCount:m.channelCount,channelCountMode:m.channelCountMode,channelInterpretation:m.channelInterpretation},y={...g,coneInnerAngle:m.coneInnerAngle,coneOuterAngle:m.coneOuterAngle,coneOuterGain:m.coneOuterGain,distanceModel:m.distanceModel,maxDistance:m.maxDistance,panningModel:m.panningModel,refDistance:m.refDistance,rolloffFactor:m.rolloffFactor},b=nQ(m,p);if("bufferSize"in m)f=r(p,{...g,gain:1});else if(!b){const e={...y,orientationX:m.orientationX.value,orientationY:m.orientationY.value,orientationZ:m.orientationZ.value,positionX:m.positionX.value,positionY:m.positionY.value,positionZ:m.positionZ.value};m=s(p,e)}if(c.set(p,null===f?m:f),null!==f){if(null===h){if(null===a)throw new Error("Missing the native OfflineAudioContext constructor.");const e=new a(6,d.context.length,p.sampleRate),r=t(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});r.connect(e.destination),h=(async()=>{const t=await Promise.all([d.orientationX,d.orientationY,d.orientationZ,d.positionX,d.positionY,d.positionZ].map((async(t,r)=>{const s=n(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:0===r?1:0});return await o(e,t,s.offset),s})));for(let e=0;e<6;e+=1)t[e].connect(r,0,e),t[e].start(0);return u(e)})()}const e=await h,i=r(p,{...g,gain:1});await l(d,p,i);const c=[];for(let t=0;t<e.numberOfChannels;t+=1)c.push(e.getChannelData(t));let m=[c[0][0],c[1][0],c[2][0]],b=[c[3][0],c[4][0],c[5][0]],v=r(p,{...g,gain:1}),x=s(p,{...y,orientationX:m[0],orientationY:m[1],orientationZ:m[2],positionX:b[0],positionY:b[1],positionZ:b[2]});i.connect(v).connect(x.inputs[0]),x.connect(f);for(let t=128;t<e.length;t+=128){const e=[c[0][t],c[1][t],c[2][t]],n=[c[3][t],c[4][t],c[5][t]];if(e.some(((e,t)=>e!==m[t]))||n.some(((e,t)=>e!==b[t]))){m=e,b=n;const a=t/p.sampleRate;v.gain.setValueAtTime(0,a),v=r(p,{...g,gain:0}),x=s(p,{...y,orientationX:m[0],orientationY:m[1],orientationZ:m[2],positionX:b[0],positionY:b[1],positionZ:b[2]}),v.gain.setValueAtTime(1,a),i.connect(v).connect(x.inputs[0]),x.connect(f)}}return f}return b?(await e(p,d.orientationX,m.orientationX),await e(p,d.orientationY,m.orientationY),await e(p,d.orientationZ,m.orientationZ),await e(p,d.positionX,m.positionX),await e(p,d.positionY,m.positionY),await e(p,d.positionZ,m.positionZ)):(await o(p,d.orientationX,m.orientationX),await o(p,d.orientationY,m.orientationY),await o(p,d.orientationZ,m.orientationZ),await o(p,d.positionX,m.positionX),await o(p,d.positionY,m.positionY),await o(p,d.positionZ,m.positionZ)),wQ(m)?await l(d,p,m.inputs[0]):await l(d,p,m),m})(d,p)}}})(kJ,FJ,VJ,vZ,m0,TQ,tJ,CJ,QZ,t0),y0=((e,t,n,r,s,i,a)=>class extends e{constructor(e,o){const l=s(e),u={..._Z,...o},c=n(l,u),h=i(l);super(e,!1,c,h?r():null),this._nativePannerNode=c,this._orientationX=t(this,h,c.orientationX,lQ,oQ),this._orientationY=t(this,h,c.orientationY,lQ,oQ),this._orientationZ=t(this,h,c.orientationZ,lQ,oQ),this._positionX=t(this,h,c.positionX,lQ,oQ),this._positionY=t(this,h,c.positionY,lQ,oQ),this._positionZ=t(this,h,c.positionZ,lQ,oQ),a(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(e){this._nativePannerNode.coneInnerAngle=e}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(e){this._nativePannerNode.coneOuterAngle=e}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(e){this._nativePannerNode.coneOuterGain=e}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(e){this._nativePannerNode.distanceModel=e}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(e){this._nativePannerNode.maxDistance=e}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(e){this._nativePannerNode.panningModel=e}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(e){this._nativePannerNode.refDistance=e}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(e){this._nativePannerNode.rolloffFactor=e}})(cJ,_J,m0,g0,JZ,nJ,AJ),b0=(e=>(t,n)=>{let{disableNormalization:r,imag:s,real:i}=n;const a=s instanceof Float32Array?s:new Float32Array(s),o=i instanceof Float32Array?i:new Float32Array(i),l=t.createPeriodicWave(o,a,{disableNormalization:r});if(Array.from(s).length<2)throw e();return l})(sQ),v0=((e,t,n,r)=>class s{constructor(s,i){const a=t(s),o=r({...TZ,...i}),l=e(a,o);return n.add(l),l}static[Symbol.hasInstance](e){return null!==e&&"object"===typeof e&&Object.getPrototypeOf(e)===s.prototype||n.has(e)}})(b0,JZ,new WeakSet,(e=>{const{imag:t,real:n}=e;return void 0===t?void 0===n?{...e,imag:[0,0],real:[0,0]}:{...e,imag:Array.from(n,(()=>0)),real:n}:void 0===n?{...e,imag:t,real:Array.from(t,(()=>0))}:{...e,imag:t,real:n}})),x0=((e,t,n,r,s,i)=>{const a=16385,o=new Float32Array([1,1]),l=Math.PI/2,u={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},c={...u,oversample:"none"},h=(e,i,h,d,p)=>{if(1===i)return((e,t,s,i)=>{const h=new Float32Array(a),d=new Float32Array(a);for(let n=0;n<a;n+=1){const e=n/16384*l;h[n]=Math.cos(e),d[n]=Math.sin(e)}const p=n(e,{...u,gain:0}),f=r(e,{...c,curve:h}),m=r(e,{...c,curve:o}),g=n(e,{...u,gain:0}),y=r(e,{...c,curve:d});return{connectGraph(){t.connect(p),t.connect(void 0===m.inputs?m:m.inputs[0]),t.connect(g),m.connect(s),s.connect(void 0===f.inputs?f:f.inputs[0]),s.connect(void 0===y.inputs?y:y.inputs[0]),f.connect(p.gain),y.connect(g.gain),p.connect(i,0,0),g.connect(i,0,1)},disconnectGraph(){t.disconnect(p),t.disconnect(void 0===m.inputs?m:m.inputs[0]),t.disconnect(g),m.disconnect(s),s.disconnect(void 0===f.inputs?f:f.inputs[0]),s.disconnect(void 0===y.inputs?y:y.inputs[0]),f.disconnect(p.gain),y.disconnect(g.gain),p.disconnect(i,0,0),g.disconnect(i,0,1)}}})(e,h,d,p);if(2===i)return((e,s,i,h)=>{const d=new Float32Array(a),p=new Float32Array(a),f=new Float32Array(a),m=new Float32Array(a),g=Math.floor(8192.5);for(let t=0;t<a;t+=1)if(t>g){const e=(t-g)/(16384-g)*l;d[t]=Math.cos(e),p[t]=Math.sin(e),f[t]=0,m[t]=1}else{const e=t/(16384-g)*l;d[t]=1,p[t]=0,f[t]=Math.cos(e),m[t]=Math.sin(e)}const y=t(e,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),b=n(e,{...u,gain:0}),v=r(e,{...c,curve:d}),x=n(e,{...u,gain:0}),w=r(e,{...c,curve:p}),k=r(e,{...c,curve:o}),S=n(e,{...u,gain:0}),C=r(e,{...c,curve:f}),I=n(e,{...u,gain:0}),_=r(e,{...c,curve:m});return{connectGraph(){s.connect(y),s.connect(void 0===k.inputs?k:k.inputs[0]),y.connect(b,0),y.connect(x,0),y.connect(S,1),y.connect(I,1),k.connect(i),i.connect(void 0===v.inputs?v:v.inputs[0]),i.connect(void 0===w.inputs?w:w.inputs[0]),i.connect(void 0===C.inputs?C:C.inputs[0]),i.connect(void 0===_.inputs?_:_.inputs[0]),v.connect(b.gain),w.connect(x.gain),C.connect(S.gain),_.connect(I.gain),b.connect(h,0,0),S.connect(h,0,0),x.connect(h,0,1),I.connect(h,0,1)},disconnectGraph(){s.disconnect(y),s.disconnect(void 0===k.inputs?k:k.inputs[0]),y.disconnect(b,0),y.disconnect(x,0),y.disconnect(S,1),y.disconnect(I,1),k.disconnect(i),i.disconnect(void 0===v.inputs?v:v.inputs[0]),i.disconnect(void 0===w.inputs?w:w.inputs[0]),i.disconnect(void 0===C.inputs?C:C.inputs[0]),i.disconnect(void 0===_.inputs?_:_.inputs[0]),v.disconnect(b.gain),w.disconnect(x.gain),C.disconnect(S.gain),_.disconnect(I.gain),b.disconnect(h,0,0),S.disconnect(h,0,0),x.disconnect(h,0,1),I.disconnect(h,0,1)}}})(e,h,d,p);throw s()};return(t,r)=>{let{channelCount:a,channelCountMode:o,pan:l,...u}=r;if("max"===o)throw s();const c=e(t,{...u,channelCount:1,channelCountMode:o,numberOfInputs:2}),d=n(t,{...u,channelCount:a,channelCountMode:o,gain:1}),p=n(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:l});let{connectGraph:f,disconnectGraph:m}=h(t,a,d,p,c);Object.defineProperty(p.gain,"defaultValue",{get:()=>0}),Object.defineProperty(p.gain,"maxValue",{get:()=>1}),Object.defineProperty(p.gain,"minValue",{get:()=>-1});const g={get bufferSize(){},get channelCount(){return d.channelCount},set channelCount(e){d.channelCount!==e&&(y&&m(),({connectGraph:f,disconnectGraph:m}=h(t,e,d,p,c)),y&&f()),d.channelCount=e},get channelCountMode(){return d.channelCountMode},set channelCountMode(e){if("clamped-max"===e||"max"===e)throw s();d.channelCountMode=e},get channelInterpretation(){return d.channelInterpretation},set channelInterpretation(e){d.channelInterpretation=e},get context(){return d.context},get inputs(){return[d]},get numberOfInputs(){return d.numberOfInputs},get numberOfOutputs(){return d.numberOfOutputs},get pan(){return p.gain},addEventListener(){return d.addEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])},dispatchEvent(){return d.dispatchEvent(arguments.length<=0?void 0:arguments[0])},removeEventListener(){return d.removeEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])}};let y=!1;return i(yZ(g,c),(()=>{f(),y=!0}),(()=>{m(),y=!1}))}})(FJ,gZ,vZ,p0,SZ,OJ),w0=((e,t)=>(n,r)=>{const s=r.channelCountMode;if("clamped-max"===s)throw t();if(void 0===n.createStereoPanner)return e(n,r);const i=n.createStereoPanner();return lZ(i,r),cZ(i,r,"pan"),Object.defineProperty(i,"channelCountMode",{get:()=>s,set:e=>{if(e!==s)throw t()}}),i})(x0,SZ),k0=((e,t,n,r,s)=>()=>{const i=new WeakMap;return{render(a,o){const l=i.get(o);return void 0!==l?Promise.resolve(l):(async(a,o)=>{let l=n(a);const u=nQ(l,o);if(!u){const e={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=t(o,e)}return i.set(o,l),u?await e(o,a.pan,l.pan):await r(o,a.pan,l.pan),wQ(l)?await s(a,o,l.inputs[0]):await s(a,o,l),l})(a,o)}}})(kJ,w0,TQ,CJ,QZ),S0=((e,t,n,r,s,i)=>class extends e{constructor(e,a){const o=s(e),l={...NZ,...a},u=n(o,l),c=i(o);super(e,!1,u,c?r():null),this._pan=t(this,c,u.pan)}get pan(){return this._pan}})(cJ,_J,w0,k0,JZ,nJ),C0=((e,t,n)=>()=>{const r=new WeakMap;return{render(s,i){const a=r.get(i);return void 0!==a?Promise.resolve(a):(async(s,i)=>{let a=t(s);if(!nQ(a,i)){const t={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=e(i,t)}return r.set(i,a),wQ(a)?await n(s,i,a.inputs[0]):await n(s,i,a),a})(s,i)}}})(p0,TQ,QZ),I0=((e,t,n,r,s,i,a)=>class extends e{constructor(e,t){const o=s(e),l={...$Z,...t},u=n(o,l);super(e,!0,u,i(o)?r():null),this._isCurveNullified=!1,this._nativeWaveShaperNode=u,a(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(e){if(null===e)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(e.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=e}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(e){this._nativeWaveShaperNode.oversample=e}})(cJ,eZ,p0,C0,JZ,nJ,AJ),_0=(e=>null!==e&&e.isSecureContext)(KZ),T0=(e=>(t,n,r)=>{Object.defineProperties(e,{currentFrame:{configurable:!0,get:()=>Math.round(t*n)},currentTime:{configurable:!0,get:()=>t}});try{return r()}finally{null!==e&&(delete e.currentFrame,delete e.currentTime)}})(KZ),N0=new WeakMap,E0=((e,t)=>n=>{let r=e.get(n);if(void 0!==r)return r;if(null===t)throw new Error("Missing the native OfflineAudioContext constructor.");return r=new t(1,1,44100),e.set(n,r),r})(N0,tJ),$0=_0?((e,t,n,r,s,i,a,o,l,u,c,h,d)=>{let p=0;return function(f,m){let g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{credentials:"omit"};const y=c.get(f);if(void 0!==y&&y.has(m))return Promise.resolve();const b=u.get(f);if(void 0!==b){const e=b.get(m);if(void 0!==e)return e}const v=i(f),x=void 0===v.audioWorklet?s(m).then((e=>{let[t,r]=e;const[s,i]=GY(t,r);return n(`${s};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${i}\n})})(window,'_AWGS')`)})).then((()=>{const e=d._AWGS.pop();if(void 0===e)throw new SyntaxError;r(v.currentTime,v.sampleRate,(()=>e(class{},void 0,((e,n)=>{if(""===e.trim())throw t();const r=BY.get(v);if(void 0!==r){if(r.has(e))throw t();HY(n),jY(n.parameterDescriptors),r.set(e,n)}else HY(n),jY(n.parameterDescriptors),BY.set(v,new Map([[e,n]]))}),v.sampleRate,void 0,void 0)))})):Promise.all([s(m),Promise.resolve(e(h,h))]).then((e=>{let[[t,n],r]=e;const s=p+1;p=s;const[i,u]=GY(t,n),c=new Blob([`${i};((AudioWorkletProcessor,registerProcessor)=>{${u}\n})(${r?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${r?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${r?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${s}',class extends AudioWorkletProcessor{process(){return !1}})`],{type:"application/javascript; charset=utf-8"}),h=URL.createObjectURL(c);return v.audioWorklet.addModule(h,g).then((()=>{if(o(v))return v;const e=a(v);return e.audioWorklet.addModule(h,g).then((()=>e))})).then((e=>{if(null===l)throw new SyntaxError;try{new l(e,`__sac${s}`)}catch{throw new SyntaxError}})).finally((()=>URL.revokeObjectURL(h)))}));return void 0===b?u.set(f,new Map([[m,x]])):b.set(m,x),x.then((()=>{const e=c.get(f);void 0===e?c.set(f,new Set([m])):e.add(m)})).finally((()=>{const e=u.get(f);void 0!==e&&e.delete(m)})),x}})(jZ,SZ,(e=>t=>new Promise(((n,r)=>{if(null===e)return void r(new SyntaxError);const s=e.document.head;if(null===s)r(new SyntaxError);else{const i=e.document.createElement("script"),a=new Blob([t],{type:"application/javascript"}),o=URL.createObjectURL(a),l=e.onerror,u=()=>{e.onerror=l,URL.revokeObjectURL(o)};e.onerror=(t,n,s,i,a)=>n===o||n===e.location.href&&1===s&&1===i?(u(),r(a),!1):null!==l?l(t,n,s,i,a):void 0,i.onerror=()=>{u(),r(new SyntaxError)},i.onload=()=>{u(),n()},i.src=o,i.type="module",s.appendChild(i)}})))(KZ),T0,(e=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw e()})((()=>new DOMException("","AbortError"))),JZ,E0,nJ,uJ,new WeakMap,new WeakMap,((e,t)=>async()=>{if(null===e)return!0;if(null===t)return!1;const n=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),r=new t(1,128,44100),s=URL.createObjectURL(n);let i=!1,a=!1;try{await r.audioWorklet.addModule(s);const t=new e(r,"a",{numberOfOutputs:0}),n=r.createOscillator();t.port.onmessage=()=>i=!0,t.onprocessorerror=()=>a=!0,n.connect(t),n.start(0),await r.startRendering(),await new Promise((e=>setTimeout(e)))}catch{}finally{URL.revokeObjectURL(s)}return i&&!a})(uJ,tJ),KZ):void 0,A0=((e,t)=>n=>e(n)||t(n))(aJ,nJ),R0=((e,t,n,r,s,i,a,o,l,u,c)=>(h,d)=>{const p=a(h)?h:i(h);if(s.has(d)){const e=n();return Promise.reject(e)}try{s.add(d)}catch{}return t(l,(()=>l(p)))?p.decodeAudioData(d).then((n=>(XQ(d).catch((()=>{})),t(o,(()=>o(n)))||c(n),e.add(n),n))):new Promise(((t,n)=>{const s=async()=>{try{await XQ(d)}catch{}},i=e=>{n(e),s()};try{p.decodeAudioData(d,(n=>{"function"!==typeof n.copyFromChannel&&(u(n),iQ(n)),e.add(n),s().then((()=>t(n)))}),(e=>{i(null===e?r():e)}))}catch(Q3){i(Q3)}}))})(pJ,jZ,(()=>new DOMException("","DataCloneError")),(()=>new DOMException("","EncodingError")),new WeakSet,JZ,A0,rQ,iZ,yJ,bJ),O0=((e,t,n,r,s,i,a,o,l,u,c,h,d,p,f,m,g,y,b,v)=>class extends f{constructor(t,n){super(t,n),this._nativeContext=t,this._audioWorklet=void 0===e?void 0:{addModule:(t,n)=>e(this,t,n)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new s(this)}createBuffer(e,t,r){return new n({length:t,numberOfChannels:e,sampleRate:r})}createBufferSource(){return new r(this)}createChannelMerger(){return new i(this,{numberOfInputs:arguments.length>0&&void 0!==arguments[0]?arguments[0]:6})}createChannelSplitter(){return new a(this,{numberOfOutputs:arguments.length>0&&void 0!==arguments[0]?arguments[0]:6})}createConstantSource(){return new o(this)}createConvolver(){return new l(this)}createDelay(){return new c(this,{maxDelayTime:arguments.length>0&&void 0!==arguments[0]?arguments[0]:1})}createDynamicsCompressor(){return new h(this)}createGain(){return new d(this)}createIIRFilter(e,t){return new p(this,{feedback:t,feedforward:e})}createOscillator(){return new m(this)}createPanner(){return new g(this)}createPeriodicWave(e,t){return new y(this,{...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{disableNormalization:!1},imag:t,real:e})}createStereoPanner(){return new b(this)}createWaveShaper(){return new v(this)}decodeAudioData(e,t,n){return u(this._nativeContext,e).then((e=>("function"===typeof t&&t(e),e)),(e=>{throw"function"===typeof n&&n(e),e}))}})($0,dJ,vJ,NJ,RJ,PJ,LJ,UJ,HJ,R0,KJ,QJ,JJ,s0,o0,c0,y0,v0,S0,I0),D0=((e,t,n,r)=>class extends e{constructor(e,s){const i=n(e),a=t(i,s);if(r(i))throw TypeError();super(e,!0,a,null),this._nativeMediaElementAudioSourceNode=a}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}})(cJ,((e,t)=>e.createMediaElementSource(t.mediaElement)),JZ,nJ),F0=((e,t,n,r)=>class extends e{constructor(e,s){const i=n(e);if(r(i))throw new TypeError;const a={...sZ,...s},o=t(i,a);super(e,!1,o,null),this._nativeMediaStreamAudioDestinationNode=o}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}})(cJ,((e,t)=>{const n=e.createMediaStreamDestination();return lZ(n,t),1===n.numberOfOutputs&&Object.defineProperty(n,"numberOfOutputs",{get:()=>0}),n}),JZ,nJ),M0=((e,t,n,r)=>class extends e{constructor(e,s){const i=n(e),a=t(i,s);if(r(i))throw new TypeError;super(e,!0,a,null),this._nativeMediaStreamAudioSourceNode=a}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}})(cJ,((e,t)=>{let{mediaStream:n}=t;const r=n.getAudioTracks();r.sort(((e,t)=>e.id<t.id?-1:e.id>t.id?1:0));const s=r.slice(0,1),i=e.createMediaStreamSource(new MediaStream(s));return Object.defineProperty(i,"mediaStream",{value:n}),i}),JZ,nJ),P0=((e,t)=>(n,r)=>{let{mediaStreamTrack:s}=r;if("function"===typeof n.createMediaStreamTrackSource)return n.createMediaStreamTrackSource(s);const i=new MediaStream([s]),a=n.createMediaStreamSource(i);if("audio"!==s.kind)throw e();if(t(n))throw new TypeError;return a})(eZ,nJ),z0=((e,t,n)=>class extends e{constructor(e,r){const s=n(e);super(e,!0,t(s,r),null)}})(cJ,P0,JZ),L0=((e,t,n,r,s,i,a,o,l)=>class extends e{constructor(){let e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null===l)throw new Error("Missing the native AudioContext constructor.");try{e=new l(t)}catch(Q3){if(12===Q3.code&&"sampleRate is not in range"===Q3.message)throw n();throw Q3}if(null===e)throw r();if(!mQ(t.latencyHint))throw new TypeError(`The provided value '${t.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(void 0!==t.sampleRate&&e.sampleRate!==t.sampleRate)throw n();super(e,2);const{latencyHint:s}=t,{sampleRate:i}=e;if(this._baseLatency="number"===typeof e.baseLatency?e.baseLatency:"balanced"===s?512/i:"interactive"===s||void 0===s?256/i:"playback"===s?1024/i:128*Math.max(2,Math.min(128,Math.round(s*i/128)))/i,this._nativeAudioContext=e,"webkitAudioContext"===l.name?(this._nativeGainNode=e.createGain(),this._nativeOscillatorNode=e.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(e.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,"running"===e.state){this._state="suspended";const t=()=>{"suspended"===this._state&&(this._state=null),e.removeEventListener("statechange",t)};e.addEventListener("statechange",t)}}get baseLatency(){return this._baseLatency}get state(){return null!==this._state?this._state:this._nativeAudioContext.state}close(){return"closed"===this.state?this._nativeAudioContext.close().then((()=>{throw t()})):("suspended"===this._state&&(this._state=null),this._nativeAudioContext.close().then((()=>{null!==this._nativeGainNode&&null!==this._nativeOscillatorNode&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),fQ(this)})))}createMediaElementSource(e){return new s(this,{mediaElement:e})}createMediaStreamDestination(){return new i(this)}createMediaStreamSource(e){return new a(this,{mediaStream:e})}createMediaStreamTrackSource(e){return new o(this,{mediaStreamTrack:e})}resume(){return"suspended"===this._state?new Promise(((e,t)=>{const n=()=>{this._nativeAudioContext.removeEventListener("statechange",n),"running"===this._nativeAudioContext.state?e():this.resume().then(e,t)};this._nativeAudioContext.addEventListener("statechange",n)})):this._nativeAudioContext.resume().catch((e=>{if(void 0===e||15===e.code)throw t();throw e}))}suspend(){return this._nativeAudioContext.suspend().catch((e=>{if(void 0===e)throw t();throw e}))}})(O0,eZ,SZ,EZ,D0,F0,M0,z0,iJ),B0=(e=>t=>{const n=e.get(t);if(void 0===n)throw new Error("The context has no set of AudioWorkletNodes.");return n})(a0),V0=(e=>(t,n)=>{e(t).add(n)})(B0),W0=(e=>function(t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const s=t[arguments.length>2&&void 0!==arguments[2]?arguments[2]:0];if(void 0===s)throw e();return OQ(n)?s.connect(n,0,r):s.connect(n,0)})(sQ),U0=(e=>(t,n)=>{e(t).delete(n)})(B0),G0=(e=>function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;return void 0===n?t.forEach((e=>e.disconnect())):"number"===typeof n?QQ(e,t,n).disconnect():OQ(n)?void 0===r?t.forEach((e=>e.disconnect(n))):void 0===s?QQ(e,t,r).disconnect(n,0):QQ(e,t,r).disconnect(n,0,s):void 0===r?t.forEach((e=>e.disconnect(n))):QQ(e,t,r).disconnect(n,0)})(sQ),j0=new WeakMap,H0=((e,t)=>n=>t(e,n))(j0,qY),q0=((e,t,n,r,s,i,a,o,l,u,c,h,d)=>(p,f,m,g)=>{if(0===g.numberOfInputs&&0===g.numberOfOutputs)throw l();const y=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(y.some((e=>e<1)))throw l();if(y.length!==g.numberOfOutputs)throw t();if("explicit"!==g.channelCountMode)throw l();const b=g.channelCount*g.numberOfInputs,v=y.reduce(((e,t)=>e+t),0),x=void 0===m.parameterDescriptors?0:m.parameterDescriptors.length;if(b+x>6||v>6)throw l();const w=new MessageChannel,k=[],S=[];for(let e=0;e<g.numberOfInputs;e+=1)k.push(a(p,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),S.push(s(p,{channelCount:g.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:g.channelCount}));const C=[];if(void 0!==m.parameterDescriptors)for(const{defaultValue:e,maxValue:t,minValue:n,name:r}of m.parameterDescriptors){const s=i(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:void 0!==g.parameterData[r]?g.parameterData[r]:void 0===e?0:e});Object.defineProperties(s.offset,{defaultValue:{get:()=>void 0===e?0:e},maxValue:{get:()=>void 0===t?lQ:t},minValue:{get:()=>void 0===n?oQ:n}}),C.push(s)}const I=r(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,b+x)}),_=pZ(f,p.sampleRate),T=o(p,_,b+x,Math.max(1,v)),N=s(p,{channelCount:Math.max(1,v),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,v)}),E=[];for(let e=0;e<g.numberOfOutputs;e+=1)E.push(r(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:y[e]}));for(let e=0;e<g.numberOfInputs;e+=1){k[e].connect(S[e]);for(let t=0;t<g.channelCount;t+=1)S[e].connect(I,t,e*g.channelCount+t)}const $=new zQ(void 0===m.parameterDescriptors?[]:m.parameterDescriptors.map(((e,t)=>{let{name:n}=e;const r=C[t];return r.connect(I,0,b+t),r.start(0),[n,r.offset]})));I.connect(T);let A=g.channelInterpretation,R=null;const O=0===g.numberOfOutputs?[T]:E,D={get bufferSize(){return _},get channelCount(){return g.channelCount},set channelCount(e){throw n()},get channelCountMode(){return g.channelCountMode},set channelCountMode(e){throw n()},get channelInterpretation(){return A},set channelInterpretation(e){for(const t of k)t.channelInterpretation=e;A=e},get context(){return T.context},get inputs(){return k},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},get onprocessorerror(){return R},set onprocessorerror(e){"function"===typeof R&&D.removeEventListener("processorerror",R),R="function"===typeof e?e:null,"function"===typeof R&&D.addEventListener("processorerror",R)},get parameters(){return $},get port(){return w.port2},addEventListener(){return T.addEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])},connect:e.bind(null,O),disconnect:u.bind(null,O),dispatchEvent(){return T.dispatchEvent(arguments.length<=0?void 0:arguments[0])},removeEventListener(){return T.removeEventListener(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2])}},F=new Map;var M,P;w.port1.addEventListener=(M=w.port1.addEventListener,function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];if("message"===t[0]){const e="function"===typeof t[1]?t[1]:"object"===typeof t[1]&&null!==t[1]&&"function"===typeof t[1].handleEvent?t[1].handleEvent:null;if(null!==e){const n=F.get(t[1]);void 0!==n?t[1]=n:(t[1]=t=>{c(p.currentTime,p.sampleRate,(()=>e(t)))},F.set(e,t[1]))}}return M.call(w.port1,t[0],t[1],t[2])}),w.port1.removeEventListener=(P=w.port1.removeEventListener,function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];if("message"===t[0]){const e=F.get(t[1]);void 0!==e&&(F.delete(t[1]),t[1]=e)}return P.call(w.port1,t[0],t[1],t[2])});let z=null;Object.defineProperty(w.port1,"onmessage",{get:()=>z,set:e=>{"function"===typeof z&&w.port1.removeEventListener("message",z),z="function"===typeof e?e:null,"function"===typeof z&&(w.port1.addEventListener("message",z),w.port1.start())}}),m.prototype.port=w.port1;let L=null;const B=((e,t,n,r)=>{let s=VY.get(e);void 0===s&&(s=new WeakMap,VY.set(e,s));const i=fZ(n,r);return s.set(t,i),i})(p,D,m,g);B.then((e=>L=e));const V=WQ(g.numberOfInputs,g.channelCount),W=WQ(g.numberOfOutputs,y),U=void 0===m.parameterDescriptors?[]:m.parameterDescriptors.reduce(((e,t)=>{let{name:n}=t;return{...e,[n]:new Float32Array(128)}}),{});let G=!0;const j=()=>{g.numberOfOutputs>0&&T.disconnect(N);for(let e=0,t=0;e<g.numberOfOutputs;e+=1){const n=E[e];for(let r=0;r<y[e];r+=1)N.disconnect(n,t+r,r);t+=y[e]}},H=new Map;T.onaudioprocess=e=>{let{inputBuffer:t,outputBuffer:n}=e;if(null!==L){const e=h(D);for(let s=0;s<_;s+=128){for(let e=0;e<g.numberOfInputs;e+=1)for(let n=0;n<g.channelCount;n+=1)BQ(t,V[e],n,n,s);void 0!==m.parameterDescriptors&&m.parameterDescriptors.forEach(((e,n)=>{let{name:r}=e;BQ(t,U,r,b+n,s)}));for(let e=0;e<g.numberOfInputs;e+=1)for(let t=0;t<y[e];t+=1)0===W[e][t].byteLength&&(W[e][t]=new Float32Array(128));try{const t=V.map(((t,n)=>{if(e[n].size>0)return H.set(n,_/128),t;const r=H.get(n);return void 0===r?[]:(t.every((e=>e.every((e=>0===e))))&&(1===r?H.delete(n):H.set(n,r-1)),t)})),r=c(p.currentTime+s/p.sampleRate,p.sampleRate,(()=>L.process(t,W,U)));G=r;for(let e=0,i=0;e<g.numberOfOutputs;e+=1){for(let t=0;t<y[e];t+=1)VQ(n,W[e],t,i+t,s);i+=y[e]}}catch(r){G=!1,D.dispatchEvent(new ErrorEvent("processorerror",{colno:r.colno,filename:r.filename,lineno:r.lineno,message:r.message}))}if(!G){for(let e=0;e<g.numberOfInputs;e+=1){k[e].disconnect(S[e]);for(let t=0;t<g.channelCount;t+=1)S[s].disconnect(I,t,e*g.channelCount+t)}if(void 0!==m.parameterDescriptors){const e=m.parameterDescriptors.length;for(let t=0;t<e;t+=1){const e=C[t];e.disconnect(I,0,b+t),e.stop()}}I.disconnect(T),T.onaudioprocess=null,q?j():Y();break}}}};let q=!1;const K=a(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),X=()=>T.connect(K).connect(p.destination),Y=()=>{T.disconnect(K),K.disconnect()};return X(),d(D,(()=>{if(G){Y(),g.numberOfOutputs>0&&T.connect(N);for(let e=0,t=0;e<g.numberOfOutputs;e+=1){const n=E[e];for(let r=0;r<y[e];r+=1)N.connect(n,t+r,r);t+=y[e]}}q=!0}),(()=>{G&&(X(),j()),q=!1}))})(W0,sQ,eZ,FJ,gZ,VJ,vZ,kZ,SZ,G0,T0,H0,OJ),K0=((e,t,n,r,s)=>(i,a,o,l,u,c)=>{if(null!==o)try{const t=new o(i,l,c),r=new Map;let a=null;if(Object.defineProperties(t,{channelCount:{get:()=>c.channelCount,set:()=>{throw e()}},channelCountMode:{get:()=>"explicit",set:()=>{throw e()}},onprocessorerror:{get:()=>a,set:e=>{"function"===typeof a&&t.removeEventListener("processorerror",a),a="function"===typeof e?e:null,"function"===typeof a&&t.addEventListener("processorerror",a)}}}),t.addEventListener=(d=t.addEventListener,function(){for(var e=arguments.length,n=new Array(e),s=0;s<e;s++)n[s]=arguments[s];if("processorerror"===n[0]){const e="function"===typeof n[1]?n[1]:"object"===typeof n[1]&&null!==n[1]&&"function"===typeof n[1].handleEvent?n[1].handleEvent:null;if(null!==e){const t=r.get(n[1]);void 0!==t?n[1]=t:(n[1]=t=>{"error"===t.type?(Object.defineProperties(t,{type:{value:"processorerror"}}),e(t)):e(new ErrorEvent(n[0],{...t}))},r.set(e,n[1]))}}return d.call(t,"error",n[1],n[2]),d.call(t,...n)}),t.removeEventListener=(h=t.removeEventListener,function(){for(var e=arguments.length,n=new Array(e),s=0;s<e;s++)n[s]=arguments[s];if("processorerror"===n[0]){const e=r.get(n[1]);void 0!==e&&(r.delete(n[1]),n[1]=e)}return h.call(t,"error",n[1],n[2]),h.call(t,n[0],n[1],n[2])}),0!==c.numberOfOutputs){const e=n(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});t.connect(e).connect(i.destination);return s(t,(()=>e.disconnect()),(()=>e.connect(i.destination)))}return t}catch(Q3){if(11===Q3.code)throw r();throw Q3}var h,d;if(void 0===u)throw r();return(e=>{const{port1:t}=new MessageChannel;try{t.postMessage(e)}finally{t.close()}})(c),t(i,a,u,c)})(eZ,q0,vZ,SZ,OJ),X0=((e,t,n,r,s,i,a,o,l,u,c,h,d,p,f,m)=>(g,y,b)=>{const v=new WeakMap;let x=null;return{render(w,k){o(k,w);const S=v.get(k);return void 0!==S?Promise.resolve(S):(async(o,w)=>{let k=c(o),S=null;const C=nQ(k,w),I=Array.isArray(y.outputChannelCount)?y.outputChannelCount:Array.from(y.outputChannelCount);if(null===h){const e=I.reduce(((e,t)=>e+t),0),n=s(w,{channelCount:Math.max(1,e),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,e)}),i=[];for(let t=0;t<o.numberOfOutputs;t+=1)i.push(r(w,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:I[t]}));const u=a(w,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1});u.connect=t.bind(null,i),u.disconnect=l.bind(null,i),S=[n,i,u]}else C||(k=new h(w,g));if(v.set(w,null===S?k:S[2]),null!==S){if(null===x){if(void 0===b)throw new Error("Missing the processor constructor.");if(null===d)throw new Error("Missing the native OfflineAudioContext constructor.");const e=o.channelCount*o.numberOfInputs,t=void 0===b.parameterDescriptors?0:b.parameterDescriptors.length,n=e+t,l=async()=>{const l=new d(n,128*Math.ceil(o.context.length/128),w.sampleRate),u=[],c=[];for(let e=0;e<y.numberOfInputs;e+=1)u.push(a(l,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1})),c.push(s(l,{channelCount:y.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:y.channelCount}));const h=await Promise.all(Array.from(o.parameters.values()).map((async e=>{const t=i(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:e.value});return await p(l,e,t.offset),t}))),g=r(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,e+t)});for(let e=0;e<y.numberOfInputs;e+=1){u[e].connect(c[e]);for(let t=0;t<y.channelCount;t+=1)c[e].connect(g,t,e*y.channelCount+t)}for(const[t,n]of h.entries())n.connect(g,0,e+t),n.start(0);return g.connect(l.destination),await Promise.all(u.map((e=>f(o,l,e)))),m(l)};x=UQ(o,0===n?null:await l(),w,y,I,b,u)}const e=await x,t=n(w,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[l,c,h]=S;null!==e&&(t.buffer=e,t.start(0)),t.connect(l);for(let n=0,r=0;n<o.numberOfOutputs;n+=1){const e=c[n];for(let t=0;t<I[n];t+=1)l.connect(e,r+t,t);r+=I[n]}return h}if(C)for(const[t,n]of o.parameters.entries())await e(w,n,k.parameters.get(t));else for(const[e,t]of o.parameters.entries())await p(w,t,k.parameters.get(e));return await f(o,w,k),k})(w,k)}}})(kJ,W0,SJ,FJ,gZ,VJ,vZ,U0,G0,T0,TQ,uJ,tJ,CJ,QZ,t0),Y0=(e=>t=>e.get(t))(N0),Q0=(e=>(t,n)=>{e.set(t,n)})(j0),Z0=_0?((e,t,n,r,s,i,a,o,l,u,c,h,d,p)=>class extends t{constructor(t,p,f){var m;const g=o(t),y=l(g),b=c({...LQ,...f});d(b);const v=BY.get(g),x=null===v||void 0===v?void 0:v.get(p),w=y||"closed"!==g.state?g:null!==(m=a(g))&&void 0!==m?m:g,k=s(w,y?null:t.baseLatency,u,p,x,b);super(t,!0,k,y?r(p,b,x):null);const S=[];k.parameters.forEach(((e,t)=>{const r=n(this,y,e);S.push([t,r])})),this._nativeAudioWorkletNode=k,this._onprocessorerror=null,this._parameters=new zQ(S),y&&e(g,this);const{activeInputs:C}=i(this);h(k,C)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(e){const t="function"===typeof e?p(this,e):null;this._nativeAudioWorkletNode.onprocessorerror=t;const n=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=null!==n&&n===t?e:n}get parameters(){return null===this._parameters?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}})(V0,cJ,_J,X0,K0,hQ,Y0,JZ,nJ,uJ,(e=>({...e,outputChannelCount:void 0!==e.outputChannelCount?e.outputChannelCount:1===e.numberOfInputs&&1===e.numberOfOutputs?[e.channelCount]:Array.from({length:e.numberOfOutputs},(()=>1))})),Q0,(e=>{const{port1:t,port2:n}=new MessageChannel;try{t.postMessage(e)}finally{t.close(),n.close()}}),LZ):void 0,J0=(((e,t,n,r,s)=>{})(eZ,SZ,EZ,o0,iJ),((e,t)=>(n,r,s)=>{if(null===t)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(n,r,s)}catch(Q3){if("SyntaxError"===Q3.name)throw e();throw Q3}})(SZ,tJ)),e1=((e,t,n,r,s,i,a,o)=>(l,u)=>n(l).render(l,u).then((()=>Promise.all(Array.from(r(u)).map((e=>n(e).render(e,u)))))).then((()=>s(u))).then((n=>("function"!==typeof n.copyFromChannel?(a(n),iQ(n)):t(i,(()=>i(n)))||o(n),e.add(n),n))))(pJ,jZ,YZ,B0,t0,rQ,yJ,bJ),t1=(((e,t,n,r,s)=>{})(jZ,eZ,J0,o0,e1),((e,t,n,r,s)=>class extends e{constructor(e,n,s){let i;if("number"===typeof e&&void 0!==n&&void 0!==s)i={length:n,numberOfChannels:e,sampleRate:s};else{if("object"!==typeof e)throw new Error("The given parameters are not valid.");i=e}const{length:a,numberOfChannels:o,sampleRate:l}={...CZ,...i},u=r(o,a,l);t(iZ,(()=>iZ(u)))||u.addEventListener("statechange",(()=>{let e=0;const t=n=>{"running"===this._state&&(e>0?(u.removeEventListener("statechange",t),n.stopImmediatePropagation(),this._waitForThePromiseToSettle(n)):e+=1)};return t})()),super(u,o),this._length=a,this._nativeOfflineAudioContext=u,this._state=null}get length(){return void 0===this._nativeOfflineAudioContext.length?this._length:this._nativeOfflineAudioContext.length}get state(){return null===this._state?this._nativeOfflineAudioContext.state:this._state}startRendering(){return"running"===this._state?Promise.reject(n()):(this._state="running",s(this.destination,this._nativeOfflineAudioContext).finally((()=>{this._state=null,fQ(this)})))}_waitForThePromiseToSettle(e){null===this._state?this._nativeOfflineAudioContext.dispatchEvent(e):setTimeout((()=>this._waitForThePromiseToSettle(e)))}})(O0,jZ,eZ,J0,e1)),n1=((e,t)=>n=>{const r=e.get(n);return t(r)||t(n)})(PY,aJ),r1=((e,t)=>n=>e.has(n)||t(n))(DY,oJ),s1=((e,t)=>n=>e.has(n)||t(n))(MY,lJ),i1=((e,t)=>n=>{const r=e.get(n);return t(r)||t(n)})(PY,nJ);function a1(e){return void 0===e}function o1(e){return void 0!==e}function l1(e){return"number"===typeof e}function u1(e){return"[object Object]"===Object.prototype.toString.call(e)&&e.constructor===Object}function c1(e){return"boolean"===typeof e}function h1(e){return Array.isArray(e)}function d1(e){return"string"===typeof e}function p1(e){return d1(e)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(e)}function f1(e,t){if(!e)throw new Error(t)}function m1(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1/0;if(!(t<=e&&e<=n))throw new RangeError(`Value must be within [${t}, ${n}], got: ${e}`)}function g1(e){e.isOffline||"running"===e.state||w1('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let y1=!1,b1=!1;function v1(e){y1=e}let x1=console;function w1(){x1.warn(...arguments)}const k1="object"===typeof self?self:null,S1=k1&&(k1.hasOwnProperty("AudioContext")||k1.hasOwnProperty("webkitAudioContext"));function C1(e,t,n,r){var s,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(a=(i<3?s(a):i>3?s(t,n,a):s(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a}function I1(e,t,n,r){return new(n||(n=Promise))((function(s,i){function a(e){try{l(r.next(e))}catch(t){i(t)}}function o(e){try{l(r.throw(e))}catch(t){i(t)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,o)}l((r=r.apply(e,t||[])).next())}))}Object.create;Object.create;"function"===typeof SuppressedError&&SuppressedError;class _1{constructor(e,t,n,r){this._callback=e,this._type=t,this._minimumUpdateInterval=Math.max(128/(r||44100),.001),this.updateInterval=n,this._createClock()}_createWorker(){const e=new Blob([`\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(1e3*this._updateInterval).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`],{type:"text/javascript"}),t=URL.createObjectURL(e),n=new Worker(t);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout((()=>{this._createTimeout(),this._callback()}),1e3*this._updateInterval)}_createClock(){if("worker"===this._type)try{this._createWorker()}catch(e){this._type="timeout",this._createClock()}else"timeout"===this._type&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(e){var t;this._updateInterval=Math.max(e,this._minimumUpdateInterval),"worker"===this._type&&(null===(t=this._worker)||void 0===t||t.postMessage(1e3*this._updateInterval))}get type(){return this._type}set type(e){this._disposeClock(),this._type=e,this._createClock()}dispose(){this._disposeClock()}}function T1(e){return s1(e)}function N1(e){return r1(e)}function E1(e){return i1(e)}function $1(e){return n1(e)}function A1(e,t){return"value"===e||T1(t)||N1(t)||function(e){return e instanceof vJ}(t)}function R1(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];if(!n.length)return e;const s=n.shift();if(u1(e)&&u1(s))for(const i in s)A1(i,s[i])?e[i]=s[i]:u1(s[i])?(e[i]||Object.assign(e,{[i]:{}}),R1(e[i],s[i])):Object.assign(e,{[i]:s[i]});return R1(e,...n)}function O1(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],r=arguments.length>3?arguments[3]:void 0;const s={},i=Array.from(t);if(u1(i[0])&&r&&!Reflect.has(i[0],r)){Object.keys(i[0]).some((t=>Reflect.has(e,t)))||(R1(s,{[r]:i[0]}),n.splice(n.indexOf(r),1),i.shift())}if(1===i.length&&u1(i[0]))R1(s,i[0]);else for(let a=0;a<n.length;a++)o1(i[a])&&(s[n[a]]=i[a]);return R1(e,s)}function D1(e,t){return a1(e)?t:e}function F1(e,t){return t.forEach((t=>{Reflect.has(e,t)&&delete e[t]})),e}class M1{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(){if(this.debug||k1&&this.toString()===k1.TONE_DEBUG_CLASS){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];!function(){x1.log(...arguments)}(this,...t)}}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}M1.version=$Y;const P1=1e-6;function z1(e,t){return e>t+P1}function L1(e,t){return z1(e,t)||V1(e,t)}function B1(e,t){return e+P1<t}function V1(e,t){return Math.abs(e-t)<P1}function W1(e,t,n){return Math.max(Math.min(e,n),t)}class U1 extends M1{constructor(){super(),this.name="Timeline",this._timeline=[];const e=O1(U1.getDefaults(),arguments,["memory"]);this.memory=e.memory,this.increasing=e.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(e){if(f1(Reflect.has(e,"time"),"Timeline: events must have a time attribute"),e.time=e.time.valueOf(),this.increasing&&this.length){const t=this._timeline[this.length-1];f1(L1(e.time,t.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(e)}else{const t=this._search(e.time);this._timeline.splice(t+1,0,e)}if(this.length>this.memory){const e=this.length-this.memory;this._timeline.splice(0,e)}return this}remove(e){const t=this._timeline.indexOf(e);return-1!==t&&this._timeline.splice(t,1),this}get(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"time";const n=this._search(e,t);return-1!==n?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"time";const n=this._search(e,t);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(e){const t=this._timeline.length;if(t>0&&this._timeline[t-1].time<e)return this._timeline[t-1];const n=this._search(e);return n-1>=0?this._timeline[n-1]:null}cancel(e){if(this._timeline.length>1){let t=this._search(e);if(t>=0)if(V1(this._timeline[t].time,e)){for(let n=t;n>=0&&V1(this._timeline[n].time,e);n--)t=n;this._timeline=this._timeline.slice(0,t)}else this._timeline=this._timeline.slice(0,t+1);else this._timeline=[]}else 1===this._timeline.length&&L1(this._timeline[0].time,e)&&(this._timeline=[]);return this}cancelBefore(e){const t=this._search(e);return t>=0&&(this._timeline=this._timeline.slice(t+1)),this}previousEvent(e){const t=this._timeline.indexOf(e);return t>0?this._timeline[t-1]:null}_search(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"time";if(0===this._timeline.length)return-1;let n=0;const r=this._timeline.length;let s=r;if(r>0&&this._timeline[r-1][t]<=e)return r-1;for(;n<s;){let r=Math.floor(n+(s-n)/2);const i=this._timeline[r],a=this._timeline[r+1];if(V1(i[t],e)){for(let n=r;n<this._timeline.length;n++){if(!V1(this._timeline[n][t],e))break;r=n}return r}if(B1(i[t],e)&&z1(a[t],e))return r;z1(i[t],e)?s=r:n=r+1}return-1}_iterate(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this._timeline.length-1;this._timeline.slice(t,n+1).forEach(e)}forEach(e){return this._iterate(e),this}forEachBefore(e,t){const n=this._search(e);return-1!==n&&this._iterate(t,0,n),this}forEachAfter(e,t){const n=this._search(e);return this._iterate(t,n+1),this}forEachBetween(e,t,n){let r=this._search(e),s=this._search(t);return-1!==r&&-1!==s?(this._timeline[r].time!==e&&(r+=1),this._timeline[s].time===t&&(s-=1),this._iterate(n,r,s)):-1===r&&this._iterate(n,0,s),this}forEachFrom(e,t){let n=this._search(e);for(;n>=0&&this._timeline[n].time>=e;)n--;return this._iterate(t,n+1),this}forEachAtTime(e,t){const n=this._search(e);if(-1!==n&&V1(this._timeline[n].time,e)){let r=n;for(let t=n;t>=0&&V1(this._timeline[t].time,e);t--)r=t;this._iterate((e=>{t(e)}),r,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const G1=[];function j1(e){G1.push(e)}const H1=[];function q1(e){H1.push(e)}class K1 extends M1{constructor(){super(...arguments),this.name="Emitter"}on(e,t){return e.split(/\W+/).forEach((e=>{a1(this._events)&&(this._events={}),this._events.hasOwnProperty(e)||(this._events[e]=[]),this._events[e].push(t)})),this}once(e,t){var n=this;const r=function(){t(...arguments),n.off(e,r)};return this.on(e,r),this}off(e,t){return e.split(/\W+/).forEach((e=>{if(a1(this._events)&&(this._events={}),this._events.hasOwnProperty(e))if(a1(t))this._events[e]=[];else{const n=this._events[e];for(let e=n.length-1;e>=0;e--)n[e]===t&&n.splice(e,1)}})),this}emit(e){if(this._events&&this._events.hasOwnProperty(e)){const s=this._events[e].slice(0);for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(let e=0,t=s.length;e<t;e++)s[e].apply(this,n)}return this}static mixin(e){["on","once","off","emit"].forEach((t=>{const n=Object.getOwnPropertyDescriptor(K1.prototype,t);Object.defineProperty(e.prototype,t,n)}))}dispose(){return super.dispose(),this._events=void 0,this}}class X1 extends K1{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Y1 extends X1{constructor(){var e,t;super(),this.name="Context",this._constants=new Map,this._timeouts=new U1,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const n=O1(Y1.getDefaults(),arguments,["context"]);n.context?(this._context=n.context,this._latencyHint=(null===(e=arguments[0])||void 0===e?void 0:e.latencyHint)||""):(this._context=function(e){return new L0(e)}({latencyHint:n.latencyHint}),this._latencyHint=n.latencyHint),this._ticker=new _1(this.emit.bind(this,"tick"),n.clockSource,n.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[(null===(t=arguments[0])||void 0===t?void 0:t.hasOwnProperty("updateInterval"))?"_lookAhead":"lookAhead"]=n.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){var e;return this._initialized||(e=this,G1.forEach((t=>t(e))),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(e,t,n){return this._context.createBuffer(e,t,n)}createChannelMerger(e){return this._context.createChannelMerger(e)}createChannelSplitter(e){return this._context.createChannelSplitter(e)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(e){return this._context.createDelay(e)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(e,t){return this._context.createIIRFilter(e,t)}createPanner(){return this._context.createPanner()}createPeriodicWave(e,t,n){return this._context.createPeriodicWave(e,t,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(e){f1($1(this._context),"Not available if OfflineAudioContext");return this._context.createMediaStreamSource(e)}createMediaElementSource(e){f1($1(this._context),"Not available if OfflineAudioContext");return this._context.createMediaElementSource(e)}createMediaStreamDestination(){f1($1(this._context),"Not available if OfflineAudioContext");return this._context.createMediaStreamDestination()}decodeAudioData(e){return this._context.decodeAudioData(e)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(e){f1(!this._initialized,"The listener cannot be set after initialization."),this._listener=e}get transport(){return this.initialize(),this._transport}set transport(e){f1(!this._initialized,"The transport cannot be set after initialization."),this._transport=e}get draw(){return this.initialize(),this._draw}set draw(e){f1(!this._initialized,"Draw cannot be set after initialization."),this._draw=e}get destination(){return this.initialize(),this._destination}set destination(e){f1(!this._initialized,"The destination cannot be set after initialization."),this._destination=e}createAudioWorkletNode(e,t){return function(e,t,n){return f1(o1(Z0),"AudioWorkletNode only works in a secure context (https or localhost)"),new(e instanceof(null===k1||void 0===k1?void 0:k1.BaseAudioContext)?null===k1||void 0===k1?void 0:k1.AudioWorkletNode:Z0)(e,t,n)}(this.rawContext,e,t)}addAudioWorkletModule(e){return I1(this,void 0,void 0,(function*(){f1(o1(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(e)),yield this._workletPromise}))}workletsAreReady(){return I1(this,void 0,void 0,(function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()}))}get updateInterval(){return this._ticker.updateInterval}set updateInterval(e){this._ticker.updateInterval=e}get clockSource(){return this._ticker.type}set clockSource(e){this._ticker.type=e}get lookAhead(){return this._lookAhead}set lookAhead(e){this._lookAhead=e,this.updateInterval=e?e/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return $1(this._context)?this._context.resume():Promise.resolve()}close(){return I1(this,void 0,void 0,(function*(){var e;$1(this._context)&&"closed"!==this.state&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&(e=this,H1.forEach((t=>t(e))))}))}getConstant(e){if(this._constants.has(e))return this._constants.get(e);{const t=this._context.createBuffer(1,128,this._context.sampleRate),n=t.getChannelData(0);for(let s=0;s<n.length;s++)n[s]=e;const r=this._context.createBufferSource();return r.channelCount=1,r.channelCountMode="explicit",r.buffer=t,r.loop=!0,r.start(0),this._constants.set(e,r),r}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map((e=>this._constants[e].disconnect())),this.close(),this}_timeoutLoop(){const e=this.now();let t=this._timeouts.peek();for(;this._timeouts.length&&t&&t.time<=e;)t.callback(),this._timeouts.shift(),t=this._timeouts.peek()}setTimeout(e,t){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:e,id:this._timeoutIds,time:n+t}),this._timeoutIds}clearTimeout(e){return this._timeouts.forEach((t=>{t.id===e&&this._timeouts.remove(t)})),this}clearInterval(e){return this.clearTimeout(e)}setInterval(e,t){const n=++this._timeoutIds,r=()=>{const s=this.now();this._timeouts.add({callback:()=>{e(),r()},id:n,time:s+t})};return r(),n}}function Q1(e,t){h1(t)?t.forEach((t=>Q1(e,t))):Object.defineProperty(e,t,{enumerable:!0,writable:!1})}function Z1(e,t){h1(t)?t.forEach((t=>Z1(e,t))):Object.defineProperty(e,t,{writable:!0})}const J1=()=>{};class e2 extends M1{constructor(){super(),this.name="ToneAudioBuffer",this.onload=J1;const e=O1(e2.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=e.reverse,this.onload=e.onload,d1(e.url)?this.load(e.url).catch(e.onerror):e.url&&this.set(e.url)}static getDefaults(){return{onerror:J1,onload:J1,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:s2().sampleRate}set(e){return e instanceof e2?e.loaded?this._buffer=e.get():e.onload=()=>{this.set(e),this.onload(this)}:this._buffer=e,this._reversed&&this._reverse(),this}get(){return this._buffer}load(e){return I1(this,void 0,void 0,(function*(){const t=e2.load(e).then((e=>{this.set(e),this.onload(this)}));e2.downloads.push(t);try{yield t}finally{const e=e2.downloads.indexOf(t);e2.downloads.splice(e,1)}return this}))}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(e){const t=h1(e)&&e[0].length>0,n=t?e.length:1,r=t?e[0].length:e.length,s=s2(),i=s.createBuffer(n,r,s.sampleRate),a=t||1!==n?e:[e];for(let o=0;o<n;o++)i.copyToChannel(a[o],o);return this._buffer=i,this}toMono(e){if(l1(e))this.fromArray(this.toArray(e));else{let e=new Float32Array(this.length);const t=this.numberOfChannels;for(let n=0;n<t;n++){const t=this.toArray(n);for(let n=0;n<t.length;n++)e[n]+=t[n]}e=e.map((e=>e/t)),this.fromArray(e)}return this}toArray(e){if(l1(e))return this.getChannelData(e);if(1===this.numberOfChannels)return this.toArray(0);{const e=[];for(let t=0;t<this.numberOfChannels;t++)e[t]=this.getChannelData(t);return e}}getChannelData(e){return this._buffer?this._buffer.getChannelData(e):new Float32Array(0)}slice(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.duration;f1(this.loaded,"Buffer is not loaded");const n=Math.floor(e*this.sampleRate),r=Math.floor(t*this.sampleRate);f1(n<r,"The start time must be less than the end time");const s=r-n,i=s2().createBuffer(this.numberOfChannels,s,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)i.copyToChannel(this.getChannelData(a).subarray(n,r),a);return new e2(i)}_reverse(){if(this.loaded)for(let e=0;e<this.numberOfChannels;e++)this.getChannelData(e).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(e){this._reversed!==e&&(this._reversed=e,this._reverse())}static fromArray(e){return(new e2).fromArray(e)}static fromUrl(e){return I1(this,void 0,void 0,(function*(){const t=new e2;return yield t.load(e)}))}static load(e){return I1(this,void 0,void 0,(function*(){const t=e.match(/\[([^\]\[]+\|.+)\]$/);if(t){const n=t[1].split("|");let r=n[0];for(const e of n)if(e2.supportsType(e)){r=e;break}e=e.replace(t[0],r)}const n=""===e2.baseUrl||e2.baseUrl.endsWith("/")?e2.baseUrl:e2.baseUrl+"/",r=document.createElement("a");r.href=n+e,r.pathname=(r.pathname+r.hash).split("/").map(encodeURIComponent).join("/");const s=yield fetch(r.href);if(!s.ok)throw new Error(`could not load url: ${e}`);const i=yield s.arrayBuffer();return yield s2().decodeAudioData(i)}))}static supportsType(e){const t=e.split("."),n=t[t.length-1];return""!==document.createElement("audio").canPlayType("audio/"+n)}static loaded(){return I1(this,void 0,void 0,(function*(){for(yield Promise.resolve();e2.downloads.length;)yield e2.downloads[0]}))}}e2.baseUrl="",e2.downloads=[];class t2 extends Y1{constructor(){var e,t,n;super({clockSource:"offline",context:E1(arguments[0])?arguments[0]:(e=arguments[0],t=arguments[1]*arguments[2],n=arguments[2],new t1(e,t,n)),lookAhead:0,updateInterval:E1(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=E1(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(e){return I1(this,void 0,void 0,(function*(){let t=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,t++;const n=Math.floor(this.sampleRate/128);e&&t%n===0&&(yield new Promise((e=>setTimeout(e,1))))}}))}render(){return I1(this,arguments,void 0,(function(){var e=this;let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return function*(){yield e.workletsAreReady(),yield e._renderClock(t);const n=yield e._context.startRendering();return new e2(n)}()}))}close(){return Promise.resolve()}}const n2=new class extends X1{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(e,t,n){return{}}createChannelMerger(e){return{}}createChannelSplitter(e){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(e){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(e,t){return{}}createPanner(){return{}}createPeriodicWave(e,t,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(e){return{}}createMediaElementSource(e){return{}}createMediaStreamDestination(){return{}}decodeAudioData(e){return Promise.resolve({})}createAudioWorkletNode(e,t){return{}}get rawContext(){return{}}addAudioWorkletModule(e){return I1(this,void 0,void 0,(function*(){return Promise.resolve()}))}resume(){return Promise.resolve()}setTimeout(e,t){return 0}clearTimeout(e){return this}setInterval(e,t){return 0}clearInterval(e){return this}getConstant(e){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(e){}get destination(){return{}}set destination(e){}now(){return 0}immediate(){return 0}};let r2=n2;function s2(){return r2===n2&&S1&&function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];t&&r2.dispose();r2=$1(e)?new Y1(e):E1(e)?new t2(e):e}(new Y1),r2}if(k1&&!k1.TONE_SILENCE_LOGGING){let e="v";0;const t=` * Tone.js ${e}${$Y} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function i2(e){return Math.pow(10,e/20)}function a2(e){return Math.log(e)/Math.LN10*20}function o2(e){return Math.pow(2,e/12)}let l2=440;function u2(e){return Math.round(c2(e))}function c2(e){return 69+12*Math.log2(e/l2)}function h2(e){return l2*Math.pow(2,(e-69)/12)}class d2 extends M1{constructor(e,t,n){super(),this.defaultUnits="s",this._val=t,this._units=n,this.context=e,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:e=>this._frequencyToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:e=>this._ticksToUnits(parseInt(e,10)),regexp:/^(\d+)i$/i},m:{method:e=>this._beatsToUnits(parseInt(e,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(e,t)=>{const n=parseInt(e,10),r="."===t?1.5:1;return 1===n?this._beatsToUnits(this._getTimeSignature())*r:this._beatsToUnits(4/n)*r},regexp:/^(\d+)n(\.?)$/i},number:{method:e=>this._expressions[this.defaultUnits].method.call(this,e),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:e=>this._secondsToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:e=>parseInt(e,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:e=>{const t=parseInt(e,10);return this._beatsToUnits(8/(3*Math.floor(t)))},regexp:/^(\d+)t$/i},tr:{method:(e,t,n)=>{let r=0;return e&&"0"!==e&&(r+=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&"0"!==t&&(r+=this._beatsToUnits(parseFloat(t))),n&&"0"!==n&&(r+=this._beatsToUnits(parseFloat(n)/4)),r},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof d2&&this.fromType(this._val),a1(this._val))return this._noArg();if(d1(this._val)&&a1(this._units)){for(const e in this._expressions)if(this._expressions[e].regexp.test(this._val.trim())){this._units=e;break}}else if(u1(this._val)){let e=0;for(const t in this._val)if(o1(this._val[t])){const n=this._val[t];e+=new this.constructor(this.context,t).valueOf()*n}return e}if(o1(this._units)){const e=this._expressions[this._units],t=this._val.toString().trim().match(e.regexp);return t?e.method.apply(this,t.slice(1)):e.method.call(this,this._val)}return d1(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(e){return 1/e}_beatsToUnits(e){return 60/this._getBpm()*e}_secondsToUnits(e){return e}_ticksToUnits(e){return e*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(e){switch(this._units=void 0,this.defaultUnits){case"s":this._val=e.toSeconds();break;case"i":this._val=e.toTicks();break;case"hz":this._val=e.toFrequency();break;case"midi":this._val=e.toMidi()}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return 1e3*this.toSeconds()}}class p2 extends d2{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:e=>this._now()+new this.constructor(this.context,e).valueOf(),regexp:/^\+(.+)/},quantize:{method:e=>{const t=new p2(this.context,e).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(t))},regexp:/^@(.+)/}})}quantize(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;const n=new this.constructor(this.context,e).valueOf(),r=this.valueOf();return r+(Math.round(r/n)*n-r)*t}toNotation(){const e=this.toSeconds(),t=["1m"];for(let s=1;s<9;s++){const e=Math.pow(2,s);t.push(e+"n."),t.push(e+"n"),t.push(e+"t")}t.push("0");let n=t[0],r=new p2(this.context,t[0]).toSeconds();return t.forEach((t=>{const s=new p2(this.context,t).toSeconds();Math.abs(s-e)<Math.abs(r-e)&&(n=t,r=s)})),n}toBarsBeatsSixteenths(){const e=this._beatsToUnits(1);let t=this.valueOf()/e;t=parseFloat(t.toFixed(4));const n=Math.floor(t/this._getTimeSignature());let r=t%1*4;t=Math.floor(t)%this._getTimeSignature();const s=r.toString();s.length>3&&(r=parseFloat(parseFloat(s).toFixed(3)));return[n,t,r].join(":")}toTicks(){const e=this._beatsToUnits(1);return this.valueOf()/e*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return u2(this.toFrequency())}_now(){return this.context.now()}}class f2 extends p2{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return l2}static set A4(e){!function(e){l2=e}(e)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(e){return"midi"===this.defaultUnits?e:f2.mtof(e)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(e,t){const n=m2[e.toLowerCase()]+12*(parseInt(t,10)+1);return"midi"===this.defaultUnits?n:f2.mtof(n)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(e,t,n){let r=1;return e&&"0"!==e&&(r*=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&"0"!==t&&(r*=this._beatsToUnits(parseFloat(t))),n&&"0"!==n&&(r*=this._beatsToUnits(parseFloat(n)/4)),r}}})}transpose(e){return new f2(this.context,this.valueOf()*o2(e))}harmonize(e){return e.map((e=>this.transpose(e)))}toMidi(){return u2(this.valueOf())}toNote(){const e=this.toFrequency(),t=Math.log2(e/f2.A4);let n=Math.round(12*t)+57;const r=Math.floor(n/12);r<0&&(n+=-12*r);return g2[n%12]+r.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.floor(t*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(e){return e}_ticksToUnits(e){return 1/(60*e/(this._getBpm()*this._getPPQ()))}_beatsToUnits(e){return 1/super._beatsToUnits(e)}_secondsToUnits(e){return 1/e}static mtof(e){return h2(e)}static ftom(e){return u2(e)}}const m2={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},g2=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class y2 extends p2{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class b2 extends M1{constructor(){super();const e=O1(b2.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=e.context}static getDefaults(){return{context:s2()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(e){return function(e){a1(e)&&y1&&!b1&&(b1=!0,w1("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}(e),new p2(this.context,e).toSeconds()}toFrequency(e){return new f2(this.context,e).toFrequency()}toTicks(e){return new y2(this.context,e).toTicks()}_getPartialProperties(e){const t=this.get();return Object.keys(t).forEach((n=>{a1(e[n])&&delete t[n]})),t}get(){const e=this.constructor.getDefaults();return Object.keys(e).forEach((t=>{if(Reflect.has(this,t)){const n=this[t];o1(n)&&o1(n.value)&&o1(n.setValueAtTime)?e[t]=n.value:n instanceof b2?e[t]=n._getPartialProperties(e[t]):h1(n)||l1(n)||d1(n)||c1(n)?e[t]=n:delete e[t]}})),e}set(e){return Object.keys(e).forEach((t=>{Reflect.has(this,t)&&o1(this[t])&&(this[t]&&o1(this[t].value)&&o1(this[t].setValueAtTime)?this[t].value!==e[t]&&(this[t].value=e[t]):this[t]instanceof b2?this[t].set(e[t]):this[t]=e[t])})),this}}class v2 extends U1{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"stopped";super(),this.name="StateTimeline",this._initial=e,this.setStateAtTime(this._initial,0)}getValueAtTime(e){const t=this.get(e);return null!==t?t.state:this._initial}setStateAtTime(e,t,n){return m1(t,0),this.add(Object.assign({},n,{state:e,time:t})),this}getLastState(e,t){for(let n=this._search(t);n>=0;n--){const t=this._timeline[n];if(t.state===e)return t}}getNextState(e,t){const n=this._search(t);if(-1!==n)for(let r=n;r<this._timeline.length;r++){const t=this._timeline[r];if(t.state===e)return t}}}class x2 extends b2{constructor(){const e=O1(x2.getDefaults(),arguments,["param","units","convert"]);for(super(e),this.name="Param",this.overridden=!1,this._minOutput=1e-7,f1(o1(e.param)&&(T1(e.param)||e.param instanceof x2),"param must be an AudioParam");!T1(e.param);)e.param=e.param._param;this._swappable=!!o1(e.swappable)&&e.swappable,this._swappable?(this.input=this.context.createGain(),this._param=e.param,this.input.connect(this._param)):this._param=this.input=e.param,this._events=new U1(1e3),this._initialValue=this._param.defaultValue,this.units=e.units,this.convert=e.convert,this._minValue=e.minValue,this._maxValue=e.maxValue,o1(e.value)&&e.value!==this._toType(this._initialValue)&&this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(b2.getDefaults(),{convert:!0,units:"number"})}get value(){const e=this.now();return this.getValueAtTime(e)}set value(e){this.cancelScheduledValues(this.now()),this.setValueAtTime(e,this.now())}get minValue(){return o1(this._minValue)?this._minValue:"time"===this.units||"frequency"===this.units||"normalRange"===this.units||"positive"===this.units||"transportTime"===this.units||"ticks"===this.units||"bpm"===this.units||"hertz"===this.units||"samples"===this.units?0:"audioRange"===this.units?-1:"decibels"===this.units?-1/0:this._param.minValue}get maxValue(){return o1(this._maxValue)?this._maxValue:"normalRange"===this.units||"audioRange"===this.units?1:this._param.maxValue}_is(e,t){return this.units===t}_assertRange(e){return o1(this.maxValue)&&o1(this.minValue)&&m1(e,this._fromType(this.minValue),this._fromType(this.maxValue)),e}_fromType(e){return this.convert&&!this.overridden?this._is(e,"time")?this.toSeconds(e):this._is(e,"decibels")?i2(e):this._is(e,"frequency")?this.toFrequency(e):e:this.overridden?0:e}_toType(e){return this.convert&&"decibels"===this.units?a2(e):e}setValueAtTime(e,t){const n=this.toSeconds(t),r=this._fromType(e);return f1(isFinite(r)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(r),this.log(this.units,"setValueAtTime",e,n),this._events.add({time:n,type:"setValueAtTime",value:r}),this._param.setValueAtTime(r,n),this}getValueAtTime(e){const t=Math.max(this.toSeconds(e),0),n=this._events.getAfter(t),r=this._events.get(t);let s=this._initialValue;if(null===r)s=this._initialValue;else if("setTargetAtTime"!==r.type||null!==n&&"setValueAtTime"!==n.type)if(null===n)s=r.value;else if("linearRampToValueAtTime"===n.type||"exponentialRampToValueAtTime"===n.type){let e=r.value;if("setTargetAtTime"===r.type){const t=this._events.getBefore(r.time);e=null===t?this._initialValue:t.value}s="linearRampToValueAtTime"===n.type?this._linearInterpolate(r.time,e,n.time,n.value,t):this._exponentialInterpolate(r.time,e,n.time,n.value,t)}else s=r.value;else{const e=this._events.getBefore(r.time);let n;n=null===e?this._initialValue:e.value,"setTargetAtTime"===r.type&&(s=this._exponentialApproach(r.time,n,r.value,r.constant,t))}return this._toType(s)}setRampPoint(e){e=this.toSeconds(e);let t=this.getValueAtTime(e);return this.cancelAndHoldAtTime(e),0===this._fromType(t)&&(t=this._toType(this._minOutput)),this.setValueAtTime(t,e),this}linearRampToValueAtTime(e,t){const n=this._fromType(e),r=this.toSeconds(t);return f1(isFinite(n)&&isFinite(r),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(n),this._events.add({time:r,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",e,r),this._param.linearRampToValueAtTime(n,r),this}exponentialRampToValueAtTime(e,t){let n=this._fromType(e);n=V1(n,0)?this._minOutput:n,this._assertRange(n);const r=this.toSeconds(t);return f1(isFinite(n)&&isFinite(r),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({time:r,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",e,r),this._param.exponentialRampToValueAtTime(n,r),this}exponentialRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(e,n+this.toSeconds(t)),this}linearRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(e,n+this.toSeconds(t)),this}targetRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(e,n,t),this}exponentialApproachValueAtTime(e,t,n){t=this.toSeconds(t),n=this.toSeconds(n);const r=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(e,t,r),this.cancelAndHoldAtTime(t+.9*n),this.linearRampToValueAtTime(e,t+n),this}setTargetAtTime(e,t,n){const r=this._fromType(e);f1(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const s=this.toSeconds(t);return this._assertRange(r),f1(isFinite(r)&&isFinite(s),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({constant:n,time:s,type:"setTargetAtTime",value:r}),this.log(this.units,"setTargetAtTime",e,s,n),this._param.setTargetAtTime(r,s,n),this}setValueCurveAtTime(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;n=this.toSeconds(n),t=this.toSeconds(t);const s=this._fromType(e[0])*r;this.setValueAtTime(this._toType(s),t);const i=n/(e.length-1);for(let a=1;a<e.length;a++){const n=this._fromType(e[a])*r;this.linearRampToValueAtTime(this._toType(n),t+a*i)}return this}cancelScheduledValues(e){const t=this.toSeconds(e);return f1(isFinite(t),`Invalid argument to cancelScheduledValues: ${JSON.stringify(e)}`),this._events.cancel(t),this._param.cancelScheduledValues(t),this.log(this.units,"cancelScheduledValues",t),this}cancelAndHoldAtTime(e){const t=this.toSeconds(e),n=this._fromType(this.getValueAtTime(t));f1(isFinite(t),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(e)}`),this.log(this.units,"cancelAndHoldAtTime",t,"value="+n);const r=this._events.get(t),s=this._events.getAfter(t);return r&&V1(r.time,t)?s?(this._param.cancelScheduledValues(s.time),this._events.cancel(s.time)):(this._param.cancelAndHoldAtTime(t),this._events.cancel(t+this.sampleTime)):s&&(this._param.cancelScheduledValues(s.time),this._events.cancel(s.time),"linearRampToValueAtTime"===s.type?this.linearRampToValueAtTime(this._toType(n),t):"exponentialRampToValueAtTime"===s.type&&this.exponentialRampToValueAtTime(this._toType(n),t)),this._events.add({time:t,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,t),this}rampTo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1,n=arguments.length>2?arguments[2]:void 0;return"frequency"===this.units||"bpm"===this.units||"decibels"===this.units?this.exponentialRampTo(e,t,n):this.linearRampTo(e,t,n),this}apply(e){const t=this.context.currentTime;e.setValueAtTime(this.getValueAtTime(t),t);const n=this._events.get(t);if(n&&"setTargetAtTime"===n.type){const r=this._events.getAfter(n.time),s=r?r.time:t+2,i=(s-t)/10;for(let n=t;n<s;n+=i)e.linearRampToValueAtTime(this.getValueAtTime(n),n)}return this._events.forEachAfter(this.context.currentTime,(t=>{"cancelScheduledValues"===t.type?e.cancelScheduledValues(t.time):"setTargetAtTime"===t.type?e.setTargetAtTime(t.value,t.time,t.constant):e[t.type](t.value,t.time)})),this}setParam(e){f1(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const t=this.input;return t.disconnect(this._param),this.apply(e),this._param=e,t.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(e,t,n,r,s){return n+(t-n)*Math.exp(-(s-e)/r)}_linearInterpolate(e,t,n,r,s){return t+(s-e)/(n-e)*(r-t)}_exponentialInterpolate(e,t,n,r,s){return t*Math.pow(r/t,(s-e)/(n-e))}}class w2 extends b2{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return o1(this.input)?T1(this.input)||this.input instanceof x2?1:this.input.numberOfInputs:0}get numberOfOutputs(){return o1(this.output)?this.output.numberOfOutputs:0}_isAudioNode(e){return o1(e)&&(e instanceof w2||N1(e))}_getInternalNodes(){const e=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&e.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&e.push(this.output),e}_setChannelProperties(e){this._getInternalNodes().forEach((t=>{t.channelCount=e.channelCount,t.channelCountMode=e.channelCountMode,t.channelInterpretation=e.channelInterpretation}))}_getChannelProperties(){const e=this._getInternalNodes();f1(e.length>0,"ToneAudioNode does not have any internal nodes");const t=e[0];return{channelCount:t.channelCount,channelCountMode:t.channelCountMode,channelInterpretation:t.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCount:e}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCountMode:e}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelInterpretation:e}))}connect(e){return S2(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return w1("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(e){return C2(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0),this}chain(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return k2(this,...t),this}fan(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.forEach((e=>this.connect(e))),this}dispose(){return super.dispose(),o1(this.input)&&(this.input instanceof w2?this.input.dispose():N1(this.input)&&this.input.disconnect()),o1(this.output)&&(this.output instanceof w2?this.output.dispose():N1(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function k2(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=t.shift();t.reduce(((e,t)=>(e instanceof w2?e.connect(t):N1(e)&&S2(e,t),t)),r)}function S2(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;for(f1(o1(e),"Cannot connect from undefined node"),f1(o1(t),"Cannot connect to undefined node"),(t instanceof w2||N1(t))&&f1(t.numberOfInputs>0,"Cannot connect to node with no inputs"),f1(e.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof w2||t instanceof x2;)o1(t.input)&&(t=t.input);for(;e instanceof w2;)o1(e.output)&&(e=e.output);T1(t)?e.connect(t,n):e.connect(t,n,r)}function C2(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(o1(t))for(;t instanceof w2;)t=t.input;for(;!N1(e);)o1(e.output)&&(e=e.output);T1(t)?e.disconnect(t,n):N1(t)?e.disconnect(t,n,r):e.disconnect()}class I2 extends w2{constructor(){const e=O1(I2.getDefaults(),arguments,["gain","units"]);super(e),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode,this.gain=new x2({context:this.context,convert:e.convert,param:this._gainNode.gain,units:e.units,value:e.gain,minValue:e.minValue,maxValue:e.maxValue}),Q1(this,"gain")}static getDefaults(){return Object.assign(w2.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class _2 extends w2{constructor(e){super(e),this.onended=J1,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new I2({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(e){const t=this.toSeconds(e);return-1!==this._startTime&&t>=this._startTime&&(-1===this._stopTime||t<=this._stopTime)?"started":"stopped"},this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut,this._curve=e.curve,this.onended=e.onended}static getDefaults(){return Object.assign(w2.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:J1})}_startGain(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;f1(-1===this._startTime,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=e+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,e),"linear"===this._curve?this._gainNode.gain.linearRampToValueAtTime(t,e+n):this._gainNode.gain.exponentialApproachValueAtTime(t,e,n)):this._gainNode.gain.setValueAtTime(t,e),this}stop(e){return this.log("stop",e),this._stopGain(this.toSeconds(e)),this}_stopGain(e){f1(-1!==this._startTime,"'start' must be called before 'stop'"),this.cancelStop();const t=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(e)+t,this._stopTime=Math.max(this._stopTime,this.now()),t>0?"linear"===this._curve?this._gainNode.gain.linearRampTo(0,t,e):this._gainNode.gain.targetRampTo(0,t,e):(this._gainNode.gain.cancelAndHoldAtTime(e),this._gainNode.gain.setValueAtTime(0,e)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout((()=>{const e="exponential"===this._curve?2*t:0;this._stopSource(this.now()+e),this._onended()}),this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==J1&&(this.onended(this),this.onended=J1,!this.context.isOffline)){const e=()=>this.dispose();"undefined"!==typeof window.requestIdleCallback?window.requestIdleCallback(e):setTimeout(e,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),f1(-1!==this._startTime,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=J1,this}}class T2 extends _2{constructor(){const e=O1(T2.getDefaults(),arguments,["offset"]);super(e),this.name="ToneConstantSource",this._source=this.context.createConstantSource(),S2(this._source,this._gainNode),this.offset=new x2({context:this.context,convert:e.convert,param:this._source.offset,units:e.units,value:e.offset,minValue:e.minValue,maxValue:e.maxValue})}static getDefaults(){return Object.assign(_2.getDefaults(),{convert:!0,offset:1,units:"number"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._source.start(t),this}_stopSource(e){this._source.stop(e)}dispose(){return super.dispose(),"started"===this.state&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class N2 extends w2{constructor(){const e=O1(N2.getDefaults(),arguments,["value","units"]);super(e),this.name="Signal",this.override=!0,this.output=this._constantSource=new T2({context:this.context,convert:e.convert,offset:e.value,units:e.units,minValue:e.minValue,maxValue:e.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(w2.getDefaults(),{convert:!0,units:"number",value:0})}connect(e){return E2(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(e,t){return this._param.setValueAtTime(e,t),this}getValueAtTime(e){return this._param.getValueAtTime(e)}setRampPoint(e){return this._param.setRampPoint(e),this}linearRampToValueAtTime(e,t){return this._param.linearRampToValueAtTime(e,t),this}exponentialRampToValueAtTime(e,t){return this._param.exponentialRampToValueAtTime(e,t),this}exponentialRampTo(e,t,n){return this._param.exponentialRampTo(e,t,n),this}linearRampTo(e,t,n){return this._param.linearRampTo(e,t,n),this}targetRampTo(e,t,n){return this._param.targetRampTo(e,t,n),this}exponentialApproachValueAtTime(e,t,n){return this._param.exponentialApproachValueAtTime(e,t,n),this}setTargetAtTime(e,t,n){return this._param.setTargetAtTime(e,t,n),this}setValueCurveAtTime(e,t,n,r){return this._param.setValueCurveAtTime(e,t,n,r),this}cancelScheduledValues(e){return this._param.cancelScheduledValues(e),this}cancelAndHoldAtTime(e){return this._param.cancelAndHoldAtTime(e),this}rampTo(e,t,n){return this._param.rampTo(e,t,n),this}get value(){return this._param.value}set value(e){this._param.value=e}get convert(){return this._param.convert}set convert(e){this._param.convert=e}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(e){this._param.overridden=e}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(e){return this._param.apply(e),this}}function E2(e,t,n,r){(t instanceof x2||T1(t)||t instanceof N2&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof N2&&(t.overridden=!0)),S2(e,t,n,r)}class $2 extends x2{constructor(){const e=O1($2.getDefaults(),arguments,["value"]);super(e),this.name="TickParam",this._events=new U1(1/0),this._multiplier=1,this._multiplier=e.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(e.value)}),this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(x2.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(e,t,n){t=this.toSeconds(t),this.setRampPoint(t);const r=this._fromType(e),s=this._events.get(t),i=Math.round(Math.max(1/n,1));for(let a=0;a<=i;a++){const e=n*a+t,i=this._exponentialApproach(s.time,s.value,r,n,e);this.linearRampToValueAtTime(this._toType(i),e)}return this}setValueAtTime(e,t){const n=this.toSeconds(t);super.setValueAtTime(e,t);const r=this._events.get(n),s=this._events.previousEvent(r),i=this._getTicksUntilEvent(s,n);return r.ticks=Math.max(i,0),this}linearRampToValueAtTime(e,t){const n=this.toSeconds(t);super.linearRampToValueAtTime(e,t);const r=this._events.get(n),s=this._events.previousEvent(r),i=this._getTicksUntilEvent(s,n);return r.ticks=Math.max(i,0),this}exponentialRampToValueAtTime(e,t){t=this.toSeconds(t);const n=this._fromType(e),r=this._events.get(t),s=Math.round(Math.max(10*(t-r.time),1)),i=(t-r.time)/s;for(let a=0;a<=s;a++){const e=i*a+r.time,s=this._exponentialInterpolate(r.time,r.value,t,n,e);this.linearRampToValueAtTime(this._toType(s),e)}return this}_getTicksUntilEvent(e,t){if(null===e)e={ticks:0,time:0,type:"setValueAtTime",value:0};else if(a1(e.ticks)){const t=this._events.previousEvent(e);e.ticks=this._getTicksUntilEvent(t,e.time)}const n=this._fromType(this.getValueAtTime(e.time));let r=this._fromType(this.getValueAtTime(t));const s=this._events.get(t);return s&&s.time===t&&"setValueAtTime"===s.type&&(r=this._fromType(this.getValueAtTime(t-this.sampleTime))),.5*(t-e.time)*(n+r)+e.ticks}getTicksAtTime(e){const t=this.toSeconds(e),n=this._events.get(t);return Math.max(this._getTicksUntilEvent(n,t),0)}getDurationOfTicks(e,t){const n=this.toSeconds(t),r=this.getTicksAtTime(t);return this.getTimeOfTick(r+e)-n}getTimeOfTick(e){const t=this._events.get(e,"ticks"),n=this._events.getAfter(e,"ticks");if(t&&t.ticks===e)return t.time;if(t&&n&&"linearRampToValueAtTime"===n.type&&t.value!==n.value){const r=this._fromType(this.getValueAtTime(t.time)),s=(this._fromType(this.getValueAtTime(n.time))-r)/(n.time-t.time),i=Math.sqrt(Math.pow(r,2)-2*s*(t.ticks-e)),a=(-r+i)/s;return(a>0?a:(-r-i)/s)+t.time}return t?0===t.value?1/0:t.time+(e-t.ticks)/t.value:e/this._initialValue}ticksToTime(e,t){return this.getDurationOfTicks(e,t)}timeToTicks(e,t){const n=this.toSeconds(t),r=this.toSeconds(e),s=this.getTicksAtTime(n);return this.getTicksAtTime(n+r)-s}_fromType(e){return"bpm"===this.units&&this.multiplier?1/(60/e/this.multiplier):super._fromType(e)}_toType(e){return"bpm"===this.units&&this.multiplier?e/this.multiplier*60:super._toType(e)}get multiplier(){return this._multiplier}set multiplier(e){const t=this.value;this._multiplier=e,this.cancelScheduledValues(0),this.setValueAtTime(t,0)}}class A2 extends N2{constructor(){const e=O1(A2.getDefaults(),arguments,["value"]);super(e),this.name="TickSignal",this.input=this._param=new $2({context:this.context,convert:e.convert,multiplier:e.multiplier,param:this._constantSource.offset,units:e.units,value:e.value})}static getDefaults(){return Object.assign(N2.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(e,t){return this._param.ticksToTime(e,t)}timeToTicks(e,t){return this._param.timeToTicks(e,t)}getTimeOfTick(e){return this._param.getTimeOfTick(e)}getDurationOfTicks(e,t){return this._param.getDurationOfTicks(e,t)}getTicksAtTime(e){return this._param.getTicksAtTime(e)}get multiplier(){return this._param.multiplier}set multiplier(e){this._param.multiplier=e}dispose(){return super.dispose(),this._param.dispose(),this}}class R2 extends b2{constructor(){const e=O1(R2.getDefaults(),arguments,["frequency"]);super(e),this.name="TickSource",this._state=new v2,this._tickOffset=new U1,this._ticksAtTime=new U1,this._secondsAtTime=new U1,this.frequency=new A2({context:this.context,units:e.units,value:e.frequency}),Q1(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},b2.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(e,t){const n=this.toSeconds(e);return"started"!==this._state.getValueAtTime(n)&&(this._state.setStateAtTime("started",n),o1(t)&&this.setTicksAtTime(t,n),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n)),this}stop(e){const t=this.toSeconds(e);if("stopped"===this._state.getValueAtTime(t)){const e=this._state.get(t);e&&e.time>0&&(this._tickOffset.cancel(e.time),this._state.cancel(e.time))}return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this.setTicksAtTime(0,t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}pause(e){const t=this.toSeconds(e);return"started"===this._state.getValueAtTime(t)&&(this._state.setStateAtTime("paused",t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t)),this}cancel(e){return e=this.toSeconds(e),this._state.cancel(e),this._tickOffset.cancel(e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getTicksAtTime(e){const t=this.toSeconds(e),n=this._state.getLastState("stopped",t),r=this._ticksAtTime.get(t),s={state:"paused",time:t};this._state.add(s);let i=r||n,a=r?r.ticks:0,o=null;return this._state.forEachBetween(i.time,t+this.sampleTime,(e=>{let t=i.time;const n=this._tickOffset.get(e.time);n&&n.time>=i.time&&(a=n.ticks,t=n.time),"started"===i.state&&"started"!==e.state&&(a+=this.frequency.getTicksAtTime(e.time)-this.frequency.getTicksAtTime(t),e.time!==s.time&&(o={state:e.state,time:e.time,ticks:a})),i=e})),this._state.remove(s),o&&this._ticksAtTime.add(o),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(e){this.setTicksAtTime(e,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(e){const t=this.now(),n=this.frequency.timeToTicks(e,t);this.setTicksAtTime(n,t)}getSecondsAtTime(e){e=this.toSeconds(e);const t=this._state.getLastState("stopped",e),n={state:"paused",time:e};this._state.add(n);const r=this._secondsAtTime.get(e);let s=r||t,i=r?r.seconds:0,a=null;return this._state.forEachBetween(s.time,e+this.sampleTime,(e=>{let t=s.time;const r=this._tickOffset.get(e.time);r&&r.time>=s.time&&(i=r.seconds,t=r.time),"started"===s.state&&"started"!==e.state&&(i+=e.time-t,e.time!==n.time&&(a={state:e.state,time:e.time,seconds:i})),s=e})),this._state.remove(n),a&&this._secondsAtTime.add(a),i}setTicksAtTime(e,t){return t=this.toSeconds(t),this._tickOffset.cancel(t),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(e,t),ticks:e,time:t}),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getStateAtTime(e){return e=this.toSeconds(e),this._state.getValueAtTime(e)}getTimeOfTick(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.now();const n=this._tickOffset.get(t),r=this._state.get(t),s=Math.max(n.time,r.time),i=this.frequency.getTicksAtTime(s)+e-n.ticks;return this.frequency.getTimeOfTick(i)}forEachTickBetween(e,t,n){let r=this._state.get(e);this._state.forEachBetween(e,t,(t=>{r&&"started"===r.state&&"started"!==t.state&&this.forEachTickBetween(Math.max(r.time,e),t.time-this.sampleTime,n),r=t}));let s=null;if(r&&"started"===r.state){const a=Math.max(r.time,e),o=this.frequency.getTicksAtTime(a),l=o-this.frequency.getTicksAtTime(r.time);let u=Math.ceil(l)-l;u=V1(u,1)?0:u;let c=this.frequency.getTimeOfTick(o+u);for(;c<t;){try{n(c,Math.round(this.getTicksAtTime(c)))}catch(i){s=i;break}c+=this.frequency.getDurationOfTicks(1,c)}}if(s)throw s;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class O2 extends b2{constructor(){const e=O1(O2.getDefaults(),arguments,["callback","frequency"]);super(e),this.name="Clock",this.callback=J1,this._lastUpdate=0,this._state=new v2("stopped"),this._boundLoop=this._loop.bind(this),this.callback=e.callback,this._tickSource=new R2({context:this.context,frequency:e.frequency,units:e.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,Q1(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(b2.getDefaults(),{callback:J1,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(e,t){g1(this.context);const n=this.toSeconds(e);return this.log("start",n),"started"!==this._state.getValueAtTime(n)&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,t),n<this._lastUpdate&&this.emit("start",n,t)),this}stop(e){const t=this.toSeconds(e);return this.log("stop",t),this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._tickSource.stop(t),t<this._lastUpdate&&this.emit("stop",t),this}pause(e){const t=this.toSeconds(e);return"started"===this._state.getValueAtTime(t)&&(this._state.setStateAtTime("paused",t),this._tickSource.pause(t),t<this._lastUpdate&&this.emit("pause",t)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(e){this._tickSource.ticks=e}get seconds(){return this._tickSource.seconds}set seconds(e){this._tickSource.seconds=e}getSecondsAtTime(e){return this._tickSource.getSecondsAtTime(e)}setTicksAtTime(e,t){return this._tickSource.setTicksAtTime(e,t),this}getTimeOfTick(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.now();return this._tickSource.getTimeOfTick(e,t)}getTicksAtTime(e){return this._tickSource.getTicksAtTime(e)}nextTickTime(e,t){const n=this.toSeconds(t),r=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(r+e,n)}_loop(){const e=this._lastUpdate,t=this.now();this._lastUpdate=t,this.log("loop",e,t),e!==t&&(this._state.forEachBetween(e,t,(e=>{switch(e.state){case"started":const t=this._tickSource.getTicksAtTime(e.time);this.emit("start",e.time,t);break;case"stopped":0!==e.time&&this.emit("stop",e.time);break;case"paused":this.emit("pause",e.time)}})),this._tickSource.forEachTickBetween(e,t,((e,t)=>{this.callback(e,t)})))}getStateAtTime(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}K1.mixin(O2);class D2 extends w2{constructor(){const e=O1(D2.getDefaults(),arguments,["volume"]);super(e),this.name="Volume",this.input=this.output=new I2({context:this.context,gain:e.volume,units:"decibels"}),this.volume=this.output.gain,Q1(this,"volume"),this._unmutedVolume=e.volume,this.mute=e.mute}static getDefaults(){return Object.assign(w2.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(e){!this.mute&&e?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!e&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class F2 extends w2{constructor(){const e=O1(F2.getDefaults(),arguments);super(e),this.name="Destination",this.input=new D2({context:this.context}),this.output=new I2({context:this.context}),this.volume=this.input.volume,k2(this.input,this.output,this.context.rawContext.destination),this.mute=e.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(w2.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(e){this.input.mute=e}chain(){this.input.disconnect();for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.unshift(this.input),t.push(this.output),k2(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}j1((e=>{e.destination=new F2({context:e})})),q1((e=>{e.destination.dispose()}));class M2 extends w2{constructor(){super(...arguments),this.name="Listener",this.positionX=new x2({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new x2({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new x2({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new x2({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new x2({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new x2({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new x2({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new x2({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new x2({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(w2.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}j1((e=>{e.listener=new M2({context:e})})),q1((e=>{e.listener.dispose()}));class P2 extends M1{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const e=O1(P2.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=e.baseUrl,Object.keys(e.urls).forEach((t=>{this._loadingCount++;const n=e.urls[t];this.add(t,n,this._bufferLoaded.bind(this,e.onload),e.onerror)}))}static getDefaults(){return{baseUrl:"",onerror:J1,onload:J1,urls:{}}}has(e){return this._buffers.has(e.toString())}get(e){return f1(this.has(e),`ToneAudioBuffers has no buffer named: ${e}`),this._buffers.get(e.toString())}_bufferLoaded(e){this._loadingCount--,0===this._loadingCount&&e&&e()}get loaded(){return Array.from(this._buffers).every((e=>{let[t,n]=e;return n.loaded}))}add(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:J1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:J1;return d1(t)?(this.baseUrl&&"data:audio/"===t.trim().substring(0,11).toLowerCase()&&(this.baseUrl=""),this._buffers.set(e.toString(),new e2(this.baseUrl+t,n,r))):this._buffers.set(e.toString(),new e2(t,n,r)),this}dispose(){return super.dispose(),this._buffers.forEach((e=>e.dispose())),this._buffers.clear(),this}}class z2 extends f2{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(e){return u2(super._frequencyToUnits(e))}_ticksToUnits(e){return u2(super._ticksToUnits(e))}_beatsToUnits(e){return u2(super._beatsToUnits(e))}_secondsToUnits(e){return u2(super._secondsToUnits(e))}toMidi(){return this.valueOf()}toFrequency(){return h2(this.toMidi())}transpose(e){return new z2(this.context,this.toMidi()+e)}}class L2 extends y2{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(e){return this._getPPQ()*e}_secondsToUnits(e){return Math.floor(e/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(e){return e}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class B2 extends b2{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new U1,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(e,t){return this._events.add({callback:e,time:this.toSeconds(t)}),1===this._events.length&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(e){return this._events.cancel(this.toSeconds(e)),this}_drawLoop(){const e=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=e;){const t=this._events.shift();t&&e-t.time<=this.expiration&&t.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}j1((e=>{e.draw=new B2({context:e})})),q1((e=>{e.draw.dispose()}));class V2 extends M1{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(e){f1(o1(e.time),"Events must have a time property"),f1(o1(e.duration),"Events must have a duration parameter"),e.time=e.time.valueOf();let t=new W2(e.time,e.time+e.duration,e);for(null===this._root?this._root=t:this._root.insert(t),this._length++;null!==t;)t.updateHeight(),t.updateMax(),this._rebalance(t),t=t.parent;return this}remove(e){if(null!==this._root){const t=[];this._root.search(e.time,t);for(const n of t)if(n.event===e){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(e){return this.forEachFrom(e,(e=>this.remove(e))),this}_setRoot(e){this._root=e,null!==this._root&&(this._root.parent=null)}_replaceNodeInParent(e,t){null!==e.parent?(e.isLeftChild()?e.parent.left=t:e.parent.right=t,this._rebalance(e.parent)):this._setRoot(t)}_removeNode(e){if(null===e.left&&null===e.right)this._replaceNodeInParent(e,null);else if(null===e.right)this._replaceNodeInParent(e,e.left);else if(null===e.left)this._replaceNodeInParent(e,e.right);else{let t,n=null;if(e.getBalance()>0)if(null===e.left.right)t=e.left,t.right=e.right,n=t;else{for(t=e.left.right;null!==t.right;)t=t.right;t.parent&&(t.parent.right=t.left,n=t.parent,t.left=e.left,t.right=e.right)}else if(null===e.right.left)t=e.right,t.left=e.left,n=t;else{for(t=e.right.left;null!==t.left;)t=t.left;t.parent&&(t.parent.left=t.right,n=t.parent,t.left=e.left,t.right=e.right)}null!==e.parent?e.isLeftChild()?e.parent.left=t:e.parent.right=t:this._setRoot(t),n&&this._rebalance(n)}e.dispose()}_rotateLeft(e){const t=e.parent,n=e.isLeftChild(),r=e.right;r&&(e.right=r.left,r.left=e),null!==t?n?t.left=r:t.right=r:this._setRoot(r)}_rotateRight(e){const t=e.parent,n=e.isLeftChild(),r=e.left;r&&(e.left=r.right,r.right=e),null!==t?n?t.left=r:t.right=r:this._setRoot(r)}_rebalance(e){const t=e.getBalance();t>1&&e.left?e.left.getBalance()<0?this._rotateLeft(e.left):this._rotateRight(e):t<-1&&e.right&&(e.right.getBalance()>0?this._rotateRight(e.right):this._rotateLeft(e))}get(e){if(null!==this._root){const t=[];if(this._root.search(e,t),t.length>0){let e=t[0];for(let n=1;n<t.length;n++)t[n].low>e.low&&(e=t[n]);return e.event}}return null}forEach(e){if(null!==this._root){const t=[];this._root.traverse((e=>t.push(e))),t.forEach((t=>{t.event&&e(t.event)}))}return this}forEachAtTime(e,t){if(null!==this._root){const n=[];this._root.search(e,n),n.forEach((e=>{e.event&&t(e.event)}))}return this}forEachFrom(e,t){if(null!==this._root){const n=[];this._root.searchAfter(e,n),n.forEach((e=>{e.event&&t(e.event)}))}return this}dispose(){return super.dispose(),null!==this._root&&this._root.traverse((e=>e.dispose())),this._root=null,this}}class W2{constructor(e,t,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=e,this.high=t,this.max=this.high}insert(e){e.low<=this.low?null===this.left?this.left=e:this.left.insert(e):null===this.right?this.right=e:this.right.insert(e)}search(e,t){e>this.max||(null!==this.left&&this.left.search(e,t),this.low<=e&&this.high>e&&t.push(this),this.low>e||null!==this.right&&this.right.search(e,t))}searchAfter(e,t){this.low>=e&&(t.push(this),null!==this.left&&this.left.searchAfter(e,t)),null!==this.right&&this.right.searchAfter(e,t)}traverse(e){e(this),null!==this.left&&this.left.traverse(e),null!==this.right&&this.right.traverse(e)}updateHeight(){null!==this.left&&null!==this.right?this.height=Math.max(this.left.height,this.right.height)+1:null!==this.right?this.height=this.right.height+1:null!==this.left?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,null!==this.left&&(this.max=Math.max(this.max,this.left.max)),null!==this.right&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let e=0;return null!==this.left&&null!==this.right?e=this.left.height-this.right.height:null!==this.left?e=this.left.height+1:null!==this.right&&(e=-(this.right.height+1)),e}isLeftChild(){return null!==this.parent&&this.parent.left===this}get left(){return this._left}set left(e){this._left=e,null!==e&&(e.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(e){this._right=e,null!==e&&(e.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class U2 extends M1{constructor(e){super(),this.name="TimelineValue",this._timeline=new U1({memory:10}),this._initialValue=e}set(e,t){return this._timeline.add({value:e,time:t}),this}get(e){const t=this._timeline.get(e);return t?t.value:this._initialValue}}class G2 extends w2{constructor(){super(O1(G2.getDefaults(),arguments,["context"]))}connect(e){return E2(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0),this}}class j2 extends G2{constructor(){const e=O1(j2.getDefaults(),arguments,["mapping","length"]);super(e),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper,h1(e.mapping)||e.mapping instanceof Float32Array?this.curve=Float32Array.from(e.mapping):"function"===typeof e.mapping&&this.setMap(e.mapping,e.length)}static getDefaults(){return Object.assign(N2.getDefaults(),{length:1024})}setMap(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1024;const n=new Float32Array(t);for(let r=0,s=t;r<s;r++){const t=r/(s-1)*2-1;n[r]=e(t,r)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(e){this._shaper.curve=e}get oversample(){return this._shaper.oversample}set oversample(e){f1(["none","2x","4x"].some((t=>t.includes(e))),"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class H2 extends G2{constructor(){const e=O1(H2.getDefaults(),arguments,["value"]);super(e),this.name="Pow",this._exponentScaler=this.input=this.output=new j2({context:this.context,mapping:this._expFunc(e.value),length:8192}),this._exponent=e.value}static getDefaults(){return Object.assign(G2.getDefaults(),{value:1})}_expFunc(e){return t=>Math.pow(Math.abs(t),e)}get value(){return this._exponent}set value(e){this._exponent=e,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class q2{constructor(e,t){this.id=q2._eventId++,this._remainderTime=0;const n=Object.assign(q2.getDefaults(),t);this.transport=e,this.callback=n.callback,this._once=n.once,this.time=Math.floor(n.time),this._remainderTime=n.time-this.time}static getDefaults(){return{callback:J1,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(e){if(this.callback){const t=this.transport.bpm.getDurationOfTicks(1,e);this.callback(e+this._remainderTime*t),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}q2._eventId=0;class K2 extends q2{constructor(e,t){super(e,t),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(K2.getDefaults(),t);this.duration=n.duration,this._interval=n.interval,this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},q2.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(e){this._createEvents(e),super.invoke(e)}_createEvent(){return B1(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new L2(this.context,this._nextTick).toSeconds()):-1}_createEvents(e){B1(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new L2(this.context,this._nextTick).toSeconds()))}_restart(e){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const t=this.transport.getTicksAtTime(e);z1(t,this.time)&&(this._nextTick=this.floatTime+Math.ceil((t-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class X2 extends b2{constructor(){const e=O1(X2.getDefaults(),arguments);super(e),this.name="Transport",this._loop=new U2(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new U1,this._repeatedEvents=new V2,this._syncedSignals=[],this._swingAmount=0,this._ppq=e.ppq,this._clock=new O2({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=e.ppq,this.bpm.setValueAtTime(e.bpm,0),Q1(this,"bpm"),this._timeSignature=e.timeSignature,this._swingTicks=e.ppq/2}static getDefaults(){return Object.assign(b2.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(e,t){if(this._loop.get(e)&&t>=this._loopEnd&&(this.emit("loopEnd",e),this._clock.setTicksAtTime(this._loopStart,e),t=this._loopStart,this.emit("loopStart",e,this._clock.getSecondsAtTime(e)),this.emit("loop",e)),this._swingAmount>0&&t%this._ppq!==0&&t%(2*this._swingTicks)!==0){const n=t%(2*this._swingTicks)/(2*this._swingTicks),r=Math.sin(n*Math.PI)*this._swingAmount;e+=new L2(this.context,2*this._swingTicks/3).toSeconds()*r}v1(!0),this._timeline.forEachAtTime(t,(t=>t.invoke(e))),v1(!1)}schedule(e,t){const n=new q2(this,{callback:e,time:new y2(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;const s=new K2(this,{callback:e,duration:new p2(this.context,r).toTicks(),interval:new p2(this.context,t).toTicks(),time:new y2(this.context,n).toTicks()});return this._addEvent(s,this._repeatedEvents)}scheduleOnce(e,t){const n=new q2(this,{callback:e,once:!0,time:new y2(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}clear(e){if(this._scheduledEvents.hasOwnProperty(e)){const t=this._scheduledEvents[e.toString()];t.timeline.remove(t.event),t.event.dispose(),delete this._scheduledEvents[e.toString()]}return this}_addEvent(e,t){return this._scheduledEvents[e.id.toString()]={event:e,timeline:t},t.add(e),e.id}cancel(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const t=this.toTicks(e);return this._timeline.forEachFrom(t,(e=>this.clear(e.id))),this._repeatedEvents.forEachFrom(t,(e=>this.clear(e.id))),this}_bindClockEvents(){this._clock.on("start",((e,t)=>{t=new L2(this.context,t).toSeconds(),this.emit("start",e,t)})),this._clock.on("stop",(e=>{this.emit("stop",e)})),this._clock.on("pause",(e=>{this.emit("pause",e)}))}get state(){return this._clock.getStateAtTime(this.now())}start(e,t){let n;return this.context.resume(),o1(t)&&(n=this.toTicks(t)),this._clock.start(e,n),this}stop(e){return this._clock.stop(e),this}pause(e){return this._clock.pause(e),this}toggle(e){return e=this.toSeconds(e),"started"!==this._clock.getStateAtTime(e)?this.start(e):this.stop(e),this}get timeSignature(){return this._timeSignature}set timeSignature(e){h1(e)&&(e=e[0]/e[1]*4),this._timeSignature=e}get loopStart(){return new p2(this.context,this._loopStart,"i").toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e)}get loopEnd(){return new p2(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e)}get loop(){return this._loop.get(this.now())}set loop(e){this._loop.set(e,this.now())}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get swing(){return this._swingAmount}set swing(e){this._swingAmount=e}get swingSubdivision(){return new L2(this.context,this._swingTicks).toNotation()}set swingSubdivision(e){this._swingTicks=this.toTicks(e)}get position(){const e=this.now(),t=this._clock.getTicksAtTime(e);return new L2(this.context,t).toBarsBeatsSixteenths()}set position(e){const t=this.toTicks(e);this.ticks=t}get seconds(){return this._clock.seconds}set seconds(e){const t=this.now(),n=this._clock.frequency.timeToTicks(e,t);this.ticks=n}get progress(){if(this.loop){const e=this.now();return(this._clock.getTicksAtTime(e)-this._loopStart)/(this._loopEnd-this._loopStart)}return 0}get ticks(){return this._clock.ticks}set ticks(e){if(this._clock.ticks!==e){const t=this.now();if("started"===this.state){const n=this._clock.getTicksAtTime(t),r=t+this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,t);this.emit("stop",r),this._clock.setTicksAtTime(e,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this.emit("ticks",t),this._clock.setTicksAtTime(e,t)}}getTicksAtTime(e){return this._clock.getTicksAtTime(e)}getSecondsAtTime(e){return this._clock.getSecondsAtTime(e)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(e){this._clock.frequency.multiplier=e}nextSubdivision(e){if(e=this.toTicks(e),"started"!==this.state)return 0;{const t=this.now(),n=e-this.getTicksAtTime(t)%e;return this._clock.nextTickTime(n,t)}}syncSignal(e,t){const n=this.now();let r=this.bpm,s=1/(60/r.getValueAtTime(n)/this.PPQ),i=[];if("time"===e.units){const e=1/64/s,t=new I2(e),n=new H2(-1),a=new I2(e);r.chain(t,n,a),r=a,s=1/s,i=[t,n,a]}t||(t=0!==e.getValueAtTime(n)?e.getValueAtTime(n)/s:0);const a=new I2(t);return r.connect(a),a.connect(e._param),i.push(a),this._syncedSignals.push({initial:e.value,nodes:i,signal:e}),e.value=0,this}unsyncSignal(e){for(let t=this._syncedSignals.length-1;t>=0;t--){const n=this._syncedSignals[t];n.signal===e&&(n.nodes.forEach((e=>e.dispose())),n.signal.value=n.initial,this._syncedSignals.splice(t,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),Z1(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}K1.mixin(X2),j1((e=>{e.transport=new X2({context:e})})),q1((e=>{e.transport.dispose()}));class Y2 extends w2{constructor(e){super(e),this.input=void 0,this._state=new v2("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=J1,this._syncedStop=J1,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new D2({context:this.context,mute:e.mute,volume:e.volume}),this.volume=this._volume.volume,Q1(this,"volume"),this.onstop=e.onstop}static getDefaults(){return Object.assign(w2.getDefaults(),{mute:!1,onstop:J1,volume:0})}get state(){return this._synced?"started"===this.context.transport.state?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}_clampToCurrentTime(e){return this._synced?e:Math.max(e,this.context.currentTime)}start(e,t,n){let r=a1(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(r=this._clampToCurrentTime(r),this._synced||"started"!==this._state.getValueAtTime(r))if(this.log("start",r),this._state.setStateAtTime("started",r),this._synced){const e=this._state.get(r);e&&(e.offset=this.toSeconds(D1(t,0)),e.duration=n?this.toSeconds(n):void 0);const s=this.context.transport.schedule((e=>{this._start(e,t,n)}),r);this._scheduled.push(s),"started"===this.context.transport.state&&this.context.transport.getSecondsAtTime(this.immediate())>r&&this._syncedStart(this.now(),this.context.transport.seconds)}else g1(this.context),this._start(r,t,n);else f1(z1(r,this._state.get(r).time),"Start time must be strictly greater than previous start time"),this._state.cancel(r),this._state.setStateAtTime("started",r),this.log("restart",r),this.restart(r,t,n);return this}stop(e){let t=a1(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(t=this._clampToCurrentTime(t),"started"===this._state.getValueAtTime(t)||o1(this._state.getNextState("started",t))){if(this.log("stop",t),this._synced){const e=this.context.transport.schedule(this._stop.bind(this),t);this._scheduled.push(e)}else this._stop(t);this._state.cancel(t),this._state.setStateAtTime("stopped",t)}return this}restart(e,t,n){return e=this.toSeconds(e),"started"===this._state.getValueAtTime(e)&&(this._state.cancel(e),this._restart(e,t,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(e,t)=>{if(z1(t,0)){const n=this._state.get(t);if(n&&"started"===n.state&&n.time!==t){const r=t-this.toSeconds(n.time);let s;n.duration&&(s=this.toSeconds(n.duration)-r),this._start(e,this.toSeconds(n.offset)+r,s)}}},this._syncedStop=e=>{const t=this.context.transport.getSecondsAtTime(Math.max(e-this.sampleTime,0));"started"===this._state.getValueAtTime(t)&&this._stop(e)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach((e=>this.context.transport.clear(e))),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=J1,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class Q2 extends _2{constructor(){const e=O1(Q2.getDefaults(),arguments,["url","onload"]);super(e),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1,S2(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new x2({context:this.context,param:this._source.playbackRate,units:"positive",value:e.playbackRate}),this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this._buffer=new e2(e.url,e.onload,e.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(_2.getDefaults(),{url:new e2,loop:!1,loopEnd:0,loopStart:0,onload:J1,onerror:J1,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e}get curve(){return this._curve}set curve(e){this._curve=e}start(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;f1(this.buffer.loaded,"buffer is either not set or not loaded");const s=this.toSeconds(e);this._startGain(s,r),t=this.loop?D1(t,this.loopStart):D1(t,0);let i=Math.max(this.toSeconds(t),0);if(this.loop){const e=this.toSeconds(this.loopEnd)||this.buffer.duration,t=this.toSeconds(this.loopStart),n=e-t;L1(i,e)&&(i=(i-t)%n+t),V1(i,this.buffer.duration)&&(i=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,B1(i,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(s,i)),o1(n)){let e=this.toSeconds(n);e=Math.max(e,0),this.stop(s+e)}return this}_stopSource(e){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(e)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(e){this._source.loopStart=this.toSeconds(e)}get loopEnd(){return this._source.loopEnd}set loopEnd(e){this._source.loopEnd=this.toSeconds(e)}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._source.loop}set loop(e){this._source.loop=e,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Z2 extends Y2{constructor(){const e=O1(Z2.getDefaults(),arguments,["type"]);super(e),this.name="Noise",this._source=null,this._playbackRate=e.playbackRate,this.type=e.type,this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Y2.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(e){if(f1(e in t3,"Noise: invalid type: "+e),this._type!==e&&(this._type=e,"started"===this.state)){const e=this.now();this._stop(e),this._start(e)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._source&&(this._source.playbackRate.value=e)}_start(e){const t=t3[this._type];this._source=new Q2({url:t,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(e),Math.random()*(t.duration-.001))}_stop(e){this._source&&(this._source.stop(this.toSeconds(e)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(e){this._stop(e),this._start(e)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const J2=220500,e3={brown:null,pink:null,white:null},t3={get brown(){if(!e3.brown){const e=[];for(let t=0;t<2;t++){const n=new Float32Array(J2);e[t]=n;let r=0;for(let e=0;e<J2;e++){const t=2*Math.random()-1;n[e]=(r+.02*t)/1.02,r=n[e],n[e]*=3.5}}e3.brown=(new e2).fromArray(e)}return e3.brown},get pink(){if(!e3.pink){const e=[];for(let t=0;t<2;t++){const n=new Float32Array(J2);let r,s,i,a,o,l,u;e[t]=n,r=s=i=a=o=l=u=0;for(let e=0;e<J2;e++){const t=2*Math.random()-1;r=.99886*r+.0555179*t,s=.99332*s+.0750759*t,i=.969*i+.153852*t,a=.8665*a+.3104856*t,o=.55*o+.5329522*t,l=-.7616*l-.016898*t,n[e]=r+s+i+a+o+l+u+.5362*t,n[e]*=.11,u=.115926*t}}e3.pink=(new e2).fromArray(e)}return e3.pink},get white(){if(!e3.white){const e=[];for(let t=0;t<2;t++){const n=new Float32Array(J2);e[t]=n;for(let e=0;e<J2;e++)n[e]=2*Math.random()-1}e3.white=(new e2).fromArray(e)}return e3.white}};function n3(e,t){return I1(this,void 0,void 0,(function*(){const n=t/e.context.sampleRate,r=new t2(1,n,e.context.sampleRate);new e.constructor(Object.assign(e.get(),{frequency:2/n,detune:0,context:r})).toDestination().start(0);return(yield r.render()).getChannelData(0)}))}class r3 extends _2{constructor(){const e=O1(r3.getDefaults(),arguments,["frequency","type"]);super(e),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator],S2(this._oscillator,this._gainNode),this.type=e.type,this.frequency=new x2({context:this.context,param:this._oscillator.frequency,units:"frequency",value:e.frequency}),this.detune=new x2({context:this.context,param:this._oscillator.detune,units:"cents",value:e.detune}),Q1(this,["frequency","detune"])}static getDefaults(){return Object.assign(_2.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._oscillator.start(t),this}_stopSource(e){this._oscillator.stop(e)}setPeriodicWave(e){return this._oscillator.setPeriodicWave(e),this}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e}dispose(){return super.dispose(),"started"===this.state&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class s3 extends Y2{constructor(){const e=O1(s3.getDefaults(),arguments,["frequency","type"]);super(e),this.name="Oscillator",this._oscillator=null,this.frequency=new N2({context:this.context,units:"frequency",value:e.frequency}),Q1(this,"frequency"),this.detune=new N2({context:this.context,units:"cents",value:e.detune}),Q1(this,"detune"),this._partials=e.partials,this._partialCount=e.partialCount,this._type=e.type,e.partialCount&&"custom"!==e.type&&(this._type=this.baseType+e.partialCount.toString()),this.phase=e.phase}static getDefaults(){return Object.assign(Y2.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(e){const t=this.toSeconds(e),n=new r3({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(t)}_stop(e){const t=this.toSeconds(e);this._oscillator&&this._oscillator.stop(t)}_restart(e){const t=this.toSeconds(e);return this.log("restart",t),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(t),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if("custom"===this._type){return s3._periodicWaveCache.find((e=>{return e.phase===this._phase&&(t=e.partials,n=this._partials,t.length===n.length&&t.every(((e,t)=>n[t]===e)));var t,n}))}{const e=s3._periodicWaveCache.find((e=>e.type===this._type&&e.phase===this._phase));return this._partialCount=e?e.partialCount:this._partialCount,e}}get type(){return this._type}set type(e){this._type=e;const t=-1!==["sine","square","sawtooth","triangle"].indexOf(e);if(0===this._phase&&t)this._wave=void 0,this._partialCount=0,null!==this._oscillator&&(this._oscillator.type=e);else{const t=this._getCachedPeriodicWave();if(o1(t)){const{partials:e,wave:n}=t;this._wave=n,this._partials=e,null!==this._oscillator&&this._oscillator.setPeriodicWave(this._wave)}else{const[t,n]=this._getRealImaginary(e,this._phase),r=this.context.createPeriodicWave(t,n);this._wave=r,null!==this._oscillator&&this._oscillator.setPeriodicWave(this._wave),s3._periodicWaveCache.push({imag:n,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:t,type:this._type,wave:this._wave}),s3._periodicWaveCache.length>100&&s3._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(e){this.partialCount&&"custom"!==this._type&&"custom"!==e?this.type=e+this.partialCount:this.type=e}get partialCount(){return this._partialCount}set partialCount(e){m1(e,0);let t=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(t=n[1]),"custom"!==this._type)this.type=0===e?t:t+e.toString();else{const t=new Float32Array(e);this._partials.forEach(((e,n)=>t[n]=e)),this._partials=Array.from(t),this.type=this._type}}_getRealImaginary(e,t){let n=2048;const r=new Float32Array(n),s=new Float32Array(n);let i=1;if("custom"===e){if(i=this._partials.length+1,this._partialCount=this._partials.length,n=i,0===this._partials.length)return[r,s]}else{const t=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);t?(i=parseInt(t[2],10)+1,this._partialCount=parseInt(t[2],10),e=t[1],i=Math.max(i,2),n=i):this._partialCount=0,this._partials=[]}for(let a=1;a<n;++a){const n=2/(a*Math.PI);let o;switch(e){case"sine":o=a<=i?1:0,this._partials[a-1]=o;break;case"square":o=1&a?2*n:0,this._partials[a-1]=o;break;case"sawtooth":o=n*(1&a?1:-1),this._partials[a-1]=o;break;case"triangle":o=1&a?n*n*2*(a-1>>1&1?-1:1):0,this._partials[a-1]=o;break;case"custom":o=this._partials[a-1];break;default:throw new TypeError("Oscillator: invalid type: "+e)}0!==o?(r[a]=-o*Math.sin(t*a),s[a]=o*Math.cos(t*a)):(r[a]=0,s[a]=0)}return[r,s]}_inverseFFT(e,t,n){let r=0;const s=e.length;for(let i=0;i<s;i++)r+=e[i]*Math.cos(i*n)+t[i]*Math.sin(i*n);return r}getInitialValue(){const[e,t]=this._getRealImaginary(this._type,0);let n=0;const r=2*Math.PI;for(let s=0;s<32;s++)n=Math.max(this._inverseFFT(e,t,s/32*r),n);return W1(-this._inverseFFT(e,t,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(e){this._phase=e*Math.PI/180,this.type=this._type}asArray(){return I1(this,arguments,void 0,(function(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1024;return function*(){return n3(e,t)}()}))}dispose(){return super.dispose(),null!==this._oscillator&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}s3._periodicWaveCache=[];class i3 extends G2{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new j2({context:this.context,mapping:e=>(e+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class a3 extends N2{constructor(){const e=O1(a3.getDefaults(),arguments,["value"]);super(e),this.name="Multiply",this.override=!1,this._mult=this.input=this.output=new I2({context:this.context,minValue:e.minValue,maxValue:e.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(N2.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class o3 extends Y2{constructor(){const e=O1(o3.getDefaults(),arguments,["frequency","type","modulationType"]);super(e),this.name="AMOscillator",this._modulationScale=new i3({context:this.context}),this._modulationNode=new I2({context:this.context}),this._carrier=new s3({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new s3({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new a3({context:this.context,units:"positive",value:e.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),Q1(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(s3.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){this._modulator.restart(e),this._carrier.restart(e)}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(){return I1(this,arguments,void 0,(function(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1024;return function*(){return n3(e,t)}()}))}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class l3 extends Y2{constructor(){const e=O1(l3.getDefaults(),arguments,["frequency","type","modulationType"]);super(e),this.name="FMOscillator",this._modulationNode=new I2({context:this.context,gain:0}),this._carrier=new s3({context:this.context,detune:e.detune,frequency:0,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.detune=this._carrier.detune,this.frequency=new N2({context:this.context,units:"frequency",value:e.frequency}),this._modulator=new s3({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new a3({context:this.context,units:"positive",value:e.harmonicity}),this.modulationIndex=new a3({context:this.context,units:"positive",value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),Q1(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(s3.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){return this._modulator.restart(e),this._carrier.restart(e),this}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(){return I1(this,arguments,void 0,(function(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1024;return function*(){return n3(e,t)}()}))}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class u3 extends Y2{constructor(){const e=O1(u3.getDefaults(),arguments,["frequency","width"]);super(e),this.name="PulseOscillator",this._widthGate=new I2({context:this.context,gain:0}),this._thresh=new j2({context:this.context,mapping:e=>e<=0?-1:1}),this.width=new N2({context:this.context,units:"audioRange",value:e.width}),this._triangle=new s3({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),Q1(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Y2.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(e){e=this.toSeconds(e),this._triangle.start(e),this._widthGate.gain.setValueAtTime(1,e)}_stop(e){e=this.toSeconds(e),this._triangle.stop(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(0,e)}_restart(e){this._triangle.restart(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(1,e)}get phase(){return this._triangle.phase}set phase(e){this._triangle.phase=e}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(e){this._triangle.type=e}asArray(){return I1(this,arguments,void 0,(function(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1024;return function*(){return n3(e,t)}()}))}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class c3 extends Y2{constructor(){const e=O1(c3.getDefaults(),arguments,["frequency","type","spread"]);super(e),this.name="FatOscillator",this._oscillators=[],this.frequency=new N2({context:this.context,units:"frequency",value:e.frequency}),this.detune=new N2({context:this.context,units:"cents",value:e.detune}),this._spread=e.spread,this._type=e.type,this._phase=e.phase,this._partials=e.partials,this._partialCount=e.partialCount,this.count=e.count,Q1(this,["frequency","detune"])}static getDefaults(){return Object.assign(s3.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(e){e=this.toSeconds(e),this._forEach((t=>t.start(e)))}_stop(e){e=this.toSeconds(e),this._forEach((t=>t.stop(e)))}_restart(e){this._forEach((t=>t.restart(e)))}_forEach(e){for(let t=0;t<this._oscillators.length;t++)e(this._oscillators[t],t)}get type(){return this._type}set type(e){this._type=e,this._forEach((t=>t.type=e))}get spread(){return this._spread}set spread(e){if(this._spread=e,this._oscillators.length>1){const t=-e/2,n=e/(this._oscillators.length-1);this._forEach(((e,r)=>e.detune.value=t+n*r))}}get count(){return this._oscillators.length}set count(e){if(m1(e,1),this._oscillators.length!==e){this._forEach((e=>e.dispose())),this._oscillators=[];for(let t=0;t<e;t++){const n=new s3({context:this.context,volume:-6-1.1*e,type:this._type,phase:this._phase+t/e*360,partialCount:this._partialCount,onstop:0===t?()=>this.onstop(this):J1});"custom"===this.type&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[t]=n}this.spread=this._spread,"started"===this.state&&this._forEach((e=>e.start()))}}get phase(){return this._phase}set phase(e){this._phase=e,this._forEach(((e,t)=>e.phase=this._phase+t/this.count*360))}get baseType(){return this._oscillators[0].baseType}set baseType(e){this._forEach((t=>t.baseType=e)),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this._type="custom",this._forEach((t=>t.partials=e)))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(e){this._partialCount=e,this._forEach((t=>t.partialCount=e)),this._type=this._oscillators[0].type}asArray(){return I1(this,arguments,void 0,(function(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1024;return function*(){return n3(e,t)}()}))}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach((e=>e.dispose())),this}}class h3 extends Y2{constructor(){const e=O1(h3.getDefaults(),arguments,["frequency","modulationFrequency"]);super(e),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new a3({context:this.context,value:2}),this._pulse=new u3({context:this.context,frequency:e.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new s3({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),Q1(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Y2.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(e){e=this.toSeconds(e),this._modulator.start(e),this._pulse.start(e)}_stop(e){e=this.toSeconds(e),this._modulator.stop(e),this._pulse.stop(e)}_restart(e){this._modulator.restart(e),this._pulse.restart(e)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(e){this._modulator.phase=e}asArray(){return I1(this,arguments,void 0,(function(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1024;return function*(){return n3(e,t)}()}))}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const d3={am:o3,fat:c3,fm:l3,oscillator:s3,pulse:u3,pwm:h3};class p3 extends Y2{constructor(){const e=O1(p3.getDefaults(),arguments,["frequency","type"]);super(e),this.name="OmniOscillator",this.frequency=new N2({context:this.context,units:"frequency",value:e.frequency}),this.detune=new N2({context:this.context,units:"cents",value:e.detune}),Q1(this,["frequency","detune"]),this.set(e)}static getDefaults(){return Object.assign(s3.getDefaults(),l3.getDefaults(),o3.getDefaults(),c3.getDefaults(),u3.getDefaults(),h3.getDefaults())}_start(e){this._oscillator.start(e)}_stop(e){this._oscillator.stop(e)}_restart(e){return this._oscillator.restart(e),this}get type(){let e="";return["am","fm","fat"].some((e=>this._sourceType===e))&&(e=this._sourceType),e+this._oscillator.type}set type(e){"fm"===e.substr(0,2)?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):"am"===e.substr(0,2)?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):"fat"===e.substr(0,3)?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(3)):"pwm"===e?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):"pulse"===e?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=e)}get partials(){return this._oscillator.partials}set partials(e){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partials=e)}get partialCount(){return this._oscillator.partialCount}set partialCount(e){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partialCount=e)}set(e){return Reflect.has(e,"type")&&e.type&&(this.type=e.type),super.set(e),this}_createNewOscillator(e){if(e!==this._sourceType){this._sourceType=e;const t=d3[e],n=this.now();if(this._oscillator){const e=this._oscillator;e.stop(n),this.context.setTimeout((()=>e.dispose()),this.blockTime)}this._oscillator=new t({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),"started"===this.state&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e}get sourceType(){return this._sourceType}set sourceType(e){let t="sine";"pwm"!==this._oscillator.type&&"pulse"!==this._oscillator.type&&(t=this._oscillator.type),"fm"===e?this.type="fm"+t:"am"===e?this.type="am"+t:"fat"===e?this.type="fat"+t:"oscillator"===e?this.type=t:"pulse"===e?this.type="pulse":"pwm"===e&&(this.type="pwm")}_getOscType(e,t){return e instanceof d3[t]}get baseType(){return this._oscillator.baseType}set baseType(e){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||"pulse"===e||"pwm"===e||(this._oscillator.baseType=e)}get width(){return this._getOscType(this._oscillator,"pulse")?this._oscillator.width:void 0}get count(){return this._getOscType(this._oscillator,"fat")?this._oscillator.count:void 0}set count(e){this._getOscType(this._oscillator,"fat")&&l1(e)&&(this._oscillator.count=e)}get spread(){return this._getOscType(this._oscillator,"fat")?this._oscillator.spread:void 0}set spread(e){this._getOscType(this._oscillator,"fat")&&l1(e)&&(this._oscillator.spread=e)}get modulationType(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.modulationType:void 0}set modulationType(e){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&d1(e)&&(this._oscillator.modulationType=e)}get modulationIndex(){return this._getOscType(this._oscillator,"fm")?this._oscillator.modulationIndex:void 0}get harmonicity(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.harmonicity:void 0}get modulationFrequency(){return this._getOscType(this._oscillator,"pwm")?this._oscillator.modulationFrequency:void 0}asArray(){return I1(this,arguments,void 0,(function(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1024;return function*(){return n3(e,t)}()}))}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}function f3(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0;const n=new WeakMap;return function(r,s){Reflect.defineProperty(r,s,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(r){m1(r,e,t),n.set(this,r)}})}}function m3(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0;const n=new WeakMap;return function(r,s){Reflect.defineProperty(r,s,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(r){m1(this.toSeconds(r),e,t),n.set(this,r)}})}}class g3 extends Y2{constructor(){const e=O1(g3.getDefaults(),arguments,["url","onload"]);super(e),this.name="Player",this._activeSources=new Set,this._buffer=new e2({onload:this._onload.bind(this,e.onload),onerror:e.onerror,reverse:e.reverse,url:e.url}),this.autostart=e.autostart,this._loop=e.loop,this._loopStart=e.loopStart,this._loopEnd=e.loopEnd,this._playbackRate=e.playbackRate,this.fadeIn=e.fadeIn,this.fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Y2.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:J1,onerror:J1,playbackRate:1,reverse:!1})}load(e){return I1(this,void 0,void 0,(function*(){return yield this._buffer.load(e),this._onload(),this}))}_onload(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:J1)(),this.autostart&&this.start()}_onSourceEnd(e){this.onstop(this),this._activeSources.delete(e),0!==this._activeSources.size||this._synced||"started"!==this._state.getValueAtTime(this.now())||(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(e,t,n){return super.start(e,t,n),this}_start(e,t,n){t=this._loop?D1(t,this._loopStart):D1(t,0);const r=this.toSeconds(t),s=n;n=D1(n,Math.max(this._buffer.duration-r,0));let i=this.toSeconds(n);i/=this._playbackRate,e=this.toSeconds(e);const a=new Q2({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);this._loop||this._synced||(this._state.cancel(e+i),this._state.setStateAtTime("stopped",e+i,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&a1(s)?a.start(e,r):a.start(e,r,i-this.toSeconds(this.fadeOut))}_stop(e){const t=this.toSeconds(e);this._activeSources.forEach((e=>e.stop(t)))}restart(e,t,n){return super.restart(e,t,n),this}_restart(e,t,n){var r;null===(r=[...this._activeSources].pop())||void 0===r||r.stop(e),this._start(e,t,n)}seek(e,t){const n=this.toSeconds(t);if("started"===this._state.getValueAtTime(n)){const t=this.toSeconds(e);this._stop(n),this._start(n,t)}return this}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this.buffer.loaded&&m1(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach((t=>{t.loopStart=e}))}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,this.buffer.loaded&&m1(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach((t=>{t.loopEnd=e}))}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._loop}set loop(e){if(this._loop!==e&&(this._loop=e,this._activeSources.forEach((t=>{t.loop=e})),e)){const e=this._state.getNextState("stopped",this.now());e&&this._state.cancel(e.time)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e;const t=this.now(),n=this._state.getNextState("stopped",t);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach((e=>e.cancelStop()))),this._activeSources.forEach((n=>{n.playbackRate.setValueAtTime(e,t)}))}get reverse(){return this._buffer.reverse}set reverse(e){this._buffer.reverse=e}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach((e=>e.dispose())),this._activeSources.clear(),this._buffer.dispose(),this}}C1([m3(0)],g3.prototype,"fadeIn",void 0),C1([m3(0)],g3.prototype,"fadeOut",void 0);class y3 extends G2{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new j2({context:this.context,mapping:e=>2*Math.abs(e)-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class b3 extends w2{constructor(){const e=O1(b3.getDefaults(),arguments,["attack","decay","sustain","release"]);super(e),this.name="Envelope",this._sig=new N2({context:this.context,value:0}),this.output=this._sig,this.input=void 0,this.attack=e.attack,this.decay=e.decay,this.sustain=e.sustain,this.release=e.release,this.attackCurve=e.attackCurve,this.releaseCurve=e.releaseCurve,this.decayCurve=e.decayCurve}static getDefaults(){return Object.assign(w2.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(e,t){if(d1(e))return e;{let n;for(n in v3)if(v3[n][t]===e)return n;return e}}_setCurve(e,t,n){if(d1(n)&&Reflect.has(v3,n)){const r=v3[n];u1(r)?"_decayCurve"!==e&&(this[e]=r[t]):this[e]=r}else{if(!h1(n)||"_decayCurve"===e)throw new Error("Envelope: invalid curve: "+n);this[e]=n}}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(e){this._setCurve("_attackCurve","In",e)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(e){this._setCurve("_releaseCurve","Out",e)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(e){this._setCurve("_decayCurve","Out",e)}triggerAttack(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.log("triggerAttack",e,t),e=this.toSeconds(e);let n=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),s=this.getValueAtTime(e);if(s>0){n=(1-s)/(1/n)}if(n<this.sampleTime)this._sig.cancelScheduledValues(e),this._sig.setValueAtTime(t,e);else if("linear"===this._attackCurve)this._sig.linearRampTo(t,n,e);else if("exponential"===this._attackCurve)this._sig.targetRampTo(t,n,e);else{this._sig.cancelAndHoldAtTime(e);let r=this._attackCurve;for(let e=1;e<r.length;e++)if(r[e-1]<=s&&s<=r[e]){r=this._attackCurve.slice(e),r[0]=s;break}this._sig.setValueCurveAtTime(r,e,n,t)}if(r&&this.sustain<1){const s=t*this.sustain,i=e+n;this.log("decay",i),"linear"===this._decayCurve?this._sig.linearRampToValueAtTime(s,r+i):this._sig.exponentialApproachValueAtTime(s,i,r)}return this}triggerRelease(e){this.log("triggerRelease",e),e=this.toSeconds(e);const t=this.getValueAtTime(e);if(t>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,e):"linear"===this._releaseCurve?this._sig.linearRampTo(0,n,e):"exponential"===this._releaseCurve?this._sig.targetRampTo(0,n,e):(f1(h1(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(e),this._sig.setValueCurveAtTime(this._releaseCurve,e,n,t))}return this}getValueAtTime(e){return this._sig.getValueAtTime(e)}triggerAttackRelease(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return t=this.toSeconds(t),this.triggerAttack(t,n),this.triggerRelease(t+this.toSeconds(e)),this}cancel(e){return this._sig.cancelScheduledValues(this.toSeconds(e)),this}connect(e){return E2(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0),this}asArray(){return I1(this,arguments,void 0,(function(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1024;return function*(){const n=t/e.context.sampleRate,r=new t2(1,n,e.context.sampleRate),s=e.toSeconds(e.attack)+e.toSeconds(e.decay),i=s+e.toSeconds(e.release),a=.1*i,o=i+a,l=new e.constructor(Object.assign(e.get(),{attack:n*e.toSeconds(e.attack)/o,decay:n*e.toSeconds(e.decay)/o,release:n*e.toSeconds(e.release)/o,context:r}));l._sig.toDestination(),l.triggerAttackRelease(n*(s+a)/o,0);return(yield r.render()).getChannelData(0)}()}))}dispose(){return super.dispose(),this._sig.dispose(),this}}C1([m3(0)],b3.prototype,"attack",void 0),C1([m3(0)],b3.prototype,"decay",void 0),C1([f3(0,1)],b3.prototype,"sustain",void 0),C1([m3(0)],b3.prototype,"release",void 0);const v3=(()=>{const e=128;let t,n;const r=[];for(t=0;t<e;t++)r[t]=Math.sin(t/127*(Math.PI/2));const s=[];for(t=0;t<127;t++){n=t/127;const e=Math.sin(n*(2*Math.PI)*6.4-Math.PI/2)+1;s[t]=e/10+.83*n}s[127]=1;const i=[];for(t=0;t<e;t++)i[t]=Math.ceil(t/127*5)/5;const a=[];for(t=0;t<e;t++)n=t/127,a[t]=.5*(1-Math.cos(Math.PI*n));const o=[];for(t=0;t<e;t++){n=t/127;const e=4*Math.pow(n,3)+.2,r=Math.cos(e*Math.PI*2*n);o[t]=Math.abs(r*(1-n))}function l(e){const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=1-e[n];return t}return{bounce:{In:l(o),Out:o},cosine:{In:r,Out:(u=r,u.slice(0).reverse())},exponential:"exponential",linear:"linear",ripple:{In:s,Out:l(s)},sine:{In:a,Out:l(a)},step:{In:i,Out:l(i)}};var u})();class x3 extends w2{constructor(){const e=O1(x3.getDefaults(),arguments);super(e),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=e=>this._original_triggerRelease(e),this._volume=this.output=new D2({context:this.context,volume:e.volume}),this.volume=this._volume.volume,Q1(this,"volume")}static getDefaults(){return Object.assign(w2.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let e=!1;return this._synced||(this._synced=!0,e=!0),e}_syncMethod(e,t){var n=this;const r=this["_original_"+e]=this[e];this[e]=function(){for(var e=arguments.length,s=new Array(e),i=0;i<e;i++)s[i]=arguments[i];const a=s[t],o=n.context.transport.schedule((e=>{s[t]=e,r.apply(n,s)}),a);n._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach((e=>this.context.transport.clear(e))),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(e,t,n,r){const s=this.toSeconds(n),i=this.toSeconds(t);return this.triggerAttack(e,s,r),this.triggerRelease(s+i),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class w3 extends x3{constructor(){const e=O1(w3.getDefaults(),arguments);super(e),this.portamento=e.portamento,this.onsilence=e.onsilence}static getDefaults(){return Object.assign(x3.getDefaults(),{detune:0,onsilence:J1,portamento:0})}triggerAttack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;this.log("triggerAttack",e,t,n);const r=this.toSeconds(t);return this._triggerEnvelopeAttack(r,n),this.setNote(e,r),this}triggerRelease(e){this.log("triggerRelease",e);const t=this.toSeconds(e);return this._triggerEnvelopeRelease(t),this}setNote(e,t){const n=this.toSeconds(t),r=e instanceof f2?e.toFrequency():e;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const e=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(r,e,n)}else this.frequency.setValueAtTime(r,n);return this}}C1([m3(0)],w3.prototype,"portamento",void 0);class k3 extends b3{constructor(){super(O1(k3.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new I2({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class S3 extends w3{constructor(){const e=O1(S3.getDefaults(),arguments);super(e),this.name="Synth",this.oscillator=new p3(Object.assign({context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)},e.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new k3(Object.assign({context:this.context},e.envelope)),this.oscillator.chain(this.envelope,this.output),Q1(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(w3.getDefaults(),{envelope:Object.assign(F1(b3.getDefaults(),Object.keys(w2.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(F1(p3.getDefaults(),[...Object.keys(Y2.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(e,t){if(this.envelope.triggerAttack(e,t),this.oscillator.start(e),0===this.envelope.sustain){const t=this.toSeconds(this.envelope.attack),n=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+t+n)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class C3 extends w3{constructor(){const e=O1(C3.getDefaults(),arguments);super(e),this.name="ModulationSynth",this._carrier=new S3({context:this.context,oscillator:e.oscillator,envelope:e.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new S3({context:this.context,oscillator:e.modulation,envelope:e.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new N2({context:this.context,units:"frequency"}),this.detune=new N2({context:this.context,value:e.detune,units:"cents"}),this.harmonicity=new a3({context:this.context,value:e.harmonicity,minValue:0}),this._modulationNode=new I2({context:this.context,gain:0}),Q1(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(w3.getDefaults(),{harmonicity:3,oscillator:Object.assign(F1(p3.getDefaults(),[...Object.keys(Y2.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(F1(b3.getDefaults(),Object.keys(w2.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(F1(p3.getDefaults(),[...Object.keys(Y2.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(F1(b3.getDefaults(),Object.keys(w2.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(e,t){this._carrier._triggerEnvelopeAttack(e,t),this._modulator._triggerEnvelopeAttack(e,t)}_triggerEnvelopeRelease(e){return this._carrier._triggerEnvelopeRelease(e),this._modulator._triggerEnvelopeRelease(e),this}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class I3 extends w2{constructor(){const e=O1(I3.getDefaults(),arguments,["frequency","type"]);super(e),this.name="BiquadFilter",this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new x2({context:this.context,units:"number",value:e.Q,param:this._filter.Q}),this.frequency=new x2({context:this.context,units:"frequency",value:e.frequency,param:this._filter.frequency}),this.detune=new x2({context:this.context,units:"cents",value:e.detune,param:this._filter.detune}),this.gain=new x2({context:this.context,units:"decibels",convert:!1,value:e.gain,param:this._filter.gain}),this.type=e.type}static getDefaults(){return Object.assign(w2.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(e){f1(-1!==["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e),`Invalid filter type: ${e}`),this._filter.type=e}getFrequencyResponse(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:128;const t=new Float32Array(e);for(let i=0;i<e;i++){const n=19980*Math.pow(i/e,2)+20;t[i]=n}const n=new Float32Array(e),r=new Float32Array(e),s=this.context.createBiquadFilter();return s.type=this.type,s.Q.value=this.Q.value,s.frequency.value=this.frequency.value,s.gain.value=this.gain.value,s.getFrequencyResponse(t,n,r),n}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class _3 extends w2{constructor(){const e=O1(_3.getDefaults(),arguments,["frequency","type","rolloff"]);super(e),this.name="Filter",this.input=new I2({context:this.context}),this.output=new I2({context:this.context}),this._filters=[],this._filters=[],this.Q=new N2({context:this.context,units:"positive",value:e.Q}),this.frequency=new N2({context:this.context,units:"frequency",value:e.frequency}),this.detune=new N2({context:this.context,units:"cents",value:e.detune}),this.gain=new N2({context:this.context,units:"decibels",convert:!1,value:e.gain}),this._type=e.type,this.rolloff=e.rolloff,Q1(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(w2.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(e){f1(-1!==["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e),`Invalid filter type: ${e}`),this._type=e,this._filters.forEach((t=>t.type=e))}get rolloff(){return this._rolloff}set rolloff(e){const t=l1(e)?e:parseInt(e,10),n=[-12,-24,-48,-96];let r=n.indexOf(t);f1(-1!==r,`rolloff can only be ${n.join(", ")}`),r+=1,this._rolloff=t,this.input.disconnect(),this._filters.forEach((e=>e.disconnect())),this._filters=new Array(r);for(let s=0;s<r;s++){const e=new I3({context:this.context});e.type=this._type,this.frequency.connect(e.frequency),this.detune.connect(e.detune),this.Q.connect(e.Q),this.gain.connect(e.gain),this._filters[s]=e}this._internalChannels=this._filters,k2(this.input,...this._internalChannels,this.output)}getFrequencyResponse(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:128;const t=new I3({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),n=new Float32Array(e).map((()=>1));return this._filters.forEach((()=>{t.getFrequencyResponse(e).forEach(((e,t)=>n[t]*=e))})),t.dispose(),n}dispose(){return super.dispose(),this._filters.forEach((e=>{e.dispose()})),Z1(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class T3 extends C3{constructor(){const e=O1(T3.getDefaults(),arguments);super(e),this.name="FMSynth",this.modulationIndex=new a3({context:this.context,value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(C3.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}class N3 extends S3{constructor(){const e=O1(N3.getDefaults(),arguments);super(e),this.name="MembraneSynth",this.portamento=0,this.pitchDecay=e.pitchDecay,this.octaves=e.octaves,Q1(this,["oscillator","envelope"])}static getDefaults(){return R1(w3.getDefaults(),S3.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(e,t){const n=this.toSeconds(t),r=this.toFrequency(e instanceof f2?e.toFrequency():e),s=r*this.octaves;return this.oscillator.frequency.setValueAtTime(s,n),this.oscillator.frequency.exponentialRampToValueAtTime(r,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}C1([f3(0)],N3.prototype,"octaves",void 0),C1([m3(0)],N3.prototype,"pitchDecay",void 0);const E3=new Set;function $3(e){E3.add(e)}function A3(e,t){const n=`registerProcessor("${e}", ${t})`;E3.add(n)}$3('\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it\'s disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === "dispose") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n');$3("\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n");$3("\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n");const R3="feedback-comb-filter";A3(R3,'\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: "delayTime",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: "k-rate"\n\t\t\t}, {\n\t\t\t\tname: "feedback",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: "k-rate"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n');class O3 extends x3{constructor(){const e=O1(O3.getDefaults(),arguments,["voice","options"]);super(e),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0,this._syncedRelease=e=>this.releaseAll(e),f1(!l1(e.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const t=e.voice.getDefaults();this.options=Object.assign(t,e.options),this.voice=e.voice,this.maxPolyphony=e.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const n=this._voices.indexOf(this._dummyVoice);this._voices.splice(n,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(x3.getDefaults(),{maxPolyphony:32,options:{},voice:S3})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(e){this._availableVoices.push(e);const t=this._activeVoices.findIndex((t=>t.voice===e));this._activeVoices.splice(t,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const e=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return f1(e instanceof w3,"Voice must extend Monophonic class"),e.connect(this.output),this._voices.push(e),e}w1("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(.95*this._averageActiveVoices,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const e=this._availableVoices.shift(),t=this._voices.indexOf(e);this._voices.splice(t,1),this.context.isOffline||e.dispose()}}_triggerAttack(e,t,n){e.forEach((e=>{const r=new z2(this.context,e).toMidi(),s=this._getNextAvailableVoice();s&&(s.triggerAttack(e,t,n),this._activeVoices.push({midi:r,voice:s,released:!1}),this.log("triggerAttack",e,t))}))}_triggerRelease(e,t){e.forEach((e=>{const n=new z2(this.context,e).toMidi(),r=this._activeVoices.find((e=>{let{midi:t,released:r}=e;return t===n&&!r}));r&&(r.voice.triggerRelease(t),r.released=!0,this.log("triggerRelease",e,t))}))}_scheduleEvent(e,t,n,r){f1(!this.disposed,"Synth was already disposed"),n<=this.now()?"attack"===e?this._triggerAttack(t,n,r):this._triggerRelease(t,n):this.context.setTimeout((()=>{this.disposed||this._scheduleEvent(e,t,n,r)}),n-this.now())}triggerAttack(e,t,n){Array.isArray(e)||(e=[e]);const r=this.toSeconds(t);return this._scheduleEvent("attack",e,r,n),this}triggerRelease(e,t){Array.isArray(e)||(e=[e]);const n=this.toSeconds(t);return this._scheduleEvent("release",e,n),this}triggerAttackRelease(e,t,n,r){const s=this.toSeconds(n);if(this.triggerAttack(e,s,r),h1(t)){f1(h1(e),"If the duration is an array, the notes must also be an array");for(let n=0;n<e.length;n++){const r=t[Math.min(n,t.length-1)],i=this.toSeconds(r);f1(i>0,"The duration must be greater than 0"),this.triggerRelease(e[n],s+i)}}else{const n=this.toSeconds(t);f1(n>0,"The duration must be greater than 0"),this.triggerRelease(e,s+n)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}set(e){const t=F1(e,["onsilence","context"]);return this.options=R1(this.options,t),this._voices.forEach((e=>e.set(t))),this._dummyVoice.set(t),this}get(){return this._dummyVoice.get()}releaseAll(e){const t=this.toSeconds(e);return this._activeVoices.forEach((e=>{let{voice:n}=e;n.triggerRelease(t)})),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach((e=>e.dispose())),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class D3 extends x3{constructor(){const e=O1(D3.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");super(e),this.name="Sampler",this._activeSources=new Map;const t={};Object.keys(e.urls).forEach((n=>{const r=parseInt(n,10);if(f1(p1(n)||l1(r)&&isFinite(r),`url key is neither a note or midi pitch: ${n}`),p1(n)){const r=new f2(this.context,n).toMidi();t[r]=e.urls[n]}else l1(r)&&isFinite(r)&&(t[r]=e.urls[r])})),this._buffers=new P2({urls:t,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.attack=e.attack,this.release=e.release,this.curve=e.curve,this._buffers.loaded&&Promise.resolve().then(e.onload)}static getDefaults(){return Object.assign(x3.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:J1,onerror:J1,release:.1,urls:{}})}_findClosest(e){let t=0;for(;t<96;){if(this._buffers.has(e+t))return-t;if(this._buffers.has(e-t))return t;t++}throw new Error(`No available buffers for note: ${e}`)}triggerAttack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return this.log("triggerAttack",e,t,n),Array.isArray(e)||(e=[e]),e.forEach((e=>{const r=c2(new f2(this.context,e).toFrequency()),s=Math.round(r),i=r-s,a=this._findClosest(s),o=s-a,l=this._buffers.get(o),u=o2(a+i),c=new Q2({url:l,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:u}).connect(this.output);c.start(t,0,l.duration/u,n),h1(this._activeSources.get(s))||this._activeSources.set(s,[]),this._activeSources.get(s).push(c),c.onended=()=>{if(this._activeSources&&this._activeSources.has(s)){const e=this._activeSources.get(s),t=e.indexOf(c);-1!==t&&e.splice(t,1)}}})),this}triggerRelease(e,t){return this.log("triggerRelease",e,t),Array.isArray(e)||(e=[e]),e.forEach((e=>{const n=new f2(this.context,e).toMidi();if(this._activeSources.has(n)&&this._activeSources.get(n).length){const e=this._activeSources.get(n);t=this.toSeconds(t),e.forEach((e=>{e.stop(t)})),this._activeSources.set(n,[])}})),this}releaseAll(e){const t=this.toSeconds(e);return this._activeSources.forEach((e=>{for(;e.length;){e.shift().stop(t)}})),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const s=this.toSeconds(n);return this.triggerAttack(e,s,r),h1(t)?(f1(h1(e),"notes must be an array when duration is array"),e.forEach(((e,n)=>{const r=t[Math.min(n,t.length-1)];this.triggerRelease(e,s+this.toSeconds(r))}))):this.triggerRelease(e,s+this.toSeconds(t)),this}add(e,t,n){if(f1(p1(e)||isFinite(e),`note must be a pitch or midi: ${e}`),p1(e)){const r=new f2(this.context,e).toMidi();this._buffers.add(r,t,n)}else this._buffers.add(e,t,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach((e=>{e.forEach((e=>e.dispose()))})),this._activeSources.clear(),this}}C1([m3(0)],D3.prototype,"attack",void 0),C1([m3(0)],D3.prototype,"release",void 0);class F3 extends w2{constructor(){const e=O1(F3.getDefaults(),arguments,["fade"]);super(e),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new y3({context:this.context}),this.a=new I2({context:this.context,gain:0}),this.b=new I2({context:this.context,gain:0}),this.output=new I2({context:this.context}),this._internalChannels=[this.a,this.b],this.fade=new N2({context:this.context,units:"normalRange",value:e.fade}),Q1(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",S2(this._split,this.a.gain,0),S2(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(w2.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class M3 extends w2{constructor(e){super(e),this.name="Effect",this._dryWet=new F3({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new I2({context:this.context}),this.effectReturn=new I2({context:this.context}),this.input=new I2({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(e.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],Q1(this,"wet")}static getDefaults(){return Object.assign(w2.getDefaults(),{wet:1})}connectEffect(e){return this._internalChannels.push(e),this.effectSend.chain(e,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class P3 extends w2{constructor(){const e=O1(P3.getDefaults(),arguments,["pan"]);super(e),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner,this.pan=new x2({context:this.context,param:this._panner.pan,value:e.pan,minValue:-1,maxValue:1}),this._panner.channelCount=e.channelCount,this._panner.channelCountMode="explicit",Q1(this,"pan")}static getDefaults(){return Object.assign(w2.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}const z3="bit-crusher";A3(z3,"\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n");class L3 extends w2{constructor(){const e=O1(L3.getDefaults(),arguments,["channels"]);super(e),this.name="Merge",this._merger=this.output=this.input=this.context.createChannelMerger(e.channels)}static getDefaults(){return Object.assign(w2.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class B3 extends M3{constructor(){const e=O1(B3.getDefaults(),arguments,["decay"]);super(e),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve(),this._decay=e.decay,this._preDelay=e.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(M3.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(e){m1(e=this.toSeconds(e),.001),this._decay=e,this.generate()}get preDelay(){return this._preDelay}set preDelay(e){m1(e=this.toSeconds(e),0),this._preDelay=e,this.generate()}generate(){return I1(this,void 0,void 0,(function*(){const e=this.ready,t=new t2(2,this._decay+this._preDelay,this.context.sampleRate),n=new Z2({context:t}),r=new Z2({context:t}),s=new L3({context:t});n.connect(s,0,0),r.connect(s,0,1);const i=new I2({context:t}).toDestination();s.connect(i),n.start(0),r.start(0),i.gain.setValueAtTime(0,0),i.gain.setValueAtTime(1,this._preDelay),i.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const a=t.render();return this.ready=a.then(J1),yield e,this._convolver.buffer=(yield a).get(),this}))}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class V3 extends w2{constructor(){const e=O1(V3.getDefaults(),arguments,["solo"]);super(e),this.name="Solo",this.input=this.output=new I2({context:this.context}),V3._allSolos.has(this.context)||V3._allSolos.set(this.context,new Set),V3._allSolos.get(this.context).add(this),this.solo=e.solo}static getDefaults(){return Object.assign(w2.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(e){e?this._addSolo():this._removeSolo(),V3._allSolos.get(this.context).forEach((e=>e._updateSolo()))}get muted(){return 0===this.input.gain.value}_addSolo(){V3._soloed.has(this.context)||V3._soloed.set(this.context,new Set),V3._soloed.get(this.context).add(this)}_removeSolo(){V3._soloed.has(this.context)&&V3._soloed.get(this.context).delete(this)}_isSoloed(){return V3._soloed.has(this.context)&&V3._soloed.get(this.context).has(this)}_noSolos(){return!V3._soloed.has(this.context)||V3._soloed.has(this.context)&&0===V3._soloed.get(this.context).size}_updateSolo(){this._isSoloed()||this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),V3._allSolos.get(this.context).delete(this),this._removeSolo(),this}}V3._allSolos=new Map,V3._soloed=new Map;class W3 extends w2{constructor(){const e=O1(W3.getDefaults(),arguments,["pan","volume"]);super(e),this.name="PanVol",this._panner=this.input=new P3({context:this.context,pan:e.pan,channelCount:e.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new D2({context:this.context,volume:e.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=e.mute,Q1(this,["pan","volume"])}static getDefaults(){return Object.assign(w2.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class U3 extends w2{constructor(){const e=O1(U3.getDefaults(),arguments,["volume","pan"]);super(e),this.name="Channel",this._solo=this.input=new V3({solo:e.solo,context:this.context}),this._panVol=this.output=new W3({context:this.context,pan:e.pan,volume:e.volume,mute:e.mute,channelCount:e.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),Q1(this,["pan","volume"])}static getDefaults(){return Object.assign(w2.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(e){this._solo.solo=e}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(e){this._panVol.mute=e}_getBus(e){return U3.buses.has(e)||U3.buses.set(e,new I2({context:this.context})),U3.buses.get(e)}send(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=this._getBus(e),r=new I2({context:this.context,units:"decibels",gain:t});return this.connect(r),r.connect(n),r}receive(e){return this._getBus(e).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}U3.buses=new Map;function G3(){return s2().now()}const j3=s2().transport;s2().destination,s2().destination;s2().listener;s2().draw;const H3=s2();class q3{constructor(){this.synth=void 0,this.drums=void 0,this.effectSynth=void 0,this.reverb=void 0,this.filter=void 0,this.mappings=[],this.notes=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],this.activeNotes=new Map,this.isInitialized=!1,this.initializationPromise=null,this.synth=new O3(S3).toDestination(),this.reverb=new B3(2).toDestination(),this.filter=new _3(1e3,"lowpass").connect(this.reverb),this.synth.connect(this.filter),this.drums=new D3({C2:"https://tonejs.github.io/audio/drum-samples/808/kick.mp3",D2:"https://tonejs.github.io/audio/drum-samples/808/snare.mp3",E2:"https://tonejs.github.io/audio/drum-samples/808/hihat.mp3",F2:"https://tonejs.github.io/audio/drum-samples/808/clap.mp3"}).connect(this.reverb),this.effectSynth=(new T3).connect(this.filter),this.synth.set({envelope:{attack:.02,decay:.1,sustain:.3,release:1}})}async initialize(){return this.initializationPromise||(this.initializationPromise=new Promise((async(e,t)=>{try{this.isInitialized&&"running"===H3.state||(console.log("Starting Tone.js audio context..."),"suspended"===H3.state&&(await H3.resume(),console.log("Resumed existing audio context")),await r2.resume(),console.log("Tone.js started"),"running"!==H3.state&&(console.log("Audio context still not running, trying again..."),await H3.resume()),console.log("Tone.js audio context state:",H3.state),setTimeout((()=>{try{this.synth.triggerAttackRelease("C4",.01,G3(),.01),console.log("Initialization note played")}catch(e){console.error("Error playing initialization note:",e)}}),100),this.synth.toDestination(),this.drums.toDestination(),this.effectSynth.toDestination(),this.isInitialized=!0,console.log("Audio fully initialized")),e()}catch(n){console.error("Error initializing audio:",n),this.initializationPromise=null,t(n)}finally{setTimeout((()=>{this.initializationPromise=null}),1e3)}}))),this.initializationPromise}setMappings(e){this.mappings=e}getPresets(){return[{name:"Piano",description:"Classic piano sounds with right hand for melody, left for chords",instrument:"piano",mappings:[{keypoint:"right_wrist",direction:"up",soundType:"note",soundValue:"C4"},{keypoint:"left_wrist",direction:"up",soundType:"chord",soundValue:["C3","E3","G3"]},{keypoint:"right_wrist",direction:"down",soundType:"note",soundValue:"G4"},{keypoint:"left_wrist",direction:"down",soundType:"chord",soundValue:["F3","A3","C4"]},{keypoint:"right_wrist",direction:"left",soundType:"note",soundValue:"E4"},{keypoint:"right_wrist",direction:"right",soundType:"note",soundValue:"D4"}]},{name:"Drums",description:"Percussion kit with different hand movements",instrument:"drums",mappings:[{keypoint:"right_wrist",direction:"down",soundType:"drum",soundValue:"C2"},{keypoint:"left_wrist",direction:"down",soundType:"drum",soundValue:"D2"},{keypoint:"right_wrist",direction:"right",soundType:"drum",soundValue:"E2"},{keypoint:"left_wrist",direction:"right",soundType:"drum",soundValue:"F2"},{keypoint:"right_wrist",direction:"up",soundType:"drum",soundValue:"E2"},{keypoint:"left_wrist",direction:"up",soundType:"drum",soundValue:"F2"}]},{name:"Theremin",description:"Continuous sound control like a theremin",instrument:"theremin",mappings:[{keypoint:"right_wrist",direction:"up",soundType:"note",soundValue:"C4",parameter:"pitch"},{keypoint:"left_wrist",direction:"right",soundType:"note",soundValue:"C4",parameter:"volume"},{keypoint:"right_wrist",direction:"down",soundType:"note",soundValue:"G3"},{keypoint:"left_wrist",direction:"left",soundType:"note",soundValue:"E3"}]},{name:"Electronic",description:"Synthetic sounds and effects for electronic music",instrument:"electronic",mappings:[{keypoint:"right_wrist",direction:"up",soundType:"note",soundValue:"E3"},{keypoint:"left_wrist",direction:"up",soundType:"effect",soundValue:"sweep"},{keypoint:"right_wrist",direction:"down",soundType:"effect",soundValue:"wobble"},{keypoint:"nose",direction:"right",soundType:"note",soundValue:"G2",parameter:"filter"},{keypoint:"right_wrist",direction:"left",soundType:"effect",soundValue:"arpeggio"},{keypoint:"left_wrist",direction:"left",soundType:"effect",soundValue:"shimmer"}]},{name:"Orchestral",description:"Lush orchestral sounds with strings and brass",instrument:"orchestral",mappings:[{keypoint:"right_wrist",direction:"up",soundType:"chord",soundValue:["C4","E4","G4","B4"]},{keypoint:"left_wrist",direction:"up",soundType:"chord",soundValue:["G3","B3","D4","F4"]},{keypoint:"right_shoulder",direction:"up",soundType:"note",soundValue:"C5"},{keypoint:"left_shoulder",direction:"up",soundType:"note",soundValue:"G4"},{keypoint:"right_wrist",direction:"down",soundType:"chord",soundValue:["D4","F4","A4"]},{keypoint:"left_wrist",direction:"down",soundType:"chord",soundValue:["A3","C4","E4"]}]}]}loadPreset(e){console.log(`Loading preset: ${e}`);const t=this.getPresets().find((t=>t.name===e));t?(this.setMappings(t.mappings),"piano"===t.instrument?(console.log("Configuring piano settings"),this.synth.set({oscillator:{type:"triangle"},envelope:{attack:.01,decay:.1,sustain:.8,release:2}}),this.reverb.decay=1,this.filter.frequency.value=5e3,this.synth.triggerAttackRelease("C4","16n",G3(),.5)):"drums"===t.instrument?(console.log("Configuring drum settings"),this.synth.set({oscillator:{type:"square"},envelope:{attack:.001,decay:.1,sustain:.1,release:.1}}),this.reverb.decay=.5,this.filter.frequency.value=8e3,this.drums.triggerAttackRelease("C2","16n",G3(),.5)):"electronic"===t.instrument?(console.log("Configuring electronic settings"),this.synth.set({oscillator:{type:"sawtooth"},envelope:{attack:.05,decay:.2,sustain:.5,release:.5}}),this.effectSynth.harmonicity.value=3,this.filter.frequency.value=2e3,this.effectSynth.triggerAttackRelease("C3","16n",G3(),.5)):"theremin"===t.instrument?(console.log("Configuring theremin settings"),this.synth.set({oscillator:{type:"sine"},envelope:{attack:.1,decay:.3,sustain:.9,release:1.5}}),this.filter.frequency.value=3e3,this.synth.volume.value=-10,this.synth.triggerAttackRelease("G4","8n",G3(),.3)):"orchestral"===t.instrument&&(console.log("Configuring orchestral settings"),this.synth.set({oscillator:{type:"sine"},envelope:{attack:.1,decay:.3,sustain:.7,release:3}}),this.reverb.decay=4,this.filter.frequency.value=4e3,this.synth.triggerAttackRelease(["C4","E4","G4"],"16n",G3(),.4)),console.log(`Loaded preset: ${e} (${t.instrument})`)):console.error(`Could not find preset: ${e}`)}processMovement(e,t,n,r){if(console.log(`Processing movement: ${e} ${n} (velocity: ${r})`),!this.isInitialized)return console.log("Warning: Attempting to play sound before initialization"),void this.initialize().catch((e=>console.error("Failed to initialize during processMovement",e)));try{const t=this.mappings.filter((t=>t.keypoint===e&&(t.direction===n||"any"===t.direction)));if(0===t.length){console.log(`No exact mapping found for ${e} ${n}`);const t=this.mappings.filter((t=>t.keypoint===e));if(t.length>0){const n=t[0];return console.log(`Playing sound for ${e} (using fallback mapping) with velocity ${r}`),void this.playSound(n,r)}if(console.log(`Playing default sound for ${e} ${n}`),e.includes("wrist")){const t=e.includes("right")?"C4":"G3";this.synth.triggerAttackRelease(t,"8n",G3(),Math.min(r/30,1))}else if(e.includes("shoulder")){const t=e.includes("right")?"C2":"G2";this.synth.triggerAttackRelease(t,"4n",G3(),Math.min(r/30,1))}else this.effectSynth.triggerAttackRelease("C3","8n",G3(),Math.min(r/30,1))}else t.forEach((t=>{console.log(`Playing sound for ${e} ${n} with velocity ${r} (mapped sound: ${t.soundType})`),this.playSound(t,r)}))}catch(s){console.error("Error processing movement:",s);try{this.synth.triggerAttackRelease("C4","8n",G3(),.5)}catch(i){console.error("Even fallback sound failed:",i)}}}playSound(e,t){const n=Math.min(Math.max(t/50,0),1);switch(console.log(`Playing ${e.soundType} sound: ${e.soundValue} with velocity ${n}`),e.soundType){case"note":this.playNote(e.soundValue,n,e.parameter,e.keypoint);break;case"chord":this.playChord(e.soundValue,n);break;case"drum":this.playDrum(e.soundValue,n);break;case"effect":this.playEffect(e.soundValue,n)}}playNote(e,t,n,r){try{if(n)switch(n){case"pitch":const e=Math.floor(3*t)+3,n=Math.floor(12*t)%12,s=`${this.notes[n]}${e}`,i=this.activeNotes.get(r||"");i&&this.synth.triggerRelease(i),this.synth.triggerAttack(s,G3(),.5),this.activeNotes.set(r||"",s);break;case"volume":this.synth.volume.value=a2(t);break;case"filter":const a=100+1e4*t;this.filter.frequency.value=a;break;case"tempo":const o=60+120*t;j3.bpm.value=o}else console.log(`Playing note: ${e} with velocity ${t}`),this.synth.triggerAttackRelease(e,"8n",G3(),t)}catch(s){console.error("Error playing note:",s,e)}}playChord(e,t){try{console.log(`Playing chord: ${e.join(", ")} with velocity ${t}`),this.synth.triggerAttackRelease(e,"4n",G3(),t)}catch(n){console.error("Error playing chord:",n,e)}}playDrum(e,t){try{console.log(`Playing drum: ${e} with velocity ${t}`),this.drums.triggerAttackRelease(e,"8n",G3(),t)}catch(n){console.error("Error playing drum:",n,e)}}playEffect(e,t){try{switch(console.log(`Playing effect: ${e} with intensity ${t}`),e){case"sweep":this.effectSynth.triggerAttackRelease("C3","8n",G3(),t),this.filter.frequency.rampTo(100+5e3*t,.5);break;case"wobble":this.effectSynth.modulationIndex.value=10*t,this.effectSynth.triggerAttackRelease("C2","4n",G3(),t);break;case"arpeggio":const e=["C4","E4","G4","B4","C5"];for(let n=0;n<e.length;n++)this.synth.triggerAttackRelease(e[n],"16n",G3()+.1*n,t);break;case"shimmer":this.effectSynth.harmonicity.value=3,this.reverb.decay=4,this.effectSynth.triggerAttackRelease("G4","2n",G3(),.7*t);break;default:this.effectSynth.triggerAttackRelease("C4","8n",G3(),t)}}catch(n){console.error("Error playing effect:",n,e)}}stopAllSounds(){this.synth.releaseAll(),this.effectSynth.triggerRelease(),this.activeNotes.clear()}setReverbAmount(e){this.reverb.decay=1+4*e,this.reverb.wet.value=e}setFilterFrequency(e){this.filter.frequency.value=e}setVolume(e){this.synth.volume.value=a2(e),this.effectSynth.volume.value=a2(e),this.drums.volume.value=a2(e)}isAudioRunning(){return this.isInitialized&&"running"===H3.state}playTestTone(){this.isInitialized?(console.log("Playing test tone"),this.synth.triggerAttackRelease("C4","8n",G3(),.7)):(console.log("Cannot play test tone - audio not initialized"),this.initialize().then((()=>{this.synth.triggerAttackRelease("C4","8n",G3(),.7),console.log("Test tone played after initialization")})).catch((e=>console.error("Failed to initialize for test tone",e))))}createCustomMapping(e,t,n,r,s){return{keypoint:e,direction:t,soundType:n,soundValue:r,parameter:s}}saveCustomPreset(e,t,n){console.log("Custom preset saved:",{name:e,description:t,instrument:"custom",mappings:n})}}var K3=function(e){return e.Welcome="welcome",e.Calibration="calibration",e.Performance="performance",e.Settings="settings",e.QuickPlay="quickplay",e}(K3||{});const X3=()=>{const[e,t]=(0,T.useState)(K3.Welcome),[n]=(0,T.useState)(new CY),[r]=(0,T.useState)(new q3),[s,i]=(0,T.useState)(""),[a,o]=(0,T.useState)("Piano"),[l,u]=(0,T.useState)([]),[c,h]=(0,T.useState)([]),[d,p]=(0,T.useState)(!1),[f,m]=(0,T.useState)(!1);(0,T.useEffect)((()=>{const e=r.getPresets();u(e)}),[r]);const g=(0,T.useCallback)((async()=>{try{await r.initialize(),r.loadPreset(a),p(!0)}catch(Q3){console.error("Failed to initialize audio:",Q3),alert("Unable to initialize audio. Please check your browser settings.")}}),[r,a]),y=(0,T.useCallback)((t=>{if(e===K3.Performance&&t.length>0){const e=n.processPoses(t);h(e),e.forEach((e=>{e.isIntentional&&r.processMovement(e.keypoint,e.isIntentional,e.direction,e.velocity)}))}}),[e,n,r]),b=e=>{i(e),t(K3.Performance)};return(0,vY.jsx)("div",{className:"app-container",children:(()=>{var u;switch(e){case K3.Welcome:return(0,vY.jsxs)("div",{className:"welcome-screen",children:[(0,vY.jsx)("h1",{children:"Accessible Music Creation"}),(0,vY.jsx)("p",{children:"Create music through your movements using computer vision and AI"}),(0,vY.jsxs)("div",{className:"action-buttons",children:[(0,vY.jsx)("button",{className:"primary-button",onClick:async()=>{try{await g(),t(K3.QuickPlay)}catch(Q3){console.error("Error starting Quick Play mode:",Q3)}},children:"Quick Play Mode"}),(0,vY.jsx)("button",{className:"primary-button",onClick:()=>{g(),t(K3.Calibration)},children:"Calibration Mode"}),(0,vY.jsxs)("div",{className:"returning-user",children:[(0,vY.jsx)("p",{children:"Returning user? Enter your ID:"}),(0,vY.jsxs)("div",{className:"user-login",children:[(0,vY.jsx)("input",{type:"text",placeholder:"Your User ID",value:s,onChange:e=>i(e.target.value)}),(0,vY.jsx)("button",{onClick:async()=>{if(""===s.trim())return void alert("Please enter a user ID");await g();await(async e=>{try{return!!await n.loadModel(e)&&(i(e),!0)}catch(t){return console.error("Error loading user model:",t),!1}})(s)?t(K3.Performance):alert("No saved calibration found for this user. Please create a new calibration.")},children:"Load Profile"})]})]})]})]});case K3.Calibration:return(0,vY.jsxs)("div",{className:"calibration-screen",children:[(0,vY.jsx)("h1",{children:"Movement Calibration"}),(0,vY.jsx)(_Y,{detector:n,onCalibrationComplete:b})]});case K3.Performance:return(0,vY.jsxs)("div",{className:"performance-screen",children:[(0,vY.jsx)("div",{className:"webcam-container",children:(0,vY.jsx)(kY,{onPoseDetected:y})}),(0,vY.jsxs)("div",{className:"controls-panel",children:[(0,vY.jsx)("h2",{children:"Music Controls"}),(0,vY.jsxs)("div",{className:"preset-selector",children:[(0,vY.jsx)("label",{children:"Sound Preset:"}),(0,vY.jsx)("select",{value:a,onChange:e=>{return t=e.target.value,o(t),void r.loadPreset(t);var t},children:l.map((e=>(0,vY.jsx)("option",{value:e.name,children:e.name},e.name)))})]}),(0,vY.jsx)("div",{className:"preset-description",children:null===(u=l.find((e=>e.name===a)))||void 0===u?void 0:u.description}),(0,vY.jsxs)("div",{className:"action-buttons",children:[(0,vY.jsx)("button",{onClick:()=>t(K3.Settings),children:"Settings"}),(0,vY.jsxs)("button",{onClick:()=>m(!f),children:[f?"Hide":"Show"," Debug Info"]}),(0,vY.jsx)("button",{onClick:()=>t(K3.Welcome),children:"Back to Menu"})]}),f&&(0,vY.jsxs)("div",{className:"debug-info",children:[(0,vY.jsx)("h3",{children:"Movement Detection:"}),(0,vY.jsx)("ul",{children:c.map(((e,t)=>(0,vY.jsxs)("li",{className:e.isIntentional?"intentional":"unintentional",children:[e.keypoint,": ",e.direction,"(v: ",e.velocity.toFixed(2),",",e.isIntentional?" INTENTIONAL":" unintentional",")"]},t)))})]})]})]});case K3.QuickPlay:return(0,vY.jsx)(EY,{soundEngine:r,onBack:()=>t(K3.Welcome)});case K3.Settings:return(0,vY.jsxs)("div",{className:"settings-screen",children:[(0,vY.jsx)("h1",{children:"Settings"}),(0,vY.jsxs)("div",{className:"settings-section",children:[(0,vY.jsx)("h2",{children:"User Profile"}),(0,vY.jsxs)("p",{children:["Current User: ",(0,vY.jsx)("strong",{children:s})]}),(0,vY.jsx)("button",{onClick:()=>t(K3.Calibration),children:"Recalibrate Movements"})]}),(0,vY.jsxs)("div",{className:"settings-section",children:[(0,vY.jsx)("h2",{children:"Sound Settings"}),(0,vY.jsx)("p",{children:"Adjust your sound preferences:"}),(0,vY.jsxs)("div",{className:"form-group",children:[(0,vY.jsx)("label",{children:"Reverb Amount:"}),(0,vY.jsx)("input",{type:"range",min:"0",max:"1",step:"0.1",defaultValue:"0.3",onChange:e=>{const t=parseFloat(e.target.value);r.setReverbAmount(t)}})]}),(0,vY.jsxs)("div",{className:"form-group",children:[(0,vY.jsx)("label",{children:"Volume:"}),(0,vY.jsx)("input",{type:"range",min:"0",max:"1",step:"0.1",defaultValue:"0.7",onChange:e=>{const t=parseFloat(e.target.value);r.setVolume(t)}})]})]}),(0,vY.jsx)("button",{className:"back-button",onClick:()=>t(K3.Performance),children:"Back to Performance"})]})}})()})},Y3=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,453)).then((t=>{let{getCLS:n,getFID:r,getFCP:s,getLCP:i,getTTFB:a}=t;n(e),r(e),s(e),i(e),a(e)}))};N.createRoot(document.getElementById("root")).render((0,vY.jsx)(T.StrictMode,{children:(0,vY.jsx)(X3,{})})),Y3()})()})();
//# sourceMappingURL=main.7f9f668b.js.map